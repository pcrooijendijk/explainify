[
  [
    {
      "cve_id": [
        "CVE-2025-11579",
        "https://github.com/nwaples/rardecode/commit/52fb4e825c936636f251f7e7deded39ab11df9a9"
      ],
      "repo": "rardecode",
      "commit_hash": "52fb4e825c936636f251f7e7deded39ab11df9a9",
      "commit_message": "allow max dictionary size to be set, with default now at 4GB",
      "files_changed": [
        {
          "filename": "reader.go",
          "old_url": "https://raw.githubusercontent.com/nwaples/rardecode/9f4b0d19121de2811fe5c85d6c8ab7dfd25c02d1/reader.go",
          "new_url": "https://raw.githubusercontent.com/nwaples/rardecode/52fb4e825c936636f251f7e7deded39ab11df9a9/reader.go",
          "diff": "@@ -336,7 +336,7 @@ func (pr *packedFileReader) newArchiveFileFrom(r archiveFile, blocks *fileBlockL\n \t\tif !h.UnKnownSize && h.winSize > h.UnPackedSize {\n \t\t\th.winSize = h.UnPackedSize\n \t\t}\n-\t\tif h.winSize > maxDictSize {\n+\t\tif h.winSize > maxDictSize || h.winSize > pr.opt.maxDictSize {\n \t\t\treturn nil, ErrDictionaryTooLarge\n \t\t}\n \t\tif h.winSize > math.MaxInt {"
        },
        {
          "filename": "volume.go",
          "old_url": "https://raw.githubusercontent.com/nwaples/rardecode/9f4b0d19121de2811fe5c85d6c8ab7dfd25c02d1/volume.go",
          "new_url": "https://raw.githubusercontent.com/nwaples/rardecode/52fb4e825c936636f251f7e7deded39ab11df9a9/volume.go",
          "diff": "@@ -21,18 +21,23 @@ var (\n \tdefaultFS = osFS{}\n )\n \n+const (\n+\tDefaultMaxDictionarySize = 4 << 30 // default max dictionary size of 4GB\n+)\n+\n type osFS struct{}\n \n func (fs osFS) Open(name string) (fs.File, error) {\n \treturn os.Open(name)\n }\n \n type options struct {\n-\tbsize     int     // size to be use for bufio.Reader\n-\tfs        fs.FS   // filesystem to use to open files\n-\tpass      *string // password for encrypted volumes\n-\tskipCheck bool\n-\topenCheck bool\n+\tbsize       int     // size to be use for bufio.Reader\n+\tmaxDictSize int64   // max dictionary size\n+\tfs          fs.FS   // filesystem to use to open files\n+\tpass        *string // password for encrypted volumes\n+\tskipCheck   bool\n+\topenCheck   bool\n }\n \n // An Option is used for optional archive extraction settings.\n@@ -43,6 +48,14 @@ func BufferSize(size int) Option {\n \treturn func(o *options) { o.bsize = size }\n }\n \n+// MaxDictionarySize sets the maximum size in bytes of the dictionary used in decoding a file.\n+// Any attempt to decode a file with a larger size will return an error.\n+// The default size if not set is DefaultMaxDictionarySize.\n+// Any size above 64GB will be ignored. Any size below 256kB will prevent any file from being decoded.\n+func MaxDictionarySize(size int64) Option {\n+\treturn func(o *options) { o.maxDictSize = size }\n+}\n+\n // FileSystem sets the fs.FS to be used for opening archive volumes.\n func FileSystem(fs fs.FS) Option {\n \treturn func(o *options) { o.fs = fs }\n@@ -60,7 +73,10 @@ func SkipCheck(o *options) { o.skipCheck = true }\n func OpenFSCheck(o *options) { o.openCheck = true }\n \n func getOptions(opts []Option) *options {\n-\topt := &options{}\n+\topt := &options{\n+\t\tfs:          defaultFS,\n+\t\tmaxDictSize: DefaultMaxDictionarySize,\n+\t}\n \tfor _, f := range opts {\n \t\tf(opt)\n \t}\n@@ -72,9 +88,6 @@ func getOptions(opts []Option) *options {\n \t\t\topt.pass = &pw\n \t\t}\n \t}\n-\tif opt.fs == nil {\n-\t\topt.fs = defaultFS\n-\t}\n \treturn opt\n }\n "
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61780",
        "https://github.com/rack/rack/commit/57277b7741581fa827472c5c666f6e6a33abd784"
      ],
      "repo": "rack",
      "commit_hash": "57277b7741581fa827472c5c666f6e6a33abd784",
      "commit_message": "Improper handling of proxy headers in `Rack::Sendfile` may allow proxy bypass.  - Ignore `HTTP_X_SENDFILE_TYPE` header from requests to prevent attackers from enabling sendfile features. - Only read `HTTP_X_ACCEL_MAPPING` when `x-accel-redirect` is explicitly configured and no app-level mappings exist. - Prefer `\\A` instead of `^` to match the start of path mappings.",
      "files_changed": [
        {
          "filename": "CHANGELOG.md",
          "old_url": "https://raw.githubusercontent.com/rack/rack/403b74b2441d666845177ce769036e294f663712/CHANGELOG.md",
          "new_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/CHANGELOG.md",
          "diff": "@@ -2,6 +2,12 @@\n \n All notable changes to this project will be documented in this file. For info on how to format all future additions to this file please reference [Keep A Changelog](https://keepachangelog.com/en/1.0.0/).\n \n+## [3.2.3] - 2025-10-10\n+\n+### Security\n+\n+- [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+\n ## [3.2.2] - 2025-10-07\n \n ### Security\n@@ -67,6 +73,13 @@ This release continues Rack's evolution toward a cleaner, more efficient foundat\n - `SERVER_NAME` and `HTTP_HOST` are now more strictly validated according to the relevant specifications. ([#2298](https://github.com/rack/rack/pull/2298), [@ioquatix])\n - `Rack::Lint` now disallows `PATH_INFO=\"\" SCRIPT_NAME=\"\"`. ([#2298](https://github.com/rack/rack/issues/2307), [@jeremyevans])\n \n+## [3.1.18] - 2025-10-10\n+\n+### Security\n+\n+- [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+- [CVE-2025-61919](https://github.com/advisories/GHSA-6xw4-3v39-52mm) Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.\n+\n ## [3.1.17] - 2025-10-07\n \n ### Security\n@@ -444,6 +457,13 @@ This release introduces major improvements to Rack, including enhanced support f\n - Fix multipart filename generation for filenames that contain spaces. Encode spaces as \"%20\" instead of \"+\" which will be decoded properly by the multipart parser. ([#1736](https://github.com/rack/rack/pull/1645), [@muirdm](https://github.com/muirdm))\n - `Rack::Request#scheme` returns `ws` or `wss` when one of the `X-Forwarded-Scheme` / `X-Forwarded-Proto` headers is set to `ws` or `wss`, respectively. ([#1730](https://github.com/rack/rack/issues/1730), [@erwanst](https://github.com/erwanst))\n \n+## [2.2.20] - 2025-10-10\n+\n+### Security\n+\n+- [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+- [CVE-2025-61919](https://github.com/advisories/GHSA-6xw4-3v39-52mm) Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.\n+\n ## [2.2.19] - 2025-10-07\n \n ### Security"
        },
        {
          "filename": "lib/rack/sendfile.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/403b74b2441d666845177ce769036e294f663712/lib/rack/sendfile.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/lib/rack/sendfile.rb",
          "diff": "@@ -16,21 +16,21 @@ module Rack\n   # delivery code.\n   #\n   # In order to take advantage of this middleware, the response body must\n-  # respond to +to_path+ and the request must include an x-sendfile-type\n+  # respond to +to_path+ and the request must include an `x-sendfile-type`\n   # header. Rack::Files and other components implement +to_path+ so there's\n-  # rarely anything you need to do in your application. The x-sendfile-type\n+  # rarely anything you need to do in your application. The `x-sendfile-type`\n   # header is typically set in your web servers configuration. The following\n   # sections attempt to document\n   #\n   # === Nginx\n   #\n-  # Nginx supports the x-accel-redirect header. This is similar to x-sendfile\n+  # Nginx supports the `x-accel-redirect` header. This is similar to `x-sendfile`\n   # but requires parts of the filesystem to be mapped into a private URL\n   # hierarchy.\n   #\n   # The following example shows the Nginx configuration required to create\n-  # a private \"/files/\" area, enable x-accel-redirect, and pass the special\n-  # x-sendfile-type and x-accel-mapping headers to the backend:\n+  # a private \"/files/\" area, enable `x-accel-redirect`, and pass the special\n+  # `x-accel-mapping` header to the backend:\n   #\n   #   location ~ /files/(.*) {\n   #     internal,\n@@ -44,24 +44,29 @@ module Rack\n   #     proxy_set_header   X-Real-IP           $remote_addr,\n   #     proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for,\n   #\n-  #     proxy_set_header   x-sendfile-type     x-accel-redirect,\n   #     proxy_set_header   x-accel-mapping     /var/www/=/files/,\n   #\n   #     proxy_pass         http://127.0.0.1:8080/,\n   #   }\n   #\n-  # Note that the x-sendfile-type header must be set exactly as shown above.\n-  # The x-accel-mapping header should specify the location on the file system,\n+  # The `x-accel-mapping` header should specify the location on the file system,\n   # followed by an equals sign (=), followed name of the private URL pattern\n   # that it maps to. The middleware performs a simple substitution on the\n   # resulting path.\n   #\n+  # To enable `x-accel-redirect`, you must configure the middleware explicitly:\n+  #\n+  #   use Rack::Sendfile, \"x-accel-redirect\"\n+  #\n+  # For security reasons, the `x-sendfile-type` header from requests is ignored.\n+  # The sendfile variation must be set via the middleware constructor.\n+  #\n   # See Also: https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile\n   #\n   # === lighttpd\n   #\n-  # Lighttpd has supported some variation of the x-sendfile header for some\n-  # time, although only recent version support x-sendfile in a reverse proxy\n+  # Lighttpd has supported some variation of the `x-sendfile` header for some\n+  # time, although only recent version support `x-sendfile` in a reverse proxy\n   # configuration.\n   #\n   #   $HTTP[\"host\"] == \"example.com\" {\n@@ -83,7 +88,7 @@ module Rack\n   #\n   # === Apache\n   #\n-  # x-sendfile is supported under Apache 2.x using a separate module:\n+  # `x-sendfile` is supported under Apache 2.x using a separate module:\n   #\n   # https://tn123.org/mod_xsendfile/\n   #\n@@ -97,16 +102,28 @@ module Rack\n   # === Mapping parameter\n   #\n   # The third parameter allows for an overriding extension of the\n-  # x-accel-mapping header. Mappings should be provided in tuples of internal to\n+  # `x-accel-mapping` header. Mappings should be provided in tuples of internal to\n   # external. The internal values may contain regular expression syntax, they\n   # will be matched with case indifference.\n+  #\n+  # When `x-accel-redirect` is explicitly enabled via the variation parameter,\n+  # and no application-level mappings are provided, the middleware will read\n+  # the `x-accel-mapping` header from the proxy. This allows nginx to control\n+  # the path mapping without requiring application-level configuration.\n+  #\n+  # === Security\n+  #\n+  # For security reasons, the `x-sendfile-type` header from HTTP requests is\n+  # ignored. The sendfile variation must be explicitly configured via the\n+  # middleware constructor to prevent information disclosure vulnerabilities\n+  # where attackers could bypass proxy restrictions.\n \n   class Sendfile\n     def initialize(app, variation = nil, mappings = [])\n       @app = app\n       @variation = variation\n       @mappings = mappings.map do |internal, external|\n-        [/^#{internal}/i, external]\n+        [/\\A#{internal}/i, external]\n       end\n     end\n \n@@ -145,22 +162,35 @@ def call(env)\n     end\n \n     private\n+\n     def variation(env)\n-      @variation ||\n-        env['sendfile.type'] ||\n-        env['HTTP_X_SENDFILE_TYPE']\n+      # Note: HTTP_X_SENDFILE_TYPE is intentionally NOT read for security reasons.\n+      # Attackers could use this header to enable x-accel-redirect and bypass proxy restrictions.\n+      @variation || env['sendfile.type']\n+    end\n+\n+    def x_accel_mapping(env)\n+      # Only allow header when:\n+      # 1. `x-accel-redirect` is explicitly enabled via constructor.\n+      # 2. No application-level mappings are configured.\n+      return nil unless @variation =~ /x-accel-redirect/i\n+      return nil if @mappings.any?\n+      \n+      env['HTTP_X_ACCEL_MAPPING']\n     end\n \n     def map_accel_path(env, path)\n       if mapping = @mappings.find { |internal, _| internal =~ path }\n-        path.sub(*mapping)\n-      elsif mapping = env['HTTP_X_ACCEL_MAPPING']\n+        return path.sub(*mapping)\n+      elsif mapping = x_accel_mapping(env)\n+        # Safe to use header: explicit config + no app mappings:\n         mapping.split(',').map(&:strip).each do |m|\n           internal, external = m.split('=', 2).map(&:strip)\n-          new_path = path.sub(/^#{internal}/i, external)\n+          new_path = path.sub(/\\A#{internal}/i, external)\n           return new_path unless path == new_path\n         end\n-        path\n+\n+        return path\n       end\n     end\n   end"
        },
        {
          "filename": "test/spec_sendfile.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/403b74b2441d666845177ce769036e294f663712/test/spec_sendfile.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/test/spec_sendfile.rb",
          "diff": "@@ -22,12 +22,12 @@ def simple_app(body = sendfile_body)\n     lambda { |env| [200, { 'content-type' => 'text/plain' }, body] }\n   end\n \n-  def sendfile_app(body, mappings = [])\n-    Rack::Lint.new Rack::Sendfile.new(simple_app(body), nil, mappings)\n+  def sendfile_app(body, mappings = [], variation = nil)\n+    Rack::Lint.new Rack::Sendfile.new(simple_app(body), variation, mappings)\n   end\n \n-  def request(headers = {}, body = sendfile_body, mappings = [])\n-    yield Rack::MockRequest.new(sendfile_app(body, mappings)).get('/', headers)\n+  def request(headers = {}, body = sendfile_body, mappings = [], variation = nil)\n+    yield Rack::MockRequest.new(sendfile_app(body, mappings, variation)).get('/', headers)\n   end\n \n   def open_file(path)\n@@ -48,7 +48,8 @@ def open_file(path)\n \n   it \"does nothing and logs to rack.errors when incorrect x-sendfile-type header present\" do\n     io = StringIO.new\n-    request 'HTTP_X_SENDFILE_TYPE' => 'X-Banana', 'rack.errors' => io do |response|\n+    # Configure with wrong variation type\n+    request({ 'rack.errors' => io }, sendfile_body, [], 'X-Banana') do |response|\n       response.must_be :ok?\n       response.body.must_equal 'Hello World'\n       response.headers.wont_include 'x-sendfile'\n@@ -59,7 +60,7 @@ def open_file(path)\n   end\n \n   it \"sets x-sendfile response header and discards body\" do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' do |response|\n+    request({}, sendfile_body, [], 'X-Sendfile') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -71,7 +72,7 @@ def open_file(path)\n     body = sendfile_body\n     closed = false\n     body.define_singleton_method(:close){closed = true}\n-    request({'HTTP_X_SENDFILE_TYPE' => 'x-sendfile'}, body) do |response|\n+    request({}, body, [], 'X-Sendfile') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -81,7 +82,7 @@ def open_file(path)\n   end\n \n   it \"sets x-lighttpd-send-file response header and discards body\" do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'x-lighttpd-send-file' do |response|\n+    request({}, sendfile_body, [], 'X-Lighttpd-Send-File') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -91,10 +92,9 @@ def open_file(path)\n \n   it \"sets x-accel-redirect response header and discards body\" do\n     headers = {\n-      'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n       'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/foo/bar/\"\n     }\n-    request headers do |response|\n+    request(headers, sendfile_body, [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -104,10 +104,9 @@ def open_file(path)\n \n   it \"sets x-accel-redirect response header to percent-encoded path\" do\n     headers = {\n-      'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n       'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/foo/bar%/\"\n     }\n-    request headers, sendfile_body('file_with_%_?_symbol') do |response|\n+    request(headers, sendfile_body('file_with_%_?_symbol'), [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -116,7 +115,7 @@ def open_file(path)\n   end\n \n   it 'writes to rack.error when no x-accel-mapping is specified' do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect' do |response|\n+    request({}, sendfile_body, [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_equal 'Hello World'\n       response.headers.wont_include 'x-accel-redirect'\n@@ -125,7 +124,7 @@ def open_file(path)\n   end\n \n   it 'does nothing when body does not respond to #to_path' do\n-    request({ 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' }, ['Not a file...']) do |response|\n+    request({}, ['Not a file...'], [], 'X-Sendfile') do |response|\n       response.body.must_equal 'Not a file...'\n       response.headers.wont_include 'x-sendfile'\n     end\n@@ -147,14 +146,14 @@ def open_file(path)\n         [\"#{dir2}/\", '/wibble/']\n       ]\n \n-      request({ 'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect' }, first_body, mappings) do |response|\n+      request({}, first_body, mappings, 'X-Accel-Redirect') do |response|\n         response.must_be :ok?\n         response.body.must_be :empty?\n         response.headers['content-length'].must_equal '0'\n         response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n       end\n \n-      request({ 'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect' }, second_body, mappings) do |response|\n+      request({}, second_body, mappings, 'X-Accel-Redirect') do |response|\n         response.must_be :ok?\n         response.body.must_be :empty?\n         response.headers['content-length'].must_equal '0'\n@@ -181,34 +180,142 @@ def open_file(path)\n       third_body = open_file(File.join(dir3, 'rack_sendfile'))\n       third_body.puts 'hello again world'\n \n+      # Now we need to explicitly enable x-accel-redirect in the constructor\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(first_body), \"X-Accel-Redirect\", [])\n+      \n       headers = {\n-        'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n         'HTTP_X_ACCEL_MAPPING' => \"#{dir1}/=/foo/bar/, #{dir2}/=/wibble/\"\n       }\n \n-      request(headers, first_body) do |response|\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n+\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(second_body), \"X-Accel-Redirect\", [])\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal '/wibble/rack_sendfile'\n+\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(third_body), \"X-Accel-Redirect\", [])\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal \"#{dir3}/rack_sendfile\"\n+    ensure\n+      FileUtils.remove_entry_secure dir1\n+      FileUtils.remove_entry_secure dir2\n+      FileUtils.remove_entry_secure dir3\n+    end\n+  end\n+\n+  # Security tests for CVE mitigation\n+  describe \"security: information disclosure prevention\" do\n+    it \"ignores HTTP_X_SENDFILE_TYPE header to prevent attacker-controlled sendfile activation\" do\n+      # Attacker tries to enable x-sendfile via header\n+      request 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' do |response|\n         response.must_be :ok?\n-        response.body.must_be :empty?\n-        response.headers['content-length'].must_equal '0'\n-        response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-sendfile'\n       end\n+    end\n \n-      request(headers, second_body) do |response|\n+    it \"ignores HTTP_X_SENDFILE_TYPE header attempting to enable x-accel-redirect\" do\n+      # Attacker tries to enable x-accel-redirect via header with mapping\n+      headers = {\n+        'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n+        'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/attacker/path/\"\n+      }\n+      request headers do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-accel-redirect'\n+      end\n+    end\n+\n+    it \"ignores HTTP_X_ACCEL_MAPPING when x-accel-redirect is not explicitly enabled\" do\n+      # Even if attacker sends mapping header, it should be ignored without explicit config\n+      headers = {\n+        'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/attacker/path/\"\n+      }\n+      request headers do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-accel-redirect'\n+      end\n+    end\n+\n+    it \"ignores HTTP_X_ACCEL_MAPPING when application-level mappings are configured\" do\n+      # When app provides mappings, header should be ignored for security\n+      begin\n+        dir = Dir.mktmpdir\n+        body = open_file(File.join(dir, 'rack_sendfile'))\n+        body.puts 'test'\n+        \n+        app_mappings = [[\"#{dir}/\", '/app/mapping/']]\n+        app = Rack::Lint.new Rack::Sendfile.new(simple_app(body), \"X-Accel-Redirect\", app_mappings)\n+        \n+        headers = {\n+          'HTTP_X_ACCEL_MAPPING' => \"#{dir}/=/attacker/path/\"\n+        }\n+        \n+        response = Rack::MockRequest.new(app).get('/', headers)\n         response.must_be :ok?\n         response.body.must_be :empty?\n-        response.headers['content-length'].must_equal '0'\n-        response.headers['x-accel-redirect'].must_equal '/wibble/rack_sendfile'\n+        response.headers['x-accel-redirect'].must_equal '/app/mapping/rack_sendfile'\n+        response.headers['x-accel-redirect'].wont_equal '/attacker/path/rack_sendfile'\n+      ensure\n+        FileUtils.remove_entry_secure dir\n       end\n+    end\n \n-      request(headers, third_body) do |response|\n+    it \"allows HTTP_X_ACCEL_MAPPING only when x-accel-redirect explicitly enabled with no app mappings\" do\n+      # This is the safe use case: explicit config + no app mappings = allow header\n+      begin\n+        dir = Dir.mktmpdir\n+        body = open_file(File.join(dir, 'rack_sendfile'))\n+        body.puts 'test'\n+        \n+        app = Rack::Lint.new Rack::Sendfile.new(simple_app(body), \"X-Accel-Redirect\", [])\n+        \n+        headers = {\n+          'HTTP_X_ACCEL_MAPPING' => \"#{dir}/=/safe/nginx/mapping/\"\n+        }\n+        \n+        response = Rack::MockRequest.new(app).get('/', headers)\n         response.must_be :ok?\n         response.body.must_be :empty?\n-        response.headers['content-length'].must_equal '0'\n-        response.headers['x-accel-redirect'].must_equal \"#{dir3}/rack_sendfile\"\n+        response.headers['x-accel-redirect'].must_equal '/safe/nginx/mapping/rack_sendfile'\n+      ensure\n+        FileUtils.remove_entry_secure dir\n       end\n-    ensure\n-      FileUtils.remove_entry_secure dir1\n-      FileUtils.remove_entry_secure dir2\n+    end\n+\n+    it \"does not allow x-lighttpd-send-file activation via header\" do\n+      # Verify other sendfile types also can't be enabled via headers\n+      request 'HTTP_X_SENDFILE_TYPE' => 'x-lighttpd-send-file' do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-lighttpd-send-file'\n+      end\n+    end\n+\n+    it \"requires explicit middleware configuration for any sendfile variation\" do\n+      # Test that sendfile.type env var still works (internal, not from HTTP headers)\n+      body = sendfile_body\n+      app = lambda { |env| [200, { 'content-type' => 'text/plain' }, body] }\n+      middleware = Rack::Lint.new Rack::Sendfile.new(app)\n+      \n+      env = Rack::MockRequest.env_for('/', { 'sendfile.type' => 'x-sendfile' })\n+      status, headers, response_body = middleware.call(env)\n+      \n+      status.must_equal 200\n+      headers['x-sendfile'].must_equal File.join(Dir.tmpdir, \"rack_sendfile\")\n+      headers['content-length'].must_equal '0'\n     end\n   end\n end"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61780",
        "https://github.com/rack/rack/commit/7e69f65eefe9cd2868df9f9f3b0977b86f93523a"
      ],
      "repo": "rack",
      "commit_hash": "7e69f65eefe9cd2868df9f9f3b0977b86f93523a",
      "commit_message": "Improper handling of proxy headers in `Rack::Sendfile` may allow proxy bypass.  - Ignore `HTTP_X_SENDFILE_TYPE` header from requests to prevent attackers from enabling sendfile features. - Only read `HTTP_X_ACCEL_MAPPING` when `x-accel-redirect` is explicitly configured and no app-level mappings exist. - Prefer `\\A` instead of `^` to match the start of path mappings.",
      "files_changed": [
        {
          "filename": "CHANGELOG.md",
          "old_url": "https://raw.githubusercontent.com/rack/rack/db6bc0f64f24a3aa1aa83223da112e25333b049a/CHANGELOG.md",
          "new_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/CHANGELOG.md",
          "diff": "@@ -2,6 +2,12 @@\n \n All notable changes to this project will be documented in this file. For info on how to format all future additions to this file please reference [Keep A Changelog](https://keepachangelog.com/en/1.0.0/).\n \n+## [3.1.18] - 2025-10-10\n+\n+### Security\n+\n+- [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+\n ## [3.1.17] - 2025-10-07\n \n ### Security\n@@ -373,6 +379,13 @@ Rack v3.1 is primarily a maintenance release that removes features deprecated in\n - Fix multipart filename generation for filenames that contain spaces. Encode spaces as \"%20\" instead of \"+\" which will be decoded properly by the multipart parser. ([#1736](https://github.com/rack/rack/pull/1645), [@muirdm](https://github.com/muirdm))\n - `Rack::Request#scheme` returns `ws` or `wss` when one of the `X-Forwarded-Scheme` / `X-Forwarded-Proto` headers is set to `ws` or `wss`, respectively. ([#1730](https://github.com/rack/rack/issues/1730), [@erwanst](https://github.com/erwanst))\n \n+## [2.2.20] - 2025-10-10\n+\n+### Security\n+\n+- [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+- [CVE-2025-61919](https://github.com/advisories/GHSA-6xw4-3v39-52mm) Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.\n+\n ## [2.2.19] - 2025-10-07\n \n ### Security"
        },
        {
          "filename": "lib/rack/sendfile.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/db6bc0f64f24a3aa1aa83223da112e25333b049a/lib/rack/sendfile.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/lib/rack/sendfile.rb",
          "diff": "@@ -16,21 +16,21 @@ module Rack\n   # delivery code.\n   #\n   # In order to take advantage of this middleware, the response body must\n-  # respond to +to_path+ and the request must include an x-sendfile-type\n+  # respond to +to_path+ and the request must include an `x-sendfile-type`\n   # header. Rack::Files and other components implement +to_path+ so there's\n-  # rarely anything you need to do in your application. The x-sendfile-type\n+  # rarely anything you need to do in your application. The `x-sendfile-type`\n   # header is typically set in your web servers configuration. The following\n   # sections attempt to document\n   #\n   # === Nginx\n   #\n-  # Nginx supports the x-accel-redirect header. This is similar to x-sendfile\n+  # Nginx supports the `x-accel-redirect` header. This is similar to `x-sendfile`\n   # but requires parts of the filesystem to be mapped into a private URL\n   # hierarchy.\n   #\n   # The following example shows the Nginx configuration required to create\n-  # a private \"/files/\" area, enable x-accel-redirect, and pass the special\n-  # x-sendfile-type and x-accel-mapping headers to the backend:\n+  # a private \"/files/\" area, enable `x-accel-redirect`, and pass the special\n+  # `x-accel-mapping` header to the backend:\n   #\n   #   location ~ /files/(.*) {\n   #     internal,\n@@ -44,24 +44,29 @@ module Rack\n   #     proxy_set_header   X-Real-IP           $remote_addr,\n   #     proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for,\n   #\n-  #     proxy_set_header   x-sendfile-type     x-accel-redirect,\n   #     proxy_set_header   x-accel-mapping     /var/www/=/files/,\n   #\n   #     proxy_pass         http://127.0.0.1:8080/,\n   #   }\n   #\n-  # Note that the x-sendfile-type header must be set exactly as shown above.\n-  # The x-accel-mapping header should specify the location on the file system,\n+  # The `x-accel-mapping` header should specify the location on the file system,\n   # followed by an equals sign (=), followed name of the private URL pattern\n   # that it maps to. The middleware performs a simple substitution on the\n   # resulting path.\n   #\n+  # To enable `x-accel-redirect`, you must configure the middleware explicitly:\n+  #\n+  #   use Rack::Sendfile, \"x-accel-redirect\"\n+  #\n+  # For security reasons, the `x-sendfile-type` header from requests is ignored.\n+  # The sendfile variation must be set via the middleware constructor.\n+  #\n   # See Also: https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile\n   #\n   # === lighttpd\n   #\n-  # Lighttpd has supported some variation of the x-sendfile header for some\n-  # time, although only recent version support x-sendfile in a reverse proxy\n+  # Lighttpd has supported some variation of the `x-sendfile` header for some\n+  # time, although only recent version support `x-sendfile` in a reverse proxy\n   # configuration.\n   #\n   #   $HTTP[\"host\"] == \"example.com\" {\n@@ -83,7 +88,7 @@ module Rack\n   #\n   # === Apache\n   #\n-  # x-sendfile is supported under Apache 2.x using a separate module:\n+  # `x-sendfile` is supported under Apache 2.x using a separate module:\n   #\n   # https://tn123.org/mod_xsendfile/\n   #\n@@ -97,16 +102,28 @@ module Rack\n   # === Mapping parameter\n   #\n   # The third parameter allows for an overriding extension of the\n-  # x-accel-mapping header. Mappings should be provided in tuples of internal to\n+  # `x-accel-mapping` header. Mappings should be provided in tuples of internal to\n   # external. The internal values may contain regular expression syntax, they\n   # will be matched with case indifference.\n+  #\n+  # When `x-accel-redirect` is explicitly enabled via the variation parameter,\n+  # and no application-level mappings are provided, the middleware will read\n+  # the `x-accel-mapping` header from the proxy. This allows nginx to control\n+  # the path mapping without requiring application-level configuration.\n+  #\n+  # === Security\n+  #\n+  # For security reasons, the `x-sendfile-type` header from HTTP requests is\n+  # ignored. The sendfile variation must be explicitly configured via the\n+  # middleware constructor to prevent information disclosure vulnerabilities\n+  # where attackers could bypass proxy restrictions.\n \n   class Sendfile\n     def initialize(app, variation = nil, mappings = [])\n       @app = app\n       @variation = variation\n       @mappings = mappings.map do |internal, external|\n-        [/^#{internal}/i, external]\n+        [/\\A#{internal}/i, external]\n       end\n     end\n \n@@ -145,22 +162,35 @@ def call(env)\n     end\n \n     private\n+\n     def variation(env)\n-      @variation ||\n-        env['sendfile.type'] ||\n-        env['HTTP_X_SENDFILE_TYPE']\n+      # Note: HTTP_X_SENDFILE_TYPE is intentionally NOT read for security reasons.\n+      # Attackers could use this header to enable x-accel-redirect and bypass proxy restrictions.\n+      @variation || env['sendfile.type']\n+    end\n+\n+    def x_accel_mapping(env)\n+      # Only allow header when:\n+      # 1. `x-accel-redirect` is explicitly enabled via constructor.\n+      # 2. No application-level mappings are configured.\n+      return nil unless @variation =~ /x-accel-redirect/i\n+      return nil if @mappings.any?\n+      \n+      env['HTTP_X_ACCEL_MAPPING']\n     end\n \n     def map_accel_path(env, path)\n       if mapping = @mappings.find { |internal, _| internal =~ path }\n-        path.sub(*mapping)\n-      elsif mapping = env['HTTP_X_ACCEL_MAPPING']\n+        return path.sub(*mapping)\n+      elsif mapping = x_accel_mapping(env)\n+        # Safe to use header: explicit config + no app mappings:\n         mapping.split(',').map(&:strip).each do |m|\n           internal, external = m.split('=', 2).map(&:strip)\n-          new_path = path.sub(/^#{internal}/i, external)\n+          new_path = path.sub(/\\A#{internal}/i, external)\n           return new_path unless path == new_path\n         end\n-        path\n+\n+        return path\n       end\n     end\n   end"
        },
        {
          "filename": "test/spec_sendfile.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/db6bc0f64f24a3aa1aa83223da112e25333b049a/test/spec_sendfile.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/test/spec_sendfile.rb",
          "diff": "@@ -22,12 +22,12 @@ def simple_app(body = sendfile_body)\n     lambda { |env| [200, { 'content-type' => 'text/plain' }, body] }\n   end\n \n-  def sendfile_app(body, mappings = [])\n-    Rack::Lint.new Rack::Sendfile.new(simple_app(body), nil, mappings)\n+  def sendfile_app(body, mappings = [], variation = nil)\n+    Rack::Lint.new Rack::Sendfile.new(simple_app(body), variation, mappings)\n   end\n \n-  def request(headers = {}, body = sendfile_body, mappings = [])\n-    yield Rack::MockRequest.new(sendfile_app(body, mappings)).get('/', headers)\n+  def request(headers = {}, body = sendfile_body, mappings = [], variation = nil)\n+    yield Rack::MockRequest.new(sendfile_app(body, mappings, variation)).get('/', headers)\n   end\n \n   def open_file(path)\n@@ -48,7 +48,8 @@ def open_file(path)\n \n   it \"does nothing and logs to rack.errors when incorrect x-sendfile-type header present\" do\n     io = StringIO.new\n-    request 'HTTP_X_SENDFILE_TYPE' => 'X-Banana', 'rack.errors' => io do |response|\n+    # Configure with wrong variation type\n+    request({ 'rack.errors' => io }, sendfile_body, [], 'X-Banana') do |response|\n       response.must_be :ok?\n       response.body.must_equal 'Hello World'\n       response.headers.wont_include 'x-sendfile'\n@@ -59,7 +60,7 @@ def open_file(path)\n   end\n \n   it \"sets x-sendfile response header and discards body\" do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' do |response|\n+    request({}, sendfile_body, [], 'X-Sendfile') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -71,7 +72,7 @@ def open_file(path)\n     body = sendfile_body\n     closed = false\n     body.define_singleton_method(:close){closed = true}\n-    request({'HTTP_X_SENDFILE_TYPE' => 'x-sendfile'}, body) do |response|\n+    request({}, body, [], 'X-Sendfile') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -81,7 +82,7 @@ def open_file(path)\n   end\n \n   it \"sets x-lighttpd-send-file response header and discards body\" do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'x-lighttpd-send-file' do |response|\n+    request({}, sendfile_body, [], 'X-Lighttpd-Send-File') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -91,10 +92,9 @@ def open_file(path)\n \n   it \"sets x-accel-redirect response header and discards body\" do\n     headers = {\n-      'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n       'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/foo/bar/\"\n     }\n-    request headers do |response|\n+    request(headers, sendfile_body, [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -104,10 +104,9 @@ def open_file(path)\n \n   it \"sets x-accel-redirect response header to percent-encoded path\" do\n     headers = {\n-      'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n       'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/foo/bar%/\"\n     }\n-    request headers, sendfile_body('file_with_%_?_symbol') do |response|\n+    request(headers, sendfile_body('file_with_%_?_symbol'), [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['content-length'].must_equal '0'\n@@ -116,7 +115,7 @@ def open_file(path)\n   end\n \n   it 'writes to rack.error when no x-accel-mapping is specified' do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect' do |response|\n+    request({}, sendfile_body, [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_equal 'Hello World'\n       response.headers.wont_include 'x-accel-redirect'\n@@ -125,7 +124,7 @@ def open_file(path)\n   end\n \n   it 'does nothing when body does not respond to #to_path' do\n-    request({ 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' }, ['Not a file...']) do |response|\n+    request({}, ['Not a file...'], [], 'X-Sendfile') do |response|\n       response.body.must_equal 'Not a file...'\n       response.headers.wont_include 'x-sendfile'\n     end\n@@ -147,14 +146,14 @@ def open_file(path)\n         [\"#{dir2}/\", '/wibble/']\n       ]\n \n-      request({ 'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect' }, first_body, mappings) do |response|\n+      request({}, first_body, mappings, 'X-Accel-Redirect') do |response|\n         response.must_be :ok?\n         response.body.must_be :empty?\n         response.headers['content-length'].must_equal '0'\n         response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n       end\n \n-      request({ 'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect' }, second_body, mappings) do |response|\n+      request({}, second_body, mappings, 'X-Accel-Redirect') do |response|\n         response.must_be :ok?\n         response.body.must_be :empty?\n         response.headers['content-length'].must_equal '0'\n@@ -181,34 +180,142 @@ def open_file(path)\n       third_body = open_file(File.join(dir3, 'rack_sendfile'))\n       third_body.puts 'hello again world'\n \n+      # Now we need to explicitly enable x-accel-redirect in the constructor\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(first_body), \"X-Accel-Redirect\", [])\n+      \n       headers = {\n-        'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n         'HTTP_X_ACCEL_MAPPING' => \"#{dir1}/=/foo/bar/, #{dir2}/=/wibble/\"\n       }\n \n-      request(headers, first_body) do |response|\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n+\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(second_body), \"X-Accel-Redirect\", [])\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal '/wibble/rack_sendfile'\n+\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(third_body), \"X-Accel-Redirect\", [])\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal \"#{dir3}/rack_sendfile\"\n+    ensure\n+      FileUtils.remove_entry_secure dir1\n+      FileUtils.remove_entry_secure dir2\n+      FileUtils.remove_entry_secure dir3\n+    end\n+  end\n+\n+  # Security tests for CVE mitigation\n+  describe \"security: information disclosure prevention\" do\n+    it \"ignores HTTP_X_SENDFILE_TYPE header to prevent attacker-controlled sendfile activation\" do\n+      # Attacker tries to enable x-sendfile via header\n+      request 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' do |response|\n         response.must_be :ok?\n-        response.body.must_be :empty?\n-        response.headers['content-length'].must_equal '0'\n-        response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-sendfile'\n       end\n+    end\n \n-      request(headers, second_body) do |response|\n+    it \"ignores HTTP_X_SENDFILE_TYPE header attempting to enable x-accel-redirect\" do\n+      # Attacker tries to enable x-accel-redirect via header with mapping\n+      headers = {\n+        'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n+        'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/attacker/path/\"\n+      }\n+      request headers do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-accel-redirect'\n+      end\n+    end\n+\n+    it \"ignores HTTP_X_ACCEL_MAPPING when x-accel-redirect is not explicitly enabled\" do\n+      # Even if attacker sends mapping header, it should be ignored without explicit config\n+      headers = {\n+        'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/attacker/path/\"\n+      }\n+      request headers do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-accel-redirect'\n+      end\n+    end\n+\n+    it \"ignores HTTP_X_ACCEL_MAPPING when application-level mappings are configured\" do\n+      # When app provides mappings, header should be ignored for security\n+      begin\n+        dir = Dir.mktmpdir\n+        body = open_file(File.join(dir, 'rack_sendfile'))\n+        body.puts 'test'\n+        \n+        app_mappings = [[\"#{dir}/\", '/app/mapping/']]\n+        app = Rack::Lint.new Rack::Sendfile.new(simple_app(body), \"X-Accel-Redirect\", app_mappings)\n+        \n+        headers = {\n+          'HTTP_X_ACCEL_MAPPING' => \"#{dir}/=/attacker/path/\"\n+        }\n+        \n+        response = Rack::MockRequest.new(app).get('/', headers)\n         response.must_be :ok?\n         response.body.must_be :empty?\n-        response.headers['content-length'].must_equal '0'\n-        response.headers['x-accel-redirect'].must_equal '/wibble/rack_sendfile'\n+        response.headers['x-accel-redirect'].must_equal '/app/mapping/rack_sendfile'\n+        response.headers['x-accel-redirect'].wont_equal '/attacker/path/rack_sendfile'\n+      ensure\n+        FileUtils.remove_entry_secure dir\n       end\n+    end\n \n-      request(headers, third_body) do |response|\n+    it \"allows HTTP_X_ACCEL_MAPPING only when x-accel-redirect explicitly enabled with no app mappings\" do\n+      # This is the safe use case: explicit config + no app mappings = allow header\n+      begin\n+        dir = Dir.mktmpdir\n+        body = open_file(File.join(dir, 'rack_sendfile'))\n+        body.puts 'test'\n+        \n+        app = Rack::Lint.new Rack::Sendfile.new(simple_app(body), \"X-Accel-Redirect\", [])\n+        \n+        headers = {\n+          'HTTP_X_ACCEL_MAPPING' => \"#{dir}/=/safe/nginx/mapping/\"\n+        }\n+        \n+        response = Rack::MockRequest.new(app).get('/', headers)\n         response.must_be :ok?\n         response.body.must_be :empty?\n-        response.headers['content-length'].must_equal '0'\n-        response.headers['x-accel-redirect'].must_equal \"#{dir3}/rack_sendfile\"\n+        response.headers['x-accel-redirect'].must_equal '/safe/nginx/mapping/rack_sendfile'\n+      ensure\n+        FileUtils.remove_entry_secure dir\n       end\n-    ensure\n-      FileUtils.remove_entry_secure dir1\n-      FileUtils.remove_entry_secure dir2\n+    end\n+\n+    it \"does not allow x-lighttpd-send-file activation via header\" do\n+      # Verify other sendfile types also can't be enabled via headers\n+      request 'HTTP_X_SENDFILE_TYPE' => 'x-lighttpd-send-file' do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-lighttpd-send-file'\n+      end\n+    end\n+\n+    it \"requires explicit middleware configuration for any sendfile variation\" do\n+      # Test that sendfile.type env var still works (internal, not from HTTP headers)\n+      body = sendfile_body\n+      app = lambda { |env| [200, { 'content-type' => 'text/plain' }, body] }\n+      middleware = Rack::Lint.new Rack::Sendfile.new(app)\n+      \n+      env = Rack::MockRequest.env_for('/', { 'sendfile.type' => 'x-sendfile' })\n+      status, headers, response_body = middleware.call(env)\n+      \n+      status.must_equal 200\n+      headers['x-sendfile'].must_equal File.join(Dir.tmpdir, \"rack_sendfile\")\n+      headers['content-length'].must_equal '0'\n     end\n   end\n end"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61780",
        "https://github.com/rack/rack/commit/fba2c8bc63eb787ff4b19bc612d315fda6126d85"
      ],
      "repo": "rack",
      "commit_hash": "fba2c8bc63eb787ff4b19bc612d315fda6126d85",
      "commit_message": "Improper handling of proxy headers in `Rack::Sendfile` may allow proxy bypass.  - Ignore `HTTP_X_SENDFILE_TYPE` header from requests to prevent attackers from enabling sendfile features. - Only read `HTTP_X_ACCEL_MAPPING` when `x-accel-redirect` is explicitly configured and no app-level mappings exist. - Prefer `\\A` instead of `^` to match the start of path mappings.",
      "files_changed": [
        {
          "filename": "CHANGELOG.md",
          "old_url": "https://raw.githubusercontent.com/rack/rack/ed3d8340d1a7955332b51e74c1075ef3547c09dd/CHANGELOG.md",
          "new_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/CHANGELOG.md",
          "diff": "@@ -2,6 +2,12 @@\n \n All notable changes to this project will be documented in this file. For info on how to format all future additions to this file please reference [Keep A Changelog](https://keepachangelog.com/en/1.0.0/).\n \n+## [2.2.20] - 2025-10-10\n+\n+### Security\n+\n+- [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+\n ## [2.2.19] - 2025-10-07\n \n ### Security"
        },
        {
          "filename": "lib/rack/sendfile.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/ed3d8340d1a7955332b51e74c1075ef3547c09dd/lib/rack/sendfile.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/lib/rack/sendfile.rb",
          "diff": "@@ -40,18 +40,23 @@ module Rack\n   #     proxy_set_header   X-Real-IP           $remote_addr,\n   #     proxy_set_header   X-Forwarded-For     $proxy_add_x_forwarded_for,\n   #\n-  #     proxy_set_header   X-Sendfile-Type     X-Accel-Redirect,\n   #     proxy_set_header   X-Accel-Mapping     /var/www/=/files/,\n   #\n   #     proxy_pass         http://127.0.0.1:8080/,\n   #   }\n   #\n-  # Note that the X-Sendfile-Type header must be set exactly as shown above.\n   # The X-Accel-Mapping header should specify the location on the file system,\n   # followed by an equals sign (=), followed name of the private URL pattern\n   # that it maps to. The middleware performs a simple substitution on the\n   # resulting path.\n   #\n+  # To enable X-Accel-Redirect, you must configure the middleware explicitly:\n+  #\n+  #   use Rack::Sendfile, \"X-Accel-Redirect\"\n+  #\n+  # For security reasons, the X-Sendfile-Type header from requests is ignored.\n+  # The sendfile variation must be set via the middleware constructor.\n+  #\n   # See Also: https://www.nginx.com/resources/wiki/start/topics/examples/xsendfile\n   #\n   # === lighttpd\n@@ -96,13 +101,25 @@ module Rack\n   # X-Accel-Mapping header. Mappings should be provided in tuples of internal to\n   # external. The internal values may contain regular expression syntax, they\n   # will be matched with case indifference.\n+  #\n+  # When X-Accel-Redirect is explicitly enabled via the variation parameter,\n+  # and no application-level mappings are provided, the middleware will read\n+  # the X-Accel-Mapping header from the proxy. This allows nginx to control\n+  # the path mapping without requiring application-level configuration.\n+  #\n+  # === Security\n+  #\n+  # For security reasons, the X-Sendfile-Type header from HTTP requests is\n+  # ignored. The sendfile variation must be explicitly configured via the\n+  # middleware constructor to prevent information disclosure vulnerabilities\n+  # where attackers could bypass proxy restrictions.\n \n   class Sendfile\n     def initialize(app, variation = nil, mappings = [])\n       @app = app\n       @variation = variation\n       @mappings = mappings.map do |internal, external|\n-        [/^#{internal}/i, external]\n+        [/\\A#{internal}/i, external]\n       end\n     end\n \n@@ -140,22 +157,35 @@ def call(env)\n     end\n \n     private\n+\n     def variation(env)\n-      @variation ||\n-        env['sendfile.type'] ||\n-        env['HTTP_X_SENDFILE_TYPE']\n+      # Note: HTTP_X_SENDFILE_TYPE is intentionally NOT read for security reasons.\n+      # Attackers could use this header to enable x-accel-redirect and bypass proxy restrictions.\n+      @variation || env['sendfile.type']\n+    end\n+\n+    def x_accel_mapping(env)\n+      # Only allow header when:\n+      # 1. X-Accel-Redirect is explicitly enabled via constructor.\n+      # 2. No application-level mappings are configured.\n+      return nil unless @variation =~ /x-accel-redirect/i\n+      return nil if @mappings.any?\n+      \n+      env['HTTP_X_ACCEL_MAPPING']\n     end\n \n     def map_accel_path(env, path)\n       if mapping = @mappings.find { |internal, _| internal =~ path }\n-        path.sub(*mapping)\n-      elsif mapping = env['HTTP_X_ACCEL_MAPPING']\n+        return path.sub(*mapping)\n+      elsif mapping = x_accel_mapping(env)\n+        # Safe to use header: explicit config + no app mappings:\n         mapping.split(',').map(&:strip).each do |m|\n           internal, external = m.split('=', 2).map(&:strip)\n-          new_path = path.sub(/^#{internal}/i, external)\n+          new_path = path.sub(/\\A#{internal}/i, external)\n           return new_path unless path == new_path\n         end\n-        path\n+\n+        return path\n       end\n     end\n   end"
        },
        {
          "filename": "test/spec_sendfile.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/ed3d8340d1a7955332b51e74c1075ef3547c09dd/test/spec_sendfile.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/test/spec_sendfile.rb",
          "diff": "@@ -16,12 +16,12 @@ def simple_app(body = sendfile_body)\n     lambda { |env| [200, { 'Content-Type' => 'text/plain' }, body] }\n   end\n \n-  def sendfile_app(body, mappings = [])\n-    Rack::Lint.new Rack::Sendfile.new(simple_app(body), nil, mappings)\n+  def sendfile_app(body, mappings = [], variation = nil)\n+    Rack::Lint.new Rack::Sendfile.new(simple_app(body), variation, mappings)\n   end\n \n-  def request(headers = {}, body = sendfile_body, mappings = [])\n-    yield Rack::MockRequest.new(sendfile_app(body, mappings)).get('/', headers)\n+  def request(headers = {}, body = sendfile_body, mappings = [], variation = nil)\n+    yield Rack::MockRequest.new(sendfile_app(body, mappings, variation)).get('/', headers)\n   end\n \n   def open_file(path)\n@@ -42,7 +42,8 @@ def open_file(path)\n \n   it \"does nothing and logs to rack.errors when incorrect X-Sendfile-Type header present\" do\n     io = StringIO.new\n-    request 'HTTP_X_SENDFILE_TYPE' => 'X-Banana', 'rack.errors' => io do |response|\n+    # Configure with wrong variation type\n+    request({ 'rack.errors' => io }, sendfile_body, [], 'X-Banana') do |response|\n       response.must_be :ok?\n       response.body.must_equal 'Hello World'\n       response.headers.wont_include 'X-Sendfile'\n@@ -52,30 +53,42 @@ def open_file(path)\n     end\n   end\n \n-  it \"sets X-Sendfile response header and discards body\" do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'X-Sendfile' do |response|\n+  it \"sets x-sendfile response header and discards body\" do\n+    request({}, sendfile_body, [], 'X-Sendfile') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['Content-Length'].must_equal '0'\n       response.headers['X-Sendfile'].must_equal File.join(Dir.tmpdir,  \"rack_sendfile\")\n     end\n   end\n \n-  it \"sets X-Lighttpd-Send-File response header and discards body\" do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'X-Lighttpd-Send-File' do |response|\n+  it \"closes body when x-sendfile used\" do\n+    body = sendfile_body\n+    closed = false\n+    body.define_singleton_method(:close){closed = true}\n+    request({}, body, [], 'X-Sendfile') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n-      response.headers['Content-Length'].must_equal '0'\n-      response.headers['X-Lighttpd-Send-File'].must_equal File.join(Dir.tmpdir,  \"rack_sendfile\")\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-sendfile'].must_equal File.join(Dir.tmpdir,  \"rack_sendfile\")\n+    end\n+    closed.must_equal true\n+  end\n+\n+  it \"sets x-lighttpd-send-file response header and discards body\" do\n+    request({}, sendfile_body, [], 'X-Lighttpd-Send-File') do |response|\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-lighttpd-send-file'].must_equal File.join(Dir.tmpdir,  \"rack_sendfile\")\n     end\n   end\n \n   it \"sets X-Accel-Redirect response header and discards body\" do\n     headers = {\n-      'HTTP_X_SENDFILE_TYPE' => 'X-Accel-Redirect',\n       'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/foo/bar/\"\n     }\n-    request headers do |response|\n+    request(headers, sendfile_body, [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['Content-Length'].must_equal '0'\n@@ -85,19 +98,18 @@ def open_file(path)\n \n   it \"sets X-Accel-Redirect response header to percent-encoded path\" do\n     headers = {\n-      'HTTP_X_SENDFILE_TYPE' => 'X-Accel-Redirect',\n       'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/foo/bar%/\"\n     }\n-    request headers, sendfile_body('file_with_%_?_symbol') do |response|\n+    request(headers, sendfile_body('file_with_%_?_symbol'), [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_be :empty?\n       response.headers['Content-Length'].must_equal '0'\n       response.headers['X-Accel-Redirect'].must_equal '/foo/bar%25/file_with_%25_%3F_symbol'\n     end\n   end\n \n-  it 'writes to rack.error when no X-Accel-Mapping is specified' do\n-    request 'HTTP_X_SENDFILE_TYPE' => 'X-Accel-Redirect' do |response|\n+  it 'writes to rack.error when no x-accel-mapping is specified' do\n+    request({}, sendfile_body, [], 'X-Accel-Redirect') do |response|\n       response.must_be :ok?\n       response.body.must_equal 'Hello World'\n       response.headers.wont_include 'X-Accel-Redirect'\n@@ -106,7 +118,7 @@ def open_file(path)\n   end\n \n   it 'does nothing when body does not respond to #to_path' do\n-    request({ 'HTTP_X_SENDFILE_TYPE' => 'X-Sendfile' }, ['Not a file...']) do |response|\n+    request({}, ['Not a file...'], [], 'X-Sendfile') do |response|\n       response.body.must_equal 'Not a file...'\n       response.headers.wont_include 'X-Sendfile'\n     end\n@@ -128,14 +140,14 @@ def open_file(path)\n         [\"#{dir2}/\", '/wibble/']\n       ]\n \n-      request({ 'HTTP_X_SENDFILE_TYPE' => 'X-Accel-Redirect' }, first_body, mappings) do |response|\n+      request({}, first_body, mappings, 'X-Accel-Redirect') do |response|\n         response.must_be :ok?\n         response.body.must_be :empty?\n         response.headers['Content-Length'].must_equal '0'\n         response.headers['X-Accel-Redirect'].must_equal '/foo/bar/rack_sendfile'\n       end\n \n-      request({ 'HTTP_X_SENDFILE_TYPE' => 'X-Accel-Redirect' }, second_body, mappings) do |response|\n+      request({}, second_body, mappings, 'X-Accel-Redirect') do |response|\n         response.must_be :ok?\n         response.body.must_be :empty?\n         response.headers['Content-Length'].must_equal '0'\n@@ -162,34 +174,142 @@ def open_file(path)\n       third_body = open_file(File.join(dir3, 'rack_sendfile'))\n       third_body.puts 'hello again world'\n \n+      # Now we need to explicitly enable x-accel-redirect in the constructor\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(first_body), \"X-Accel-Redirect\", [])\n+      \n       headers = {\n-        'HTTP_X_SENDFILE_TYPE' => 'X-Accel-Redirect',\n         'HTTP_X_ACCEL_MAPPING' => \"#{dir1}/=/foo/bar/, #{dir2}/=/wibble/\"\n       }\n \n-      request(headers, first_body) do |response|\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal '/foo/bar/rack_sendfile'\n+\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(second_body), \"X-Accel-Redirect\", [])\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal '/wibble/rack_sendfile'\n+\n+      app = Rack::Lint.new Rack::Sendfile.new(simple_app(third_body), \"X-Accel-Redirect\", [])\n+      response = Rack::MockRequest.new(app).get('/', headers)\n+      response.must_be :ok?\n+      response.body.must_be :empty?\n+      response.headers['content-length'].must_equal '0'\n+      response.headers['x-accel-redirect'].must_equal \"#{dir3}/rack_sendfile\"\n+    ensure\n+      FileUtils.remove_entry_secure dir1\n+      FileUtils.remove_entry_secure dir2\n+      FileUtils.remove_entry_secure dir3\n+    end\n+  end\n+\n+  # Security tests for CVE mitigation\n+  describe \"security: information disclosure prevention\" do\n+    it \"ignores HTTP_X_SENDFILE_TYPE header to prevent attacker-controlled sendfile activation\" do\n+      # Attacker tries to enable x-sendfile via header\n+      request 'HTTP_X_SENDFILE_TYPE' => 'x-sendfile' do |response|\n         response.must_be :ok?\n-        response.body.must_be :empty?\n-        response.headers['Content-Length'].must_equal '0'\n-        response.headers['X-Accel-Redirect'].must_equal '/foo/bar/rack_sendfile'\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-sendfile'\n       end\n+    end\n \n-      request(headers, second_body) do |response|\n+    it \"ignores HTTP_X_SENDFILE_TYPE header attempting to enable x-accel-redirect\" do\n+      # Attacker tries to enable x-accel-redirect via header with mapping\n+      headers = {\n+        'HTTP_X_SENDFILE_TYPE' => 'x-accel-redirect',\n+        'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/attacker/path/\"\n+      }\n+      request headers do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-accel-redirect'\n+      end\n+    end\n+\n+    it \"ignores HTTP_X_ACCEL_MAPPING when x-accel-redirect is not explicitly enabled\" do\n+      # Even if attacker sends mapping header, it should be ignored without explicit config\n+      headers = {\n+        'HTTP_X_ACCEL_MAPPING' => \"#{Dir.tmpdir}/=/attacker/path/\"\n+      }\n+      request headers do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-accel-redirect'\n+      end\n+    end\n+\n+    it \"ignores HTTP_X_ACCEL_MAPPING when application-level mappings are configured\" do\n+      # When app provides mappings, header should be ignored for security\n+      begin\n+        dir = Dir.mktmpdir\n+        body = open_file(File.join(dir, 'rack_sendfile'))\n+        body.puts 'test'\n+        \n+        app_mappings = [[\"#{dir}/\", '/app/mapping/']]\n+        app = Rack::Lint.new Rack::Sendfile.new(simple_app(body), \"X-Accel-Redirect\", app_mappings)\n+        \n+        headers = {\n+          'HTTP_X_ACCEL_MAPPING' => \"#{dir}/=/attacker/path/\"\n+        }\n+        \n+        response = Rack::MockRequest.new(app).get('/', headers)\n         response.must_be :ok?\n         response.body.must_be :empty?\n-        response.headers['Content-Length'].must_equal '0'\n-        response.headers['X-Accel-Redirect'].must_equal '/wibble/rack_sendfile'\n+        response.headers['x-accel-redirect'].must_equal '/app/mapping/rack_sendfile'\n+        response.headers['x-accel-redirect'].wont_equal '/attacker/path/rack_sendfile'\n+      ensure\n+        FileUtils.remove_entry_secure dir\n       end\n+    end\n \n-      request(headers, third_body) do |response|\n+    it \"allows HTTP_X_ACCEL_MAPPING only when x-accel-redirect explicitly enabled with no app mappings\" do\n+      # This is the safe use case: explicit config + no app mappings = allow header\n+      begin\n+        dir = Dir.mktmpdir\n+        body = open_file(File.join(dir, 'rack_sendfile'))\n+        body.puts 'test'\n+        \n+        app = Rack::Lint.new Rack::Sendfile.new(simple_app(body), \"X-Accel-Redirect\", [])\n+        \n+        headers = {\n+          'HTTP_X_ACCEL_MAPPING' => \"#{dir}/=/safe/nginx/mapping/\"\n+        }\n+        \n+        response = Rack::MockRequest.new(app).get('/', headers)\n         response.must_be :ok?\n         response.body.must_be :empty?\n-        response.headers['Content-Length'].must_equal '0'\n-        response.headers['X-Accel-Redirect'].must_equal \"#{dir3}/rack_sendfile\"\n+        response.headers['x-accel-redirect'].must_equal '/safe/nginx/mapping/rack_sendfile'\n+      ensure\n+        FileUtils.remove_entry_secure dir\n       end\n-    ensure\n-      FileUtils.remove_entry_secure dir1\n-      FileUtils.remove_entry_secure dir2\n+    end\n+\n+    it \"does not allow x-lighttpd-send-file activation via header\" do\n+      # Verify other sendfile types also can't be enabled via headers\n+      request 'HTTP_X_SENDFILE_TYPE' => 'x-lighttpd-send-file' do |response|\n+        response.must_be :ok?\n+        response.body.must_equal 'Hello World'\n+        response.headers.wont_include 'x-lighttpd-send-file'\n+      end\n+    end\n+\n+    it \"requires explicit middleware configuration for any sendfile variation\" do\n+      # Test that sendfile.type env var still works (internal, not from HTTP headers)\n+      body = sendfile_body\n+      app = lambda { |env| [200, { 'content-type' => 'text/plain' }, body] }\n+      middleware = Rack::Lint.new Rack::Sendfile.new(app)\n+      \n+      env = Rack::MockRequest.env_for('/', { 'sendfile.type' => 'X-Sendfile' })\n+      status, headers, response_body = middleware.call(env)\n+      \n+      status.must_equal 200\n+      headers['X-Sendfile'].must_equal File.join(Dir.tmpdir, \"rack_sendfile\")\n+      headers['Content-Length'].must_equal '0'\n     end\n   end\n end"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61919",
        "https://github.com/rack/rack/commit/4e2c903991a790ee211a3021808ff4fd6fe82881"
      ],
      "repo": "rack",
      "commit_hash": "4e2c903991a790ee211a3021808ff4fd6fe82881",
      "commit_message": "Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.  - Limit read to `query_parser.bytesize_limit`.",
      "files_changed": [
        {
          "filename": "CHANGELOG.md",
          "old_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/CHANGELOG.md",
          "new_url": "https://raw.githubusercontent.com/rack/rack/4e2c903991a790ee211a3021808ff4fd6fe82881/CHANGELOG.md",
          "diff": "@@ -7,6 +7,7 @@ All notable changes to this project will be documented in this file. For info on\n ### Security\n \n - [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+- [CVE-2025-61919](https://github.com/advisories/GHSA-6xw4-3v39-52mm) Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.\n \n ## [2.2.19] - 2025-10-07\n "
        },
        {
          "filename": "lib/rack/query_parser.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/lib/rack/query_parser.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/4e2c903991a790ee211a3021808ff4fd6fe82881/lib/rack/query_parser.rb",
          "diff": "@@ -51,6 +51,8 @@ def self.make_default(key_space_limit, param_depth_limit, **options)\n     PARAMS_LIMIT = env_int.call(\"RACK_QUERY_PARSER_PARAMS_LIMIT\", 4096)\n     private_constant :PARAMS_LIMIT\n \n+    attr_reader :bytesize_limit\n+\n     def initialize(params_class, key_space_limit, param_depth_limit, bytesize_limit: BYTESIZE_LIMIT, params_limit: PARAMS_LIMIT)\n       @params_class = params_class\n       @key_space_limit = key_space_limit\n@@ -185,7 +187,7 @@ def params_hash_has_key?(hash, key)\n     def check_query_string(qs, sep)\n       if qs\n         if qs.bytesize > @bytesize_limit\n-          raise QueryLimitError, \"total query size (#{qs.bytesize}) exceeds limit (#{@bytesize_limit})\"\n+          raise QueryLimitError, \"total query size exceeds limit (#{@bytesize_limit})\"\n         end\n \n         if (param_count = qs.count(sep.is_a?(String) ? sep : '&,')) >= @params_limit"
        },
        {
          "filename": "lib/rack/request.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/lib/rack/request.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/4e2c903991a790ee211a3021808ff4fd6fe82881/lib/rack/request.rb",
          "diff": "@@ -444,7 +444,10 @@ def POST\n           get_header(RACK_REQUEST_FORM_HASH)\n         elsif form_data? || parseable_data?\n           unless set_header(RACK_REQUEST_FORM_HASH, parse_multipart)\n-            form_vars = get_header(RACK_INPUT).read\n+            # Add 2 bytes. One to check whether it is over the limit, and a second\n+            # in case the slice! call below removes the last byte\n+            # If read returns nil, use the empty string\n+            form_vars = get_header(RACK_INPUT).read(query_parser.bytesize_limit + 2) || ''\n \n             # Fix for Safari Ajax postings that always append \\0\n             # form_vars.sub!(/\\0\\z/, '') # performance replacement:"
        },
        {
          "filename": "test/spec_request.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/fba2c8bc63eb787ff4b19bc612d315fda6126d85/test/spec_request.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/4e2c903991a790ee211a3021808ff4fd6fe82881/test/spec_request.rb",
          "diff": "@@ -499,6 +499,93 @@ def initialize(*)\n     req.POST.must_equal \"foo\" => \"bar\", \"quux\" => \"bla\"\n   end\n \n+  it \"limit POST body read to bytesize_limit when parsing url-encoded data\" do\n+    # Create a mock input that tracks read calls\n+    reads = []\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      reads << len\n+      # Return mutable string\n+      \"foo=bar\".dup\n+    end\n+    mock_input.define_singleton_method(:rewind) do\n+      # no-op for compatibility\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    request.POST.must_equal \"foo\" => \"bar\"\n+\n+    # Verify read was called with a limit (bytesize_limit + 2), not nil\n+    reads.size.must_equal 1\n+    reads.first.wont_be_nil\n+    reads.first.must_equal(request.send(:query_parser).bytesize_limit + 2)\n+  end\n+\n+  it \"handle nil return from rack.input.read when parsing url-encoded data\" do\n+    # Simulate an input that returns nil on read\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      nil\n+    end\n+    mock_input.define_singleton_method(:rewind) do\n+      # no-op for compatibility\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    # Should handle nil gracefully and return empty hash\n+    request.POST.must_equal({})\n+  end\n+\n+  it \"truncate POST body at bytesize_limit when parsing url-encoded data\" do\n+    # Create input larger than limit\n+    large_body = \"a=1&\" * 1000000  # Very large body\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        :input => large_body)\n+\n+    # Should parse only up to the limit without reading entire body into memory\n+    # The actual parsing may fail due to size limit, which is expected\n+    proc { request.POST }.must_raise Rack::QueryParser::QueryLimitError\n+  end\n+\n+  it \"clean up Safari's ajax POST body with limited read\" do\n+    # Verify Safari null-byte cleanup still works with bounded read\n+    reads = []\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      reads << len\n+      # Return mutable string (dup ensures it's not frozen)\n+      \"foo=bar\\0\".dup\n+    end\n+    mock_input.define_singleton_method(:rewind) do\n+      # no-op for compatibility\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    request.POST.must_equal \"foo\" => \"bar\"\n+\n+    # Verify bounded read was used\n+    reads.first.wont_be_nil\n+  end\n+\n   it \"get value by key from params with #[]\" do\n     req = make_request \\\n       Rack::MockRequest.env_for(\"?foo=quux\")"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61919",
        "https://github.com/rack/rack/commit/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db"
      ],
      "repo": "rack",
      "commit_hash": "cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db",
      "commit_message": "Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.  - Limit read to `query_parser.bytesize_limit`.",
      "files_changed": [
        {
          "filename": "CHANGELOG.md",
          "old_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/CHANGELOG.md",
          "new_url": "https://raw.githubusercontent.com/rack/rack/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db/CHANGELOG.md",
          "diff": "@@ -7,6 +7,7 @@ All notable changes to this project will be documented in this file. For info on\n ### Security\n \n - [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+- [CVE-2025-61919](https://github.com/advisories/GHSA-6xw4-3v39-52mm) Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.\n \n ## [3.1.17] - 2025-10-07\n "
        },
        {
          "filename": "lib/rack/query_parser.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/lib/rack/query_parser.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db/lib/rack/query_parser.rb",
          "diff": "@@ -57,6 +57,8 @@ def self.make_default(param_depth_limit, **options)\n     PARAMS_LIMIT = env_int.call(\"RACK_QUERY_PARSER_PARAMS_LIMIT\", 4096)\n     private_constant :PARAMS_LIMIT\n \n+    attr_reader :bytesize_limit\n+\n     def initialize(params_class, param_depth_limit, bytesize_limit: BYTESIZE_LIMIT, params_limit: PARAMS_LIMIT)\n       @params_class = params_class\n       @param_depth_limit = param_depth_limit\n@@ -218,7 +220,7 @@ def params_hash_has_key?(hash, key)\n     def check_query_string(qs, sep)\n       if qs\n         if qs.bytesize > @bytesize_limit\n-          raise QueryLimitError, \"total query size (#{qs.bytesize}) exceeds limit (#{@bytesize_limit})\"\n+          raise QueryLimitError, \"total query size exceeds limit (#{@bytesize_limit})\"\n         end\n \n         if (param_count = qs.count(sep.is_a?(String) ? sep : '&')) >= @params_limit"
        },
        {
          "filename": "lib/rack/request.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/lib/rack/request.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db/lib/rack/request.rb",
          "diff": "@@ -528,7 +528,10 @@ def POST\n               set_header RACK_REQUEST_FORM_PAIRS, pairs\n               set_header RACK_REQUEST_FORM_HASH, expand_param_pairs(pairs)\n             else\n-              form_vars = get_header(RACK_INPUT).read\n+              # Add 2 bytes. One to check whether it is over the limit, and a second\n+              # in case the slice! call below removes the last byte\n+              # If read returns nil, use the empty string\n+              form_vars = get_header(RACK_INPUT).read(query_parser.bytesize_limit + 2) || ''\n \n               # Fix for Safari Ajax postings that always append \\0\n               # form_vars.sub!(/\\0\\z/, '') # performance replacement:"
        },
        {
          "filename": "test/spec_request.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/7e69f65eefe9cd2868df9f9f3b0977b86f93523a/test/spec_request.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/cbd541e8a3d0c5830a3c9a30d3718ce2e124f9db/test/spec_request.rb",
          "diff": "@@ -796,6 +796,84 @@ def initialize(*)\n     req.POST.must_equal \"foo\" => \"bar\", \"quux\" => \"bla\"\n   end\n \n+  it \"limit POST body read to bytesize_limit when parsing url-encoded data\" do\n+    # Create a mock input that tracks read calls\n+    reads = []\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      reads << len\n+      # Return mutable string\n+      \"foo=bar\".dup\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    request.POST.must_equal \"foo\" => \"bar\"\n+\n+    # Verify read was called with a limit (bytesize_limit + 2), not nil\n+    reads.size.must_equal 1\n+    reads.first.wont_be_nil\n+    reads.first.must_equal(request.send(:query_parser).bytesize_limit + 2)\n+  end\n+\n+  it \"handle nil return from rack.input.read when parsing url-encoded data\" do\n+    # Simulate an input that returns nil on read\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      nil\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    # Should handle nil gracefully and return empty hash\n+    request.POST.must_equal({})\n+  end\n+\n+  it \"truncate POST body at bytesize_limit when parsing url-encoded data\" do\n+    # Create input larger than limit\n+    large_body = \"a=1&\" * 1000000  # Very large body\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        :input => large_body)\n+\n+    # Should parse only up to the limit without reading entire body into memory\n+    # The actual parsing may fail due to size limit, which is expected\n+    proc { request.POST }.must_raise Rack::QueryParser::QueryLimitError\n+  end\n+\n+  it \"clean up Safari's ajax POST body with limited read\" do\n+    # Verify Safari null-byte cleanup still works with bounded read\n+    reads = []\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      reads << len\n+      # Return mutable string (dup ensures it's not frozen)\n+      \"foo=bar\\0\".dup\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    request.POST.must_equal \"foo\" => \"bar\"\n+\n+    # Verify bounded read was used\n+    reads.first.wont_be_nil\n+  end\n+\n   it \"return values for the keys in the order given from values_at\" do\n     req = make_request Rack::MockRequest.env_for(\"?foo=baz&wun=der&bar=ful\")\n "
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61919",
        "https://github.com/rack/rack/commit/e179614c4a653283286f5f046428cbb85f21146f"
      ],
      "repo": "rack",
      "commit_hash": "e179614c4a653283286f5f046428cbb85f21146f",
      "commit_message": "Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.  - Limit read to `query_parser.bytesize_limit`.",
      "files_changed": [
        {
          "filename": "CHANGELOG.md",
          "old_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/CHANGELOG.md",
          "new_url": "https://raw.githubusercontent.com/rack/rack/e179614c4a653283286f5f046428cbb85f21146f/CHANGELOG.md",
          "diff": "@@ -7,6 +7,7 @@ All notable changes to this project will be documented in this file. For info on\n ### Security\n \n - [CVE-2025-61780](https://github.com/advisories/GHSA-r657-rxjc-j557) Improper handling of headers in `Rack::Sendfile` may allow proxy bypass.\n+- [CVE-2025-61919](https://github.com/advisories/GHSA-6xw4-3v39-52mm) Unbounded read in `Rack::Request` form parsing can lead to memory exhaustion.\n \n ## [3.2.2] - 2025-10-07\n "
        },
        {
          "filename": "lib/rack/query_parser.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/lib/rack/query_parser.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/e179614c4a653283286f5f046428cbb85f21146f/lib/rack/query_parser.rb",
          "diff": "@@ -57,6 +57,8 @@ def self.make_default(param_depth_limit, **options)\n     PARAMS_LIMIT = env_int.call(\"RACK_QUERY_PARSER_PARAMS_LIMIT\", 4096)\n     private_constant :PARAMS_LIMIT\n \n+    attr_reader :bytesize_limit\n+\n     def initialize(params_class, param_depth_limit, bytesize_limit: BYTESIZE_LIMIT, params_limit: PARAMS_LIMIT)\n       @params_class = params_class\n       @param_depth_limit = param_depth_limit\n@@ -221,7 +223,7 @@ def each_query_pair(qs, separator, unescaper = nil)\n       return if !qs || qs.empty?\n \n       if qs.bytesize > @bytesize_limit\n-        raise QueryLimitError, \"total query size (#{qs.bytesize}) exceeds limit (#{@bytesize_limit})\"\n+        raise QueryLimitError, \"total query size exceeds limit (#{@bytesize_limit})\"\n       end\n \n       pairs = qs.split(separator ? (COMMON_SEP[separator] || /[#{separator}] */n) : DEFAULT_SEP, @params_limit + 1)"
        },
        {
          "filename": "lib/rack/request.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/lib/rack/request.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/e179614c4a653283286f5f046428cbb85f21146f/lib/rack/request.rb",
          "diff": "@@ -513,7 +513,10 @@ def form_pairs\n             if pairs = Rack::Multipart.parse_multipart(env, Rack::Multipart::ParamList)\n               set_header RACK_REQUEST_FORM_PAIRS, pairs\n             else\n-              form_vars = get_header(RACK_INPUT).read\n+              # Add 2 bytes. One to check whether it is over the limit, and a second\n+              # in case the slice! call below removes the last byte\n+              # If read returns nil, use the empty string\n+              form_vars = get_header(RACK_INPUT).read(query_parser.bytesize_limit + 2) || ''\n \n               # Fix for Safari Ajax postings that always append \\0\n               # form_vars.sub!(/\\0\\z/, '') # performance replacement:"
        },
        {
          "filename": "test/spec_request.rb",
          "old_url": "https://raw.githubusercontent.com/rack/rack/57277b7741581fa827472c5c666f6e6a33abd784/test/spec_request.rb",
          "new_url": "https://raw.githubusercontent.com/rack/rack/e179614c4a653283286f5f046428cbb85f21146f/test/spec_request.rb",
          "diff": "@@ -795,6 +795,84 @@ def initialize(*)\n     req.POST.must_equal \"foo\" => \"bar\", \"quux\" => \"bla\"\n   end\n \n+  it \"limit POST body read to bytesize_limit when parsing url-encoded data\" do\n+    # Create a mock input that tracks read calls\n+    reads = []\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      reads << len\n+      # Return mutable string\n+      \"foo=bar\".dup\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    request.POST.must_equal \"foo\" => \"bar\"\n+\n+    # Verify read was called with a limit (bytesize_limit + 2), not nil\n+    reads.size.must_equal 1\n+    reads.first.wont_be_nil\n+    reads.first.must_equal(request.send(:query_parser).bytesize_limit + 2)\n+  end\n+\n+  it \"handle nil return from rack.input.read when parsing url-encoded data\" do\n+    # Simulate an input that returns nil on read\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      nil\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    # Should handle nil gracefully and return empty hash\n+    request.POST.must_equal({})\n+  end\n+\n+  it \"truncate POST body at bytesize_limit when parsing url-encoded data\" do\n+    # Create input larger than limit\n+    large_body = \"a=1&\" * 1000000  # Very large body\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        :input => large_body)\n+\n+    # Should parse only up to the limit without reading entire body into memory\n+    # The actual parsing may fail due to size limit, which is expected\n+    proc { request.POST }.must_raise Rack::QueryParser::QueryLimitError\n+  end\n+\n+  it \"clean up Safari's ajax POST body with limited read\" do\n+    # Verify Safari null-byte cleanup still works with bounded read\n+    reads = []\n+    mock_input = Object.new\n+    mock_input.define_singleton_method(:read) do |len=nil|\n+      reads << len\n+      # Return mutable string (dup ensures it's not frozen)\n+      \"foo=bar\\0\".dup\n+    end\n+\n+    request = make_request \\\n+      Rack::MockRequest.env_for(\"/\",\n+        'REQUEST_METHOD' => 'POST',\n+        'CONTENT_TYPE' => 'application/x-www-form-urlencoded',\n+        'rack.input' => mock_input)\n+\n+    request.POST.must_equal \"foo\" => \"bar\"\n+\n+    # Verify bounded read was used\n+    reads.first.wont_be_nil\n+  end\n+\n   it \"return form_pairs for url-encoded POST data\" do\n     req = make_request \\\n       Rack::MockRequest.env_for(\"/\","
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-61927",
        "https://github.com/capricorn86/happy-dom/commit/819d15ba289495439eda8be360d92a614ce22405"
      ],
      "repo": "happy-dom",
      "commit_hash": "819d15ba289495439eda8be360d92a614ce22405",
      "commit_message": "BREAKING CHANGE: [#0] Changes JavaScript evaluation to be disabled by default (#1930)",
      "files_changed": [
        {
          "filename": "integration-test/package.json",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/integration-test/package.json",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/integration-test/package.json",
          "diff": "@@ -10,7 +10,7 @@\n \t\t\"access\": \"restricted\"\n \t},\n \t\"scripts\": {\n-\t\t\"test\": \"cd ./test && ls | node --test && node ./browser-exception-observer/BrowserExceptionObserver.test.js\",\n+\t\t\"test\": \"cd ./test && ls | node --disallow-code-generation-from-strings --test && node --disallow-code-generation-from-strings ./browser-exception-observer/BrowserExceptionObserver.test.js\",\n \t\t\"test:debug\": \"cd ./test && ls | node --inspect-brk\"\n \t},\n \t\"devDependencies\": {"
        },
        {
          "filename": "integration-test/test/Browser.test.js",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/integration-test/test/Browser.test.js",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/integration-test/test/Browser.test.js",
          "diff": "@@ -7,6 +7,7 @@ describe('Browser', () => {\n \t\tconst browser = new Browser({\n \t\t\tsettings: {\n \t\t\t\terrorCapture: BrowserErrorCaptureEnum.processLevel,\n+\t\t\t\tenableJavaScriptEvaluation: true,\n \n \t\t\t\t// Github.com has a timer that is very long (hours) and a timer loop that never ends.\n \t\t\t\ttimer: {\n@@ -47,7 +48,8 @@ describe('Browser', () => {\n \tit('Goes to \"npmjs.com\".', async () => {\n \t\tconst browser = new Browser({\n \t\t\tsettings: {\n-\t\t\t\terrorCapture: BrowserErrorCaptureEnum.processLevel\n+\t\t\t\terrorCapture: BrowserErrorCaptureEnum.processLevel,\n+\t\t\t\tenableJavaScriptEvaluation: true\n \t\t\t}\n \t\t}),\n \t\tconst page = browser.newPage(),"
        },
        {
          "filename": "integration-test/test/WindowGlobals.test.js",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/integration-test/test/WindowGlobals.test.js",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/integration-test/test/WindowGlobals.test.js",
          "diff": "@@ -4,7 +4,7 @@ import { describe, it } from 'node:test',\n \n describe('WindowGlobals', () => {\n \tit('Functions should have the constructor global.Function.', () => {\n-\t\tconst window = new Window(),\n+\t\tconst window = new Window({ settings: { enableJavaScriptEvaluation: true } }),\n \t\tlet error = null,\n \t\twindow.addEventListener('error', (event) => (error = event.error)),\n \t\twindow.document.write(`\n@@ -18,7 +18,7 @@ describe('WindowGlobals', () => {\n \t}),\n \n \tit('Object should have the constructor global.Object.', () => {\n-\t\tconst window = new Window(),\n+\t\tconst window = new Window({ settings: { enableJavaScriptEvaluation: true } }),\n \t\tlet error = null,\n \t\twindow.addEventListener('error', (event) => (error = event.error)),\n \t\twindow.document.write(`\n@@ -32,7 +32,7 @@ describe('WindowGlobals', () => {\n \t}),\n \n \tit('Binds global methods to the Window context.', () => {\n-\t\tconst window = new Window(),\n+\t\tconst window = new Window({ settings: { enableJavaScriptEvaluation: true } }),\n \t\tlet error = null,\n \t\twindow.addEventListener('error', (event) => (error = event.error)),\n \t\twindow.document.write(`"
        },
        {
          "filename": "integration-test/test/browser-exception-observer/BrowserExceptionObserver.test.js",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/integration-test/test/browser-exception-observer/BrowserExceptionObserver.test.js",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/integration-test/test/browser-exception-observer/BrowserExceptionObserver.test.js",
          "diff": "@@ -21,7 +21,10 @@ await describe('BrowserExceptionObserver', async () => {\n \tawait describe('observe()', async () => {\n \t\tawait it('Observes unhandled fetch rejections.', async () => {\n \t\t\tconst browser = new Browser({\n-\t\t\t\tsettings: { errorCapture: BrowserErrorCaptureEnum.processLevel }\n+\t\t\t\tsettings: {\n+\t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.processLevel,\n+\t\t\t\t\tenableJavaScriptEvaluation: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tconst page = browser.newPage(),\n \t\t\tconst window = page.mainFrame.window,\n@@ -58,7 +61,10 @@ await describe('BrowserExceptionObserver', async () => {\n \n \t\tawait it('Observes uncaught exceptions.', async () => {\n \t\t\tconst browser = new Browser({\n-\t\t\t\tsettings: { errorCapture: BrowserErrorCaptureEnum.processLevel }\n+\t\t\t\tsettings: {\n+\t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.processLevel,\n+\t\t\t\t\tenableJavaScriptEvaluation: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tconst page = browser.newPage(),\n \t\t\tconst window = page.mainFrame.window,"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/src/ServerRenderer.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/src/ServerRenderer.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/src/ServerRenderer.ts",
          "diff": "@@ -197,6 +197,7 @@ export default class ServerRenderer {\n \t\t\t\t\treturn,\n \t\t\t\t}\n \t\t\t\tconst worker = new Worker(new URL('ServerRendererWorker.js', import.meta.url), {\n+\t\t\t\t\texecArgv: ['--disallow-code-generation-from-strings'],\n \t\t\t\t\tworkerData: {\n \t\t\t\t\t\tconfiguration: configuration\n \t\t\t\t\t}"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/src/config/DefaultServerRendererConfiguration.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/src/config/DefaultServerRendererConfiguration.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/src/config/DefaultServerRendererConfiguration.ts",
          "diff": "@@ -5,7 +5,13 @@ import OS from 'os',\n import { BrowserErrorCaptureEnum } from 'happy-dom',\n \n export default <IServerRendererConfiguration>{\n-\tbrowser: { ...DefaultBrowserSettings, errorCapture: BrowserErrorCaptureEnum.processLevel },\n+\tbrowser: {\n+\t\t...DefaultBrowserSettings,\n+\t\terrorCapture: BrowserErrorCaptureEnum.processLevel,\n+\t\t// This is enabled by default as the entire point of this package is to server-render client side JavaScript.\n+\t\t// \"--disallow-code-generation-from-strings\" is enabled on workers to prevent escape of the VM context.\n+\t\tenableJavaScriptEvaluation: true\n+\t},\n \toutputDirectory: './happy-dom/render',\n \tlogLevel: ServerRendererLogLevelEnum.info,\n \tdebug: false,"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/src/utilities/HelpPrinterRows.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/src/utilities/HelpPrinterRows.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/src/utilities/HelpPrinterRows.ts",
          "diff": "@@ -126,12 +126,19 @@ export default [\n \t\t'1'\n \t],\n \t[\n-\t\t'--browser.disableJavascriptEvaluation',\n+\t\t'--browser.disableJavaScriptEvaluation',\n \t\t'',\n \t\t'boolean',\n \t\t'Disables JavaScript evaluation.',\n \t\t'false'\n \t],\n+\t[\n+\t\t'--browser.suppressCodeGenerationFromStringsWarning',\n+\t\t'',\n+\t\t'boolean',\n+\t\t'Suppresses the warning that is printed when code generation from strings is enabled at process level',\n+\t\t'false'\n+\t],\n \t[\n \t\t'--browser.disableJavaScriptFileLoading',\n \t\t'',"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/src/utilities/ProcessArgumentsParser.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/src/utilities/ProcessArgumentsParser.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/src/utilities/ProcessArgumentsParser.ts",
          "diff": "@@ -40,7 +40,9 @@ export default class ProcessArgumentsParser {\n \t\t\t\t} else if (arg === '--help' || arg === '-h') {\n \t\t\t\t\tconfig.help = true,\n \t\t\t\t} else if (arg === '--browser.disableJavaScriptEvaluation') {\n-\t\t\t\t\tconfig.browser.disableJavaScriptEvaluation = true,\n+\t\t\t\t\tconfig.browser.enableJavaScriptEvaluation = false,\n+\t\t\t\t} else if (arg === '--browser.suppressCodeGenerationFromStringsWarning') {\n+\t\t\t\t\tconfig.browser.suppressCodeGenerationFromStringsWarning = true,\n \t\t\t\t} else if (arg === '--browser.disableJavaScriptFileLoading') {\n \t\t\t\t\tconfig.browser.disableJavaScriptFileLoading = true,\n \t\t\t\t} else if (arg === '--browser.disableCSSFileLoading') {"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/test/MockedWorker.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/test/MockedWorker.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/test/MockedWorker.ts",
          "diff": "@@ -2,13 +2,16 @@ import IServerRendererConfiguration from '../src/types/IServerRendererConfigurat\n import IServerRendererItem from '../src/types/IServerRendererItem',\n import IServerRendererResult from '../src/types/IServerRendererResult',\n \n+type TEvent = 'message' | 'error' | 'exit',\n+\n /**\n- *\n+ * Mocked worker.\n  */\n export default class MockedWorker {\n \tpublic static openWorkers: MockedWorker[] = [],\n \tpublic static terminatedWorkers: MockedWorker[] = [],\n \tpublic scriptPath: string,\n+\tpublic execArgv: string[] = [],\n \tpublic workerData: {\n \t\tconfiguration: IServerRendererConfiguration,\n \t},\n@@ -25,13 +28,16 @@ export default class MockedWorker {\n \tpublic isTerminated: boolean = false,\n \n \t/**\n+\t * Constructor.\n \t *\n-\t * @param scriptPath\n-\t * @param options\n-\t * @param options.workerData\n+\t * @param scriptPath Script path.\n+\t * @param options Options.\n+\t * @param options.execArgv Exec arguments.\n+\t * @param options.workerData Worker data.\n \t */\n-\tconstructor(scriptPath: string, options: { workerData: any }) {\n+\tconstructor(scriptPath: string, options: { execArgv: string[], workerData: any }) {\n \t\tthis.scriptPath = scriptPath,\n+\t\tthis.execArgv = options.execArgv,\n \t\tthis.workerData = options.workerData,\n \t\t(<typeof MockedWorker>this.constructor).openWorkers.push(this),\n \t}\n@@ -41,7 +47,7 @@ export default class MockedWorker {\n \t * @param event\n \t * @param listener\n \t */\n-\tpublic on(event: string, listener: any): void {\n+\tpublic on(event: TEvent, listener: any): void {\n \t\tthis.listeners[event].push(listener),\n \t}\n \n@@ -50,7 +56,7 @@ export default class MockedWorker {\n \t * @param event\n \t * @param listener\n \t */\n-\tpublic off(event: string, listener: any): void {\n+\tpublic off(event: TEvent, listener: any): void {\n \t\tconst index = this.listeners[event].indexOf(listener),\n \t\tthis.listeners[event].splice(index, 1),\n \t}"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/test/ServerRenderer.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/test/ServerRenderer.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/test/ServerRenderer.test.ts",
          "diff": "@@ -58,6 +58,8 @@ describe('ServerRenderer', () => {\n \t\t\t\t\t'file://' + Path.resolve(Path.join('src', 'ServerRendererWorker.js'))\n \t\t\t\t),\n \n+\t\t\t\texpect(worker.execArgv).toEqual(['--disallow-code-generation-from-strings']),\n+\n \t\t\t\texpect(worker.workerData.configuration.cache.directory).toBe(\n \t\t\t\t\tPath.resolve(Path.join('happy-dom', 'cache'))\n \t\t\t\t),\n@@ -214,6 +216,8 @@ describe('ServerRenderer', () => {\n \t\t\t\t\t'file://' + Path.resolve(Path.join('src', 'ServerRendererWorker.js'))\n \t\t\t\t),\n \n+\t\t\t\texpect(worker.execArgv).toEqual(['--disallow-code-generation-from-strings']),\n+\n \t\t\t\texpect(worker.workerData.configuration.cache.directory).toBe(\n \t\t\t\t\tPath.resolve(Path.join('happy-dom', 'cache'))\n \t\t\t\t),"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/test/ServerRendererBrowser.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/test/ServerRendererBrowser.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/test/ServerRendererBrowser.test.ts",
          "diff": "@@ -34,7 +34,9 @@ describe('ServerRendererBrowser', () => {\n \t\t\t\treturn Promise.resolve(),\n \t\t\t}),\n \t\t\tconst browser = new ServerRendererBrowser(\n-\t\t\t\tServerRendererConfigurationFactory.createConfiguration()\n+\t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true }\n+\t\t\t\t})\n \t\t\t),\n \t\t\tconst results = await browser.render([{ url: 'https://example.com/gb/en/' }]),\n \n@@ -70,7 +72,9 @@ describe('ServerRendererBrowser', () => {\n \t\t\t\treturn Promise.resolve(),\n \t\t\t}),\n \t\t\tconst browser = new ServerRendererBrowser(\n-\t\t\t\tServerRendererConfigurationFactory.createConfiguration()\n+\t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true }\n+\t\t\t\t})\n \t\t\t),\n \t\t\tconst results = await browser.render(MockedURLList.slice(0, 15).map((url) => ({ url }))),\n \n@@ -97,9 +101,9 @@ describe('ServerRendererBrowser', () => {\n \t\t\tconst writtenFiles: { filePath: string, content: string }[] = [],\n \t\t\tconst requestHeaders: Array<{ [key: string]: string }> = [],\n \n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(async function () {\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(async function (this: Fetch) {\n \t\t\t\tconst headers: { [key: string]: string } = {},\n-\t\t\t\tfor (const [key, value] of this.request.headers) {\n+\t\t\t\tfor (const [key, value] of (<any>this).request.headers) {\n \t\t\t\t\theaders[key] = value,\n \t\t\t\t}\n \t\t\t\trequestHeaders.push(headers),\n@@ -131,7 +135,9 @@ describe('ServerRendererBrowser', () => {\n \t\t\t),\n \n \t\t\tconst browser = new ServerRendererBrowser(\n-\t\t\t\tServerRendererConfigurationFactory.createConfiguration()\n+\t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true }\n+\t\t\t\t})\n \t\t\t),\n \t\t\tconst results = await browser.render(\n \t\t\t\tMockedURLList.slice(0, 15).map((url, index) => ({\n@@ -193,7 +199,9 @@ describe('ServerRendererBrowser', () => {\n \t\t\t\t},\n \t\t\t}),\n \t\t\tconst browser = new ServerRendererBrowser(\n-\t\t\t\tServerRendererConfigurationFactory.createConfiguration()\n+\t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true }\n+\t\t\t\t})\n \t\t\t),\n \t\t\tconst results = await browser.render([{ url: 'https://example.com/gb/en/' }]),\n \n@@ -225,6 +233,7 @@ describe('ServerRendererBrowser', () => {\n \n \t\t\tconst browser = new ServerRendererBrowser(\n \t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true },\n \t\t\t\t\trender: {\n \t\t\t\t\t\ttimeout: 100\n \t\t\t\t\t}\n@@ -264,6 +273,7 @@ The page may contain scripts with timer loops that prevent it from completing. Y\n \n \t\t\tconst browser = new ServerRendererBrowser(\n \t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true },\n \t\t\t\t\trender: {\n \t\t\t\t\t\ttimeout: 100\n \t\t\t\t\t},\n@@ -321,7 +331,9 @@ Timer #1\n \t\t\t}),\n \n \t\t\tconst browser = new ServerRendererBrowser(\n-\t\t\t\tServerRendererConfigurationFactory.createConfiguration()\n+\t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true }\n+\t\t\t\t})\n \t\t\t),\n \t\t\tconst results = await browser.render([{ url: 'https://example.com/gb/en/' }]),\n \t\t\t(<any>results[0]).pageConsole = results[0].pageConsole\n@@ -338,14 +350,14 @@ Timer #1\n \t\t\t\t\theaders: { key1: 'value' },\n \t\t\t\t\toutputFile: null,\n \t\t\t\t\tpageConsole: `Error: Error\n-    at eval (https://example.com/gb/en/:0:0)\n+    at https://example.com/gb/en/:1:26\n     at Timeout._onTimeout (/window/BrowserWindow.ts:0:0)\n     at listOnTimeout (node:internal/timers:0:0)\n     at processTimers (node:internal/timers:0:0)\n `,\n \t\t\t\t\tpageErrors: [\n \t\t\t\t\t\t`Error: Error\n-    at eval (https://example.com/gb/en/:0:0)\n+    at https://example.com/gb/en/:1:26\n     at Timeout._onTimeout (/window/BrowserWindow.ts:0:0)\n     at listOnTimeout (node:internal/timers:0:0)\n     at processTimers (node:internal/timers:0:0)`\n@@ -383,6 +395,7 @@ Timer #1\n \n \t\t\tconst browser = new ServerRendererBrowser(\n \t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true },\n \t\t\t\t\trender: {\n \t\t\t\t\t\tallShadowRoots: true\n \t\t\t\t\t}\n@@ -453,6 +466,7 @@ Timer #1\n \n \t\t\tconst browser = new ServerRendererBrowser(\n \t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true },\n \t\t\t\t\trender: {\n \t\t\t\t\t\tserializableShadowRoots: true\n \t\t\t\t\t}\n@@ -533,6 +547,7 @@ Timer #1\n \n \t\t\tconst browser = new ServerRendererBrowser(\n \t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true },\n \t\t\t\t\trender: {\n \t\t\t\t\t\tallShadowRoots: true,\n \t\t\t\t\t\texcludeShadowRootTags: ['custom-element']\n@@ -601,6 +616,7 @@ Timer #1\n \t\t\t),\n \t\t\tconst browser = new ServerRendererBrowser(\n \t\t\t\tServerRendererConfigurationFactory.createConfiguration({\n+\t\t\t\t\tbrowser: { suppressCodeGenerationFromStringsWarning: true },\n \t\t\t\t\tcache: {\n \t\t\t\t\t\tdisable: true\n \t\t\t\t\t}"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/test/utilities/MockedConfiguration.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/test/utilities/MockedConfiguration.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/test/utilities/MockedConfiguration.ts",
          "diff": "@@ -4,7 +4,9 @@ import ServerRendererLogLevelEnum from '../../src/enums/ServerRendererLogLevelEn\n \n export default <IServerRendererConfiguration>{\n \tbrowser: {\n-\t\tdisableJavaScriptEvaluation: true,\n+\t\tdisableJavaScriptEvaluation: false,\n+\t\tenableJavaScriptEvaluation: false,\n+\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\tdisableJavaScriptFileLoading: true,\n \t\tdisableCSSFileLoading: true,\n \t\tdisableIframePageLoading: false,"
        },
        {
          "filename": "packages/@happy-dom/server-renderer/test/utilities/ProcessArgumentsParser.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/@happy-dom/server-renderer/test/utilities/ProcessArgumentsParser.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/@happy-dom/server-renderer/test/utilities/ProcessArgumentsParser.test.ts",
          "diff": "@@ -308,13 +308,49 @@ describe('ProcessArgumentsParser', () => {\n \t\t\t),\n \t\t}),\n \n+\t\tit('Returns configuration with javascript evaluation disabled.', async () => {\n+\t\t\tconst expectedConfig = {\n+\t\t\t\t...DefaultServerRendererConfiguration,\n+\t\t\t\tbrowser: {\n+\t\t\t\t\t...DefaultServerRendererConfiguration.browser,\n+\t\t\t\t\tenableJavaScriptEvaluation: false\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\texpect(\n+\t\t\t\tawait ProcessArgumentsParser.getConfiguration([\n+\t\t\t\t\t'node',\n+\t\t\t\t\t'script.js',\n+\t\t\t\t\t'--browser.disableJavaScriptEvaluation'\n+\t\t\t\t])\n+\t\t\t).toEqual(expectedConfig),\n+\t\t}),\n+\n+\t\tit('Returns configuration with suppressed code generation warning.', async () => {\n+\t\t\tconst expectedConfig = {\n+\t\t\t\t...DefaultServerRendererConfiguration,\n+\t\t\t\tbrowser: {\n+\t\t\t\t\t...DefaultServerRendererConfiguration.browser,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n+\t\t\t},\n+\t\t\texpect(\n+\t\t\t\tawait ProcessArgumentsParser.getConfiguration([\n+\t\t\t\t\t'node',\n+\t\t\t\t\t'script.js',\n+\t\t\t\t\t'--browser.suppressCodeGenerationFromStringsWarning'\n+\t\t\t\t])\n+\t\t\t).toEqual(expectedConfig),\n+\t\t}),\n+\n \t\tit('Returns configuration for all options.', async () => {\n \t\t\tconst specialArguments = [\n \t\t\t\t// Deprecated\n \t\t\t\t'browser.disableErrorCapturing',\n \t\t\t\t'browser.enableFileSystemHttpRequests',\n \t\t\t\t'browser.disableIframePageLoading',\n+\t\t\t\t'browser.disableJavaScriptEvaluation',\n \t\t\t\t// Special handling\n+\t\t\t\t'browser.enableJavaScriptEvaluation',\n \t\t\t\t'browser.fetch.requestHeaders',\n \t\t\t\t'browser.fetch.virtualServers',\n \t\t\t\t'urls'\n@@ -345,6 +381,7 @@ describe('ProcessArgumentsParser', () => {\n \n \t\t\targs.unshift('script.js'),\n \t\t\targs.unshift('node'),\n+\t\t\targs.push('--browser.disableJavaScriptEvaluation'),\n \t\t\targs.push('--browser.fetch.requestHeaders=\"X-Custom-Header-1:Value-1\"'),\n \t\t\targs.push('--browser.fetch.requestHeaders=\"https://example.com/|X-Custom-Header-2:Value-2\"'),\n \t\t\targs.push('--browser.fetch.virtualServers=\"https://example.com/path/|./virtual-server/path\"'),"
        },
        {
          "filename": "packages/happy-dom/src/PropertySymbol.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/PropertySymbol.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/PropertySymbol.ts",
          "diff": "@@ -404,3 +404,4 @@ export const cssRule = Symbol('cssRule'),\n export const rulePrefix = Symbol('rulePrefix'),\n export const virtualServerFile = Symbol('virtualServerFile'),\n export const frames = Symbol('frames'),\n+export const disableEvaluation = Symbol('disableEvaluation'),"
        },
        {
          "filename": "packages/happy-dom/src/browser/DefaultBrowserSettings.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/browser/DefaultBrowserSettings.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/browser/DefaultBrowserSettings.ts",
          "diff": "@@ -5,6 +5,7 @@ import IBrowserSettings from './types/IBrowserSettings.js',\n \n export default <IBrowserSettings>{\n \tdisableJavaScriptEvaluation: false,\n+\tenableJavaScriptEvaluation: false,\n \tdisableJavaScriptFileLoading: false,\n \tdisableCSSFileLoading: false,\n \tdisableIframePageLoading: false,\n@@ -13,6 +14,7 @@ export default <IBrowserSettings>{\n \tdisableErrorCapturing: false,\n \terrorCapture: BrowserErrorCaptureEnum.tryAndCatch,\n \tenableFileSystemHttpRequests: false,\n+\tsuppressCodeGenerationFromStringsWarning: false,\n \ttimer: {\n \t\tmaxTimeout: -1,\n \t\tmaxIntervalTime: -1,"
        },
        {
          "filename": "packages/happy-dom/src/browser/types/IBrowserSettings.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/browser/types/IBrowserSettings.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/browser/types/IBrowserSettings.ts",
          "diff": "@@ -11,9 +11,23 @@ import BrowserWindow from '../../window/BrowserWindow.js',\n  * Browser settings.\n  */\n export default interface IBrowserSettings {\n-\t/** Disables JavaScript evaluation. */\n+\t/**\n+\t * Disables JavaScript evaluation.\n+\t *\n+\t * @deprecated Javascript evaluation is now disabled by default. Use \"enableJavaScriptEvaluation\" if you want to enable it.\n+\t */\n \tdisableJavaScriptEvaluation: boolean,\n \n+\t/**\n+\t * Enables JavaScript evaluation.\n+\t *\n+\t * A VM Context is not an isolated environment, and if you run untrusted code you are at risk of RCE (Remote Code Execution) attacks.\n+\t * It is recommended to disable code generation at process level by running node with the \"--disallow-code-generation-from-strings\" flag enabled to protect against these types of attacks.\n+\t *\n+\t * @see https://github.com/capricorn86/happy-dom/wiki/Code-Generation-From-Strings-Warning\n+\t */\n+\tenableJavaScriptEvaluation: boolean,\n+\n \t/** Disables JavaScript file loading. */\n \tdisableJavaScriptFileLoading: boolean,\n \n@@ -26,6 +40,9 @@ export default interface IBrowserSettings {\n \t/** Handle disabled resource loading as success */\n \thandleDisabledFileLoadingAsSuccess: boolean,\n \n+\t/** Suppresses the warning that is printed when code generation from strings is enabled at process level. */\n+\tsuppressCodeGenerationFromStringsWarning: boolean,\n+\n \t/**\n \t * Settings for timers\n \t */"
        },
        {
          "filename": "packages/happy-dom/src/browser/types/IOptionalBrowserSettings.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/browser/types/IOptionalBrowserSettings.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/browser/types/IOptionalBrowserSettings.ts",
          "diff": "@@ -8,9 +8,23 @@ import IOptionalTimerLoopsLimit from '../../window/IOptionalTimerLoopsLimit.js',\n import BrowserWindow from '../../window/BrowserWindow.js',\n \n export default interface IOptionalBrowserSettings {\n-\t/** Disables JavaScript evaluation. */\n+\t/**\n+\t * Disables JavaScript evaluation.\n+\t *\n+\t * @deprecated Javascript evaluation is now disabled by default. Use \"enableJavaScriptEvaluation\" if you want to enable it.\n+\t */\n \tdisableJavaScriptEvaluation?: boolean,\n \n+\t/**\n+\t * Enables JavaScript evaluation.\n+\t *\n+\t * A VM Context is not an isolated environment, and if you run untrusted code you are at risk of RCE (Remote Code Execution) attacks.\n+\t * It is recommended to disable code generation at process level by running node with the \"--disallow-code-generation-from-strings\" flag enabled to protect against these types of attacks.\n+\t *\n+\t * @see https://github.com/capricorn86/happy-dom/wiki/Code-Generation-From-Strings-Warning\n+\t */\n+\tenableJavaScriptEvaluation?: boolean,\n+\n \t/** Disables JavaScript file loading. */\n \tdisableJavaScriptFileLoading?: boolean,\n \n@@ -23,6 +37,9 @@ export default interface IOptionalBrowserSettings {\n \t/** Handle disabled file loading as success */\n \thandleDisabledFileLoadingAsSuccess?: boolean,\n \n+\t/** Suppresses the warning that is printed when code generation from strings is enabled at process level. */\n+\tsuppressCodeGenerationFromStringsWarning?: boolean,\n+\n \t/** Settings for timers */\n \ttimer?: {\n \t\tmaxTimeout?: number,"
        },
        {
          "filename": "packages/happy-dom/src/browser/utilities/BrowserFrameNavigator.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/browser/utilities/BrowserFrameNavigator.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/browser/utilities/BrowserFrameNavigator.ts",
          "diff": "@@ -89,12 +89,12 @@ export default class BrowserFrameNavigator {\n \n \t\t// Javascript protocol\n \t\tif (targetURL.protocol === 'javascript:') {\n-\t\t\tif (frame && !frame.page.context.browser.settings.disableJavaScriptEvaluation) {\n+\t\t\tif (frame && frame.page.context.browser.settings.enableJavaScriptEvaluation) {\n \t\t\t\tconst readyStateManager = frame.window[PropertySymbol.readyStateManager],\n \t\t\t\tconst asyncTaskManager = frame[PropertySymbol.asyncTaskManager],\n \n \t\t\t\tconst taskID = readyStateManager.startTask(),\n-\t\t\t\tconst code = `${targetURL.href.replace('javascript:', '')}\\n//# sourceURL=${frame.url}`,\n+\t\t\t\tconst code = targetURL.href.replace('javascript:', ''),\n \n \t\t\t\t// The browser will wait for the next tick before executing the script.\n \t\t\t\t// Fixes issue where evaluating the response can throw an error.\n@@ -110,7 +110,7 @@ export default class BrowserFrameNavigator {\n \t\t\t\t\t\t\tclearImmediate(immediate),\n \t\t\t\t\t\t\tresolve(null),\n \t\t\t\t\t\t}),\n-\t\t\t\t\t\tframe.window.eval(code),\n+\t\t\t\t\t\tframe.window[PropertySymbol.evaluateScript](code, { filename: frame.url }),\n \t\t\t\t\t}),\n \t\t\t\t}),\n "
        },
        {
          "filename": "packages/happy-dom/src/html-parser/HTMLParser.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/html-parser/HTMLParser.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/html-parser/HTMLParser.ts",
          "diff": "@@ -776,10 +776,11 @@ export default class HTMLParser {\n \t\t// However, they are allowed to be executed when document.write() is used.\n \t\t// See: https://developer.mozilla.org/en-US/docs/Web/API/HTMLScriptElement\n \t\tif (upperTagName === 'SCRIPT') {\n-\t\t\t(<HTMLScriptElement>this.currentNode)[PropertySymbol.evaluateScript] = this.evaluateScripts,\n+\t\t\t(<HTMLScriptElement>this.currentNode)[PropertySymbol.disableEvaluation] =\n+\t\t\t\t!this.evaluateScripts,\n \t\t} else if (upperTagName === 'LINK') {\n \t\t\t// An assumption that the same rule should be applied for the HTMLLinkElement is made here.\n-\t\t\t(<HTMLLinkElement>this.currentNode)[PropertySymbol.evaluateCSS] = this.evaluateScripts,\n+\t\t\t(<HTMLLinkElement>this.currentNode)[PropertySymbol.disableEvaluation] = !this.evaluateScripts,\n \t\t}\n \n \t\t// Plain text elements such as <script> and <style> should only contain text."
        },
        {
          "filename": "packages/happy-dom/src/module/ECMAScriptModuleCompiler.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/module/ECMAScriptModuleCompiler.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/module/ECMAScriptModuleCompiler.ts",
          "diff": "@@ -401,10 +401,14 @@ export default class ECMAScriptModuleCompiler {\n \t\t}\n \n \t\tnewCode += '})',\n-\t\tnewCode += `\\n//# sourceURL=${sourceURL || moduleURL}`,\n \n \t\ttry {\n-\t\t\treturn { imports, execute: this.window.eval(newCode) },\n+\t\t\treturn {\n+\t\t\t\timports,\n+\t\t\t\texecute: this.window[PropertySymbol.evaluateScript](newCode, {\n+\t\t\t\t\tfilename: sourceURL || moduleURL\n+\t\t\t\t})\n+\t\t\t},\n \t\t} catch (e) {\n \t\t\tconst errorMessage = this.getError(moduleURL, code, sourceURL) || (<Error>e).message,\n \t\t\tconst error = new this.window.SyntaxError("
        },
        {
          "filename": "packages/happy-dom/src/nodes/element/ElementEventAttributeUtility.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/nodes/element/ElementEventAttributeUtility.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/nodes/element/ElementEventAttributeUtility.ts",
          "diff": "@@ -32,7 +32,7 @@ export default class ElementEventAttributeUtility {\n \n \t\tconst browserSettings = new WindowBrowserContext(window).getSettings(),\n \n-\t\tif (!browserSettings) {\n+\t\tif (!browserSettings || !browserSettings.enableJavaScriptEvaluation) {\n \t\t\treturn null,\n \t\t}\n \n@@ -63,13 +63,14 @@ export default class ElementEventAttributeUtility {\n \t\t}\n \n \t\tnewCode += '})',\n-\t\tnewCode += `\\n//# sourceURL=${window.location.href}`,\n \n \t\tlet listener: ((event: Event) => void) | null = null,\n \n \t\ttry {\n-\t\t\tlistener = window.eval(newCode).bind(element, {\n-\t\t\t\tdispatchError: window[PropertySymbol.dispatchError]\n+\t\t\tlistener = window[PropertySymbol.evaluateScript](newCode, {\n+\t\t\t\tfilename: window.location.href\n+\t\t\t}).bind(element, {\n+\t\t\t\tdispatchError: window[PropertySymbol.dispatchError].bind(window)\n \t\t\t}),\n \t\t} catch (e) {\n \t\t\tconst error = new window.SyntaxError("
        },
        {
          "filename": "packages/happy-dom/src/nodes/html-link-element/HTMLLinkElement.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/nodes/html-link-element/HTMLLinkElement.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/nodes/html-link-element/HTMLLinkElement.ts",
          "diff": "@@ -24,7 +24,7 @@ import IResourceFetchResponse from '../../fetch/types/IResourceFetchResponse.js'\n export default class HTMLLinkElement extends HTMLElement {\n \t// Internal properties\n \tpublic [PropertySymbol.sheet]: CSSStyleSheet | null = null,\n-\tpublic [PropertySymbol.evaluateCSS] = true,\n+\tpublic [PropertySymbol.disableEvaluation] = false,\n \tpublic [PropertySymbol.relList]: DOMTokenList | null = null,\n \t#loadedStyleSheetURL: string | null = null,\n \n@@ -305,7 +305,7 @@ export default class HTMLLinkElement extends HTMLElement {\n \t\t\t!browserSettings ||\n \t\t\t!this[PropertySymbol.isConnected] ||\n \t\t\tbrowserSettings.disableJavaScriptFileLoading ||\n-\t\t\tbrowserSettings.disableJavaScriptEvaluation\n+\t\t\t!browserSettings.enableJavaScriptEvaluation\n \t\t) {\n \t\t\treturn,\n \t\t}\n@@ -351,7 +351,7 @@ export default class HTMLLinkElement extends HTMLElement {\n \n \t\tif (\n \t\t\tas === 'script' &&\n-\t\t\t(browserSettings.disableJavaScriptFileLoading || browserSettings.disableJavaScriptEvaluation)\n+\t\t\t(browserSettings.disableJavaScriptFileLoading || !browserSettings.enableJavaScriptEvaluation)\n \t\t) {\n \t\t\treturn,\n \t\t}\n@@ -422,7 +422,7 @@ export default class HTMLLinkElement extends HTMLElement {\n \n \t\tconst browserSettings = browserFrame.page.context.browser.settings,\n \n-\t\tif (!this[PropertySymbol.evaluateCSS] || !this[PropertySymbol.isConnected]) {\n+\t\tif (this[PropertySymbol.disableEvaluation] || !this[PropertySymbol.isConnected]) {\n \t\t\treturn,\n \t\t}\n "
        },
        {
          "filename": "packages/happy-dom/src/nodes/html-media-element/TextTrackList.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/nodes/html-media-element/TextTrackList.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/nodes/html-media-element/TextTrackList.ts",
          "diff": "@@ -9,6 +9,9 @@ import ClassMethodBinder from '../../utilities/ClassMethodBinder.js',\n  * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrackList\n  */\n export default class TextTrackList extends EventTarget {\n+\t// Index signature\n+\t[index: number]: TextTrack | undefined,\n+\n \t// Internal properties\n \tpublic [PropertySymbol.items]: TextTrack[] = [],\n "
        },
        {
          "filename": "packages/happy-dom/src/nodes/html-script-element/HTMLScriptElement.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/nodes/html-script-element/HTMLScriptElement.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/nodes/html-script-element/HTMLScriptElement.ts",
          "diff": "@@ -25,7 +25,7 @@ export default class HTMLScriptElement extends HTMLElement {\n \tpublic declare cloneNode: (deep?: boolean) => HTMLScriptElement,\n \n \t// Internal properties\n-\tpublic [PropertySymbol.evaluateScript] = true,\n+\tpublic [PropertySymbol.disableEvaluation] = false,\n \tpublic [PropertySymbol.blocking]: DOMTokenList | null = null,\n \n \t// Private properties\n@@ -349,32 +349,34 @@ export default class HTMLScriptElement extends HTMLElement {\n \n \t\tsuper[PropertySymbol.connectedToDocument](),\n \n-\t\tif (this[PropertySymbol.evaluateScript]) {\n-\t\t\tconst src = this.getAttribute('src'),\n+\t\tif (this[PropertySymbol.disableEvaluation]) {\n+\t\t\treturn,\n+\t\t}\n \n-\t\t\tif (src !== null) {\n-\t\t\t\tif (this.getAttribute('type') === 'module') {\n-\t\t\t\t\tthis.#loadModule(src),\n-\t\t\t\t} else {\n-\t\t\t\t\tthis.#loadScript(src),\n-\t\t\t\t}\n-\t\t\t} else if (browserSettings && !browserSettings.disableJavaScriptEvaluation) {\n-\t\t\t\tconst source = this.textContent,\n-\t\t\t\tconst type = this.getAttribute('type'),\n-\n-\t\t\t\tif (source) {\n-\t\t\t\t\tif (type === 'module') {\n-\t\t\t\t\t\tthis.#evaluateModule(source),\n-\t\t\t\t\t} else if (type === 'importmap') {\n-\t\t\t\t\t\tthis.#evaluateImportMap(source),\n-\t\t\t\t\t} else if (\n-\t\t\t\t\t\ttype === null ||\n-\t\t\t\t\t\ttype === 'application/x-ecmascript' ||\n-\t\t\t\t\t\ttype === 'application/x-javascript' ||\n-\t\t\t\t\t\ttype.startsWith('text/javascript')\n-\t\t\t\t\t) {\n-\t\t\t\t\t\tthis.#evaluateScript(source),\n-\t\t\t\t\t}\n+\t\tconst src = this.getAttribute('src'),\n+\n+\t\tif (src !== null) {\n+\t\t\tif (this.getAttribute('type') === 'module') {\n+\t\t\t\tthis.#loadModule(src),\n+\t\t\t} else {\n+\t\t\t\tthis.#loadScript(src),\n+\t\t\t}\n+\t\t} else if (browserSettings && browserSettings.enableJavaScriptEvaluation) {\n+\t\t\tconst source = this.textContent,\n+\t\t\tconst type = this.getAttribute('type'),\n+\n+\t\t\tif (source) {\n+\t\t\t\tif (type === 'module') {\n+\t\t\t\t\tthis.#evaluateModule(source),\n+\t\t\t\t} else if (type === 'importmap') {\n+\t\t\t\t\tthis.#evaluateImportMap(source),\n+\t\t\t\t} else if (\n+\t\t\t\t\ttype === null ||\n+\t\t\t\t\ttype === 'application/x-ecmascript' ||\n+\t\t\t\t\ttype === 'application/x-javascript' ||\n+\t\t\t\t\ttype.startsWith('text/javascript')\n+\t\t\t\t) {\n+\t\t\t\t\tthis.#evaluateScript(source),\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -413,7 +415,7 @@ export default class HTMLScriptElement extends HTMLElement {\n \t\tconst browserSettings = new WindowBrowserContext(window).getSettings(),\n \t\tconst browserFrame = new WindowBrowserContext(window).getBrowserFrame(),\n \n-\t\tif (!browserFrame || !browserSettings) {\n+\t\tif (!browserFrame || !browserSettings || !browserSettings.enableJavaScriptEvaluation) {\n \t\t\treturn,\n \t\t}\n \n@@ -446,7 +448,12 @@ export default class HTMLScriptElement extends HTMLElement {\n \t\tconst browserSettings = new WindowBrowserContext(window).getSettings(),\n \t\tconst browserFrame = new WindowBrowserContext(window).getBrowserFrame(),\n \n-\t\tif (!browserFrame || !browserSettings || window[PropertySymbol.moduleImportMap]) {\n+\t\tif (\n+\t\t\t!browserFrame ||\n+\t\t\t!browserSettings ||\n+\t\t\twindow[PropertySymbol.moduleImportMap] ||\n+\t\t\t!browserSettings.enableJavaScriptEvaluation\n+\t\t) {\n \t\t\treturn,\n \t\t}\n \n@@ -510,9 +517,9 @@ export default class HTMLScriptElement extends HTMLElement {\n \t/**\n \t * Evaluates a script.\n \t *\n-\t * @param source Source.\n+\t * @param code Code.\n \t */\n-\t#evaluateScript(source: string): void {\n+\t#evaluateScript(code: string): void {\n \t\tconst window = this[PropertySymbol.window],\n \t\tconst browserSettings = new WindowBrowserContext(window).getSettings(),\n \n@@ -522,16 +529,18 @@ export default class HTMLScriptElement extends HTMLElement {\n \n \t\tthis[PropertySymbol.ownerDocument][PropertySymbol.currentScript] = this,\n \n-\t\tconst code = `${source}\\n//# sourceURL=${this[PropertySymbol.ownerDocument].location.href}`,\n-\n \t\tif (\n \t\t\tbrowserSettings.disableErrorCapturing ||\n \t\t\tbrowserSettings.errorCapture !== BrowserErrorCaptureEnum.tryAndCatch\n \t\t) {\n-\t\t\twindow.eval(code),\n+\t\t\twindow[PropertySymbol.evaluateScript](code, {\n+\t\t\t\tfilename: this[PropertySymbol.ownerDocument].location.href\n+\t\t\t}),\n \t\t} else {\n \t\t\ttry {\n-\t\t\t\twindow.eval(code),\n+\t\t\t\twindow[PropertySymbol.evaluateScript](code, {\n+\t\t\t\t\tfilename: this[PropertySymbol.ownerDocument].location.href\n+\t\t\t\t}),\n \t\t\t} catch (error) {\n \t\t\t\twindow[PropertySymbol.dispatchError](<Error>error),\n \t\t\t}\n@@ -560,7 +569,7 @@ export default class HTMLScriptElement extends HTMLElement {\n \n \t\tif (\n \t\t\tbrowserSettings &&\n-\t\t\t(browserSettings.disableJavaScriptFileLoading || browserSettings.disableJavaScriptEvaluation)\n+\t\t\t(browserSettings.disableJavaScriptFileLoading || !browserSettings.enableJavaScriptEvaluation)\n \t\t) {\n \t\t\tif (browserSettings.handleDisabledFileLoadingAsSuccess) {\n \t\t\t\tthis.dispatchEvent(new Event('load')),\n@@ -639,7 +648,7 @@ export default class HTMLScriptElement extends HTMLElement {\n \n \t\tif (\n \t\t\tbrowserSettings &&\n-\t\t\t(browserSettings.disableJavaScriptFileLoading || browserSettings.disableJavaScriptEvaluation)\n+\t\t\t(browserSettings.disableJavaScriptFileLoading || !browserSettings.enableJavaScriptEvaluation)\n \t\t) {\n \t\t\tif (browserSettings.handleDisabledFileLoadingAsSuccess) {\n \t\t\t\tthis.dispatchEvent(new Event('load')),\n@@ -693,18 +702,18 @@ export default class HTMLScriptElement extends HTMLElement {\n \n \t\tthis[PropertySymbol.ownerDocument][PropertySymbol.currentScript] = this,\n \n-\t\tconst code = `${response.content}\\n//# sourceURL=${\n-\t\t\tresponse.virtualServerFile || absoluteURLString\n-\t\t}`,\n-\n \t\tif (\n \t\t\tbrowserSettings.disableErrorCapturing ||\n \t\t\tbrowserSettings.errorCapture !== BrowserErrorCaptureEnum.tryAndCatch\n \t\t) {\n-\t\t\tthis[PropertySymbol.window].eval(code),\n+\t\t\tthis[PropertySymbol.window][PropertySymbol.evaluateScript](response.content, {\n+\t\t\t\tfilename: response.virtualServerFile || absoluteURLString\n+\t\t\t}),\n \t\t} else {\n \t\t\ttry {\n-\t\t\t\tthis[PropertySymbol.window].eval(code),\n+\t\t\t\tthis[PropertySymbol.window][PropertySymbol.evaluateScript](response.content, {\n+\t\t\t\t\tfilename: response.virtualServerFile || absoluteURLString\n+\t\t\t\t}),\n \t\t\t} catch (error) {\n \t\t\t\tthis[PropertySymbol.ownerDocument][PropertySymbol.currentScript] = null,\n \t\t\t\twindow[PropertySymbol.dispatchError](<Error>error),"
        },
        {
          "filename": "packages/happy-dom/src/nodes/html-select-element/HTMLSelectElement.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/nodes/html-select-element/HTMLSelectElement.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/nodes/html-select-element/HTMLSelectElement.ts",
          "diff": "@@ -25,6 +25,9 @@ import BrowserWindow from '../../window/BrowserWindow.js',\n  * https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement.\n  */\n export default class HTMLSelectElement extends HTMLElement {\n+\t// Index signature\n+\t[index: number]: HTMLOptionElement | undefined,\n+\n \t// Injected by WindowContextClassExtender\n \tprotected declare [PropertySymbol.window]: BrowserWindow,\n "
        },
        {
          "filename": "packages/happy-dom/src/window/BrowserWindow.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/window/BrowserWindow.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/window/BrowserWindow.ts",
          "diff": "@@ -331,6 +331,16 @@ const TIMER = {\n \n const IS_NODE_JS_TIMEOUT_ENVIRONMENT = setTimeout.toString().includes('new Timeout'),\n \n+const IS_PROCESS_LEVEL_CODE_GENERATION_FROM_STRINGS_ALLOWED = (() => {\n+\ttry {\n+\t\t// eslint-disable-next-line no-new-func\n+\t\tnew Function('return true,')(),\n+\t\treturn true,\n+\t} catch {\n+\t\treturn false,\n+\t}\n+})(),\n+\n /**\n  * Class for PerformanceObserverEntryList as it is only available as an interface from Node.js.\n  */\n@@ -779,6 +789,7 @@ export default class BrowserWindow extends EventTarget implements INodeJSGlobal\n \tpublic declare encodeURI: typeof encodeURI,\n \tpublic declare encodeURIComponent: typeof encodeURIComponent,\n \tpublic declare eval: typeof eval,\n+\n \t/**\n \t * @deprecated\n \t */\n@@ -847,6 +858,21 @@ export default class BrowserWindow extends EventTarget implements INodeJSGlobal\n \tconstructor(browserFrame: IBrowserFrame, options?: { url?: string }) {\n \t\tsuper(),\n \n+\t\tif (\n+\t\t\tIS_PROCESS_LEVEL_CODE_GENERATION_FROM_STRINGS_ALLOWED &&\n+\t\t\tbrowserFrame.page.context.browser.settings.enableJavaScriptEvaluation &&\n+\t\t\t!browserFrame.page.context.browser.settings.suppressCodeGenerationFromStringsWarning\n+\t\t) {\n+\t\t\t// eslint-disable-next-line no-console\n+\t\t\tconsole.warn(\n+\t\t\t\t'\\nWarning! Happy DOM has JavaScript evaluation enabled and is running in an environment with code generation from strings (eval) enabled at process level.' +\n+\t\t\t\t\t'\\n\\nA VM Context is not an isolated environment, and if you run untrusted code you are at risk of RCE (Remote Code Execution) attacks. The attacker can use code generation to escape the VM and run code at process level.' +\n+\t\t\t\t\t'\\n\\nIt is recommended to disable code generation at process level by running node with the \"--disallow-code-generation-from-strings\" flag enabled when Javascript evaluation is enabled in Happy DOM.' +\n+\t\t\t\t\t' You can suppress this warning by setting \"suppressCodeGenerationFromStringsWarning\" to \"true\" at your own risk.' +\n+\t\t\t\t\t'\\n\\nFor more information, see https://github.com/capricorn86/happy-dom/wiki/Code-Generation-From-Strings-Warning\\n\\n'\n+\t\t\t),\n+\t\t}\n+\n \t\tthis.#browserFrame = browserFrame,\n \n \t\tthis.console = browserFrame.page.console,\n@@ -1806,6 +1832,18 @@ export default class BrowserWindow extends EventTarget implements INodeJSGlobal\n \t\tthis.dispatchEvent(new ErrorEvent('error', { message: error.message, error })),\n \t}\n \n+\t/**\n+\t * Evaluates code in a VM context.\n+\t *\n+\t * @param code Code.\n+\t * @param [options] Options.\n+\t * @param [options.filename] Filename.\n+\t * @returns any.\n+\t */\n+\tpublic [PropertySymbol.evaluateScript](code: string, options?: { filename?: string }): any {\n+\t\treturn new VM.Script(code, options).runInContext(this),\n+\t}\n+\n \t/**\n \t * Setup of VM context.\n \t */"
        },
        {
          "filename": "packages/happy-dom/src/window/GlobalWindow.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/window/GlobalWindow.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/window/GlobalWindow.ts",
          "diff": "@@ -69,7 +69,20 @@ export default class GlobalWindow extends Window {\n \tpublic unescape: (str: string) => string = globalThis.unescape,\n \n \t/**\n-\t * Setup of VM context.\n+\t * @override\n+\t */\n+\tpublic override [PropertySymbol.evaluateScript](\n+\t\tcode: string,\n+\t\toptions?: { filename?: string }\n+\t): any {\n+\t\tif (options?.filename) {\n+\t\t\treturn this.eval(`${code}\\n//# sourceURL=${options.filename}`),\n+\t\t}\n+\t\treturn this.eval(code),\n+\t}\n+\n+\t/**\n+\t * @override\n \t */\n \tprotected override [PropertySymbol.setupVMContext](): void {\n \t\t// Do nothing"
        },
        {
          "filename": "packages/happy-dom/src/xml-parser/XMLParser.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/src/xml-parser/XMLParser.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/src/xml-parser/XMLParser.ts",
          "diff": "@@ -109,9 +109,6 @@ export default class XMLParser {\n \t * Constructor.\n \t *\n \t * @param window Window.\n-\t * @param [options] Options.\n-\t * @param [options.mode] Mode. Defaults to \"htmlFragment\".\n-\t * @param [options.evaluateScripts] Set to \"true\" to enable script execution\n \t */\n \tconstructor(window: BrowserWindow) {\n \t\tthis.window = window,"
        },
        {
          "filename": "packages/happy-dom/test/browser/Browser.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/browser/Browser.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/browser/Browser.test.ts",
          "diff": "@@ -65,7 +65,7 @@ describe('Browser', () => {\n \n \t\tit('Returns the settings with custom settings.', () => {\n \t\t\tconst settings = {\n-\t\t\t\tdisableJavaScriptEvaluation: true,\n+\t\t\t\tenableJavaScriptEvaluation: true,\n \t\t\t\tnavigator: {\n \t\t\t\t\tuserAgent: 'test'\n \t\t\t\t}\n@@ -135,9 +135,9 @@ describe('Browser', () => {\n \t\t\tpage2.evaluate('setTimeout(() => { globalThis.test = 2, }, 10),'),\n \t\t\tpage3.evaluate('setTimeout(() => { globalThis.test = 3, }, 10),'),\n \t\t\tawait browser.waitUntilComplete(),\n-\t\t\texpect(page1.mainFrame.window['test']).toBe(1),\n-\t\t\texpect(page2.mainFrame.window['test']).toBe(2),\n-\t\t\texpect(page3.mainFrame.window['test']).toBe(3),\n+\t\t\texpect((<any>page1.mainFrame.window)['test']).toBe(1),\n+\t\t\texpect((<any>page2.mainFrame.window)['test']).toBe(2),\n+\t\t\texpect((<any>page3.mainFrame.window)['test']).toBe(3),\n \t\t}),\n \t}),\n \n@@ -152,9 +152,9 @@ describe('Browser', () => {\n \t\t\tpage3.evaluate('setTimeout(() => { globalThis.test = 3, }, 10),'),\n \t\t\tbrowser.abort(),\n \t\t\tawait new Promise((resolve) => setTimeout(resolve, 50)),\n-\t\t\texpect(page1.mainFrame.window['test']).toBeUndefined(),\n-\t\t\texpect(page2.mainFrame.window['test']).toBeUndefined(),\n-\t\t\texpect(page3.mainFrame.window['test']).toBeUndefined(),\n+\t\t\texpect((<any>page1.mainFrame.window)['test']).toBeUndefined(),\n+\t\t\texpect((<any>page2.mainFrame.window)['test']).toBeUndefined(),\n+\t\t\texpect((<any>page3.mainFrame.window)['test']).toBeUndefined(),\n \t\t}),\n \t}),\n "
        },
        {
          "filename": "packages/happy-dom/test/browser/BrowserFrame.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/browser/BrowserFrame.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/browser/BrowserFrame.test.ts",
          "diff": "@@ -152,9 +152,9 @@ describe('BrowserFrame', () => {\n \t\t\tframe1.evaluate('setTimeout(() => { globalThis.test = 2, }, 10),'),\n \t\t\tframe2.evaluate('setTimeout(() => { globalThis.test = 3, }, 10),'),\n \t\t\tawait page.waitUntilComplete(),\n-\t\t\texpect(page.mainFrame.window['test']).toBe(1),\n-\t\t\texpect(frame1.window['test']).toBe(2),\n-\t\t\texpect(frame2.window['test']).toBe(3),\n+\t\t\texpect((<any>page.mainFrame.window)['test']).toBe(1),\n+\t\t\texpect((<any>frame1.window)['test']).toBe(2),\n+\t\t\texpect((<any>frame2.window)['test']).toBe(3),\n \t\t}),\n \n \t\tit('Traces never ending timeout when calling waitUntilComplete() with the setting \"debug.traceWaitUntilComplete\" set to a time in ms.', async () => {\n@@ -177,7 +177,7 @@ describe('BrowserFrame', () => {\n \t\t\ttry {\n \t\t\t\tawait page.waitUntilComplete(),\n \t\t\t} catch (e) {\n-\t\t\t\terror = e,\n+\t\t\t\terror = <Error>e,\n \t\t\t}\n \t\t\texpect(error?.toString().replace(STACK_TRACE_REGEXP, '') + '> testFunction (test.js:1:1)\\n')\n \t\t\t\t.toBe(`Error: The maximum time was reached for \"waitUntilComplete()\".\n@@ -210,7 +210,7 @@ Timer #1\n \t\t\ttry {\n \t\t\t\tawait page.waitUntilComplete(),\n \t\t\t} catch (e) {\n-\t\t\t\terror = e,\n+\t\t\t\terror = <Error>e,\n \t\t\t}\n \t\t\texpect(error?.toString().replace(STACK_TRACE_REGEXP, '') + '> testFunction (test.js:1:1)\\n')\n \t\t\t\t.toBe(`Error: The maximum time was reached for \"waitUntilComplete()\".\n@@ -272,9 +272,9 @@ Task #1\n \t\t\tframe2.evaluate('setTimeout(() => { globalThis.test = 2, }, 10),'),\n \t\t\tpage.abort(),\n \t\t\tawait new Promise((resolve) => setTimeout(resolve, 50)),\n-\t\t\texpect(page.mainFrame.window['test']).toBeUndefined(),\n-\t\t\texpect(frame1.window['test']).toBeUndefined(),\n-\t\t\texpect(frame2.window['test']).toBeUndefined(),\n+\t\t\texpect((<any>page.mainFrame.window)['test']).toBeUndefined(),\n+\t\t\texpect((<any>frame1.window)['test']).toBeUndefined(),\n+\t\t\texpect((<any>frame2.window)['test']).toBeUndefined(),\n \t\t}),\n \t}),\n \n@@ -283,22 +283,24 @@ Task #1\n \t\t\tconst browser = new Browser(),\n \t\t\tconst page = browser.newPage(),\n \t\t\texpect(page.mainFrame.evaluate('globalThis.test = 1')).toBe(1),\n-\t\t\texpect(page.mainFrame.window['test']).toBe(1),\n+\t\t\texpect((<any>page.mainFrame.window)['test']).toBe(1),\n \t\t}),\n \n \t\tit(\"Evaluates a VM script in the frame's context.\", () => {\n \t\t\tconst browser = new Browser(),\n \t\t\tconst page = browser.newPage(),\n \t\t\texpect(page.mainFrame.evaluate(new Script('globalThis.test = 1'))).toBe(1),\n-\t\t\texpect(page.mainFrame.window['test']).toBe(1),\n+\t\t\texpect((<any>page.mainFrame.window)['test']).toBe(1),\n \t\t}),\n \t}),\n \n \tdescribe('goto()', () => {\n \t\tit('Navigates to a URL.', async () => {\n \t\t\tlet request: Request | null = null,\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = (<any>this).request,\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\turl: request?.url,\n \t\t\t\t\ttext: () =>\n@@ -326,8 +328,10 @@ Task #1\n \n \t\tit('Triggers \"beforeContentCallback\" before content is loaded into the document', async () => {\n \t\t\tlet request: Request | null = null,\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = (<any>this).request,\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\turl: request?.url,\n \t\t\t\t\ttext: () =>\n@@ -353,8 +357,10 @@ Task #1\n \n \t\tit('Triggers \"browser.settings.navigation.beforeContentCallback\" before content is loaded into the document', async () => {\n \t\t\tlet request: Request | null = null,\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = (<any>this).request,\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\turl: request?.url,\n \t\t\t\t\ttext: () =>\n@@ -383,7 +389,12 @@ Task #1\n \t\t}),\n \n \t\tit('Navigates to a URL with \"javascript:\" as protocol.', async () => {\n-\t\t\tconst browser = new Browser(),\n+\t\t\tconst browser = new Browser({\n+\t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n+\t\t\t}),\n \t\t\tconst page = browser.newPage(),\n \t\t\tconst oldWindow = page.mainFrame.window,\n \t\t\tconst response = await page.mainFrame.goto('javascript:document.write(\"test\"),'),\n@@ -416,7 +427,7 @@ Task #1\n \t\t\t\t\ttimeout: 1\n \t\t\t\t}),\n \t\t\t} catch (e) {\n-\t\t\t\terror = e,\n+\t\t\t\terror = <Error>e,\n \t\t\t}\n \n \t\t\texpect(error).toEqual(\n@@ -433,8 +444,10 @@ Task #1\n \n \t\tit('Handles error status code in response.', async () => {\n \t\t\tlet request: Request | null = null,\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = (<any>this).request,\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\turl: request?.url,\n \t\t\t\t\tstatus: 404,\n@@ -474,7 +487,7 @@ Task #1\n \t\t\ttry {\n \t\t\t\tawait page.mainFrame.goto('http://localhost:9999'),\n \t\t\t} catch (e) {\n-\t\t\t\terror = e,\n+\t\t\t\terror = <Error>e,\n \t\t\t}\n \n \t\t\texpect(error).toEqual(new Error('Error')),\n@@ -919,6 +932,8 @@ Task #1\n \t\tit('Navigates to a virtual server page.', async () => {\n \t\t\tconst browser = new Browser({\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tvirtualServers: [\n \t\t\t\t\t\t\t{\n@@ -989,15 +1004,17 @@ Task #1\n \n \tdescribe('goBack()', () => {\n \t\tit('Navigates back in history.', async () => {\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\tstatus: 200,\n \t\t\t\t\ttext: () =>\n \t\t\t\t\t\tnew Promise((resolve) =>\n \t\t\t\t\t\t\tsetTimeout(\n \t\t\t\t\t\t\t\t() =>\n \t\t\t\t\t\t\t\t\tresolve(\n-\t\t\t\t\t\t\t\t\t\tthis.request.url === 'http://localhost:3000/'\n+\t\t\t\t\t\t\t\t\t\t(<any>this).request.url === 'http://localhost:3000/'\n \t\t\t\t\t\t\t\t\t\t\t? '<a href=\"http://localhost:3000/navigated/\">'\n \t\t\t\t\t\t\t\t\t\t\t: '<b>Navigated</b>'\n \t\t\t\t\t\t\t\t\t),\n@@ -1043,15 +1060,17 @@ Task #1\n \n \tdescribe('goForward()', () => {\n \t\tit('Navigates forward in history.', async () => {\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\tstatus: 200,\n \t\t\t\t\ttext: () =>\n \t\t\t\t\t\tnew Promise((resolve) =>\n \t\t\t\t\t\t\tsetTimeout(\n \t\t\t\t\t\t\t\t() =>\n \t\t\t\t\t\t\t\t\tresolve(\n-\t\t\t\t\t\t\t\t\t\tthis.request.url === 'http://localhost:3000/'\n+\t\t\t\t\t\t\t\t\t\t(<any>this).request.url === 'http://localhost:3000/'\n \t\t\t\t\t\t\t\t\t\t\t? '<a href=\"http://localhost:3000/navigated/\">'\n \t\t\t\t\t\t\t\t\t\t\t: '<b>Navigated</b>'\n \t\t\t\t\t\t\t\t\t),\n@@ -1098,15 +1117,17 @@ Task #1\n \n \tdescribe('goSteps()', () => {\n \t\tit('Navigates a delta in history.', async () => {\n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\tstatus: 200,\n \t\t\t\t\ttext: () =>\n \t\t\t\t\t\tnew Promise((resolve) =>\n \t\t\t\t\t\t\tsetTimeout(\n \t\t\t\t\t\t\t\t() =>\n \t\t\t\t\t\t\t\t\tresolve(\n-\t\t\t\t\t\t\t\t\t\tthis.request.url === 'http://localhost:3000/'\n+\t\t\t\t\t\t\t\t\t\t(<any>this).request.url === 'http://localhost:3000/'\n \t\t\t\t\t\t\t\t\t\t\t? '<a href=\"http://localhost:3000/navigated/\">'\n \t\t\t\t\t\t\t\t\t\t\t: '<b>Navigated</b>'\n \t\t\t\t\t\t\t\t\t),"
        },
        {
          "filename": "packages/happy-dom/test/browser/BrowserPage.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/browser/BrowserPage.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/browser/BrowserPage.test.ts",
          "diff": "@@ -184,6 +184,8 @@ describe('BrowserPage', () => {\n \t\tit('Clears modules when closing.', async () => {\n \t\t\tconst browser = new Browser({\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tvirtualServers: [\n \t\t\t\t\t\t\t{\n@@ -251,8 +253,8 @@ describe('BrowserPage', () => {\n \t\t\tframe1.evaluate('setTimeout(() => { globalThis.test = 1, }, 10),'),\n \t\t\tframe2.evaluate('setTimeout(() => { globalThis.test = 2, }, 10),'),\n \t\t\tawait page.waitUntilComplete(),\n-\t\t\texpect(frame1.window['test']).toBe(1),\n-\t\t\texpect(frame2.window['test']).toBe(2),\n+\t\t\texpect((<any>frame1.window)['test']).toBe(1),\n+\t\t\texpect((<any>frame2.window)['test']).toBe(2),\n \t\t}),\n \t}),\n \n@@ -283,8 +285,8 @@ describe('BrowserPage', () => {\n \t\t\tframe2.evaluate('setTimeout(() => { globalThis.test = 2, }, 10),'),\n \t\t\tpage.abort(),\n \t\t\tawait new Promise((resolve) => setTimeout(resolve, 50)),\n-\t\t\texpect(frame1.window['test']).toBeUndefined(),\n-\t\t\texpect(frame2.window['test']).toBeUndefined(),\n+\t\t\texpect((<any>frame1.window)['test']).toBeUndefined(),\n+\t\t\texpect((<any>frame2.window)['test']).toBeUndefined(),\n \t\t}),\n \t}),\n "
        },
        {
          "filename": "packages/happy-dom/test/browser/detached-browser/DetachedBrowser.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/browser/detached-browser/DetachedBrowser.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/browser/detached-browser/DetachedBrowser.test.ts",
          "diff": "@@ -46,7 +46,7 @@ describe('DetachedBrowser', () => {\n \n \t\tit('Returns the settings with custom settings.', () => {\n \t\t\tconst settings = {\n-\t\t\t\tdisableJavaScriptEvaluation: true,\n+\t\t\t\tenableJavaScriptEvaluation: true,\n \t\t\t\tnavigator: {\n \t\t\t\t\tuserAgent: 'test'\n \t\t\t\t}"
        },
        {
          "filename": "packages/happy-dom/test/browser/detached-browser/DetachedBrowserFrame.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/browser/detached-browser/DetachedBrowserFrame.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/browser/detached-browser/DetachedBrowserFrame.test.ts",
          "diff": "@@ -362,7 +362,12 @@ describe('DetachedBrowserFrame', () => {\n \t\t}),\n \n \t\tit('Navigates to a URL with \"javascript:\" as protocol.', async () => {\n-\t\t\tconst browser = new DetachedBrowser(BrowserWindow),\n+\t\t\tconst browser = new DetachedBrowser(BrowserWindow, {\n+\t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n+\t\t\t}),\n \t\t\tbrowser.defaultContext.pages[0].mainFrame.window = new BrowserWindow(\n \t\t\t\tbrowser.defaultContext.pages[0].mainFrame\n \t\t\t),\n@@ -1015,6 +1020,8 @@ describe('DetachedBrowserFrame', () => {\n \t\tit('Navigates to a virtual server page.', async () => {\n \t\t\tconst browser = new DetachedBrowser(BrowserWindow, {\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tvirtualServers: [\n \t\t\t\t\t\t\t{"
        },
        {
          "filename": "packages/happy-dom/test/dom-parser/DOMParser.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/dom-parser/DOMParser.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/dom-parser/DOMParser.test.ts",
          "diff": "@@ -16,7 +16,6 @@ describe('DOMParser', () => {\n \t\twindow = new Window({\n \t\t\tsettings: {\n \t\t\t\tdisableJavaScriptFileLoading: true,\n-\t\t\t\tdisableJavaScriptEvaluation: true,\n \t\t\t\tdisableCSSFileLoading: true,\n \t\t\t\tenableFileSystemHttpRequests: false\n \t\t\t}"
        },
        {
          "filename": "packages/happy-dom/test/html-serializer/HTMLSerializer.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/html-serializer/HTMLSerializer.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/html-serializer/HTMLSerializer.test.ts",
          "diff": "@@ -10,7 +10,9 @@ describe('HTMLSerializer', () => {\n \tlet serializer: HTMLSerializer,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\tserializer = new HTMLSerializer(),\n "
        },
        {
          "filename": "packages/happy-dom/test/nodes/document/Document.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/document/Document.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/document/Document.test.ts",
          "diff": "@@ -46,7 +46,9 @@ describe('Document', () => {\n \tlet document: Document,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t}),\n "
        },
        {
          "filename": "packages/happy-dom/test/nodes/element/Element.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/element/Element.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/element/Element.test.ts",
          "diff": "@@ -30,7 +30,9 @@ describe('Element', () => {\n \tlet element: Element,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <Element>document.createElement('div'),\n \t\twindow.customElements.define('custom-element', CustomElement),\n@@ -52,20 +54,20 @@ describe('Element', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -106,63 +108,63 @@ describe('Element', () => {\n \t\tit('Adds the \"id\" attribute as a property to Window.', () => {\n \t\t\telement.setAttribute('id', 'element1'),\n \n-\t\t\texpect(window['element1']).toBeUndefined(),\n+\t\t\texpect((<any>window)['element1']).toBeUndefined(),\n \n \t\t\tdocument.body.appendChild(element),\n \n-\t\t\texpect(window['element1']).toBe(element),\n+\t\t\texpect((<any>window)['element1']).toBe(element),\n \n \t\t\tdocument.body.removeChild(element),\n \n-\t\t\texpect(window['element1']).toBeUndefined(),\n+\t\t\texpect((<any>window)['element1']).toBeUndefined(),\n \n \t\t\tdocument.body.appendChild(element),\n \n-\t\t\texpect(window['element1']).toBe(element),\n+\t\t\texpect((<any>window)['element1']).toBe(element),\n \n \t\t\telement.setAttribute('id', 'element2'),\n \n-\t\t\texpect(window['element1']).toBeUndefined(),\n-\t\t\texpect(window['element2']).toBe(element),\n+\t\t\texpect((<any>window)['element1']).toBeUndefined(),\n+\t\t\texpect((<any>window)['element2']).toBe(element),\n \n \t\t\tconst element2 = document.createElement('div'),\n \t\t\telement2.id = 'element2',\n \n \t\t\tdocument.body.appendChild(element2),\n \n-\t\t\texpect(window['element2']).toBeInstanceOf(HTMLCollection),\n-\t\t\texpect(window['element2'].length).toBe(2),\n-\t\t\texpect(window['element2'][0]).toBe(element),\n-\t\t\texpect(window['element2'][1]).toBe(element2),\n+\t\t\texpect((<any>window)['element2']).toBeInstanceOf(HTMLCollection),\n+\t\t\texpect((<any>window)['element2'].length).toBe(2),\n+\t\t\texpect((<any>window)['element2'][0]).toBe(element),\n+\t\t\texpect((<any>window)['element2'][1]).toBe(element2),\n \n \t\t\tdocument.body.removeChild(element2),\n \n-\t\t\texpect(window['element2']).toBe(element),\n+\t\t\texpect((<any>window)['element2']).toBe(element),\n \n \t\t\tdocument.body.appendChild(element2),\n \n-\t\t\texpect(window['element2']).toBeInstanceOf(HTMLCollection),\n-\t\t\texpect(window['element2'].length).toBe(2),\n+\t\t\texpect((<any>window)['element2']).toBeInstanceOf(HTMLCollection),\n+\t\t\texpect((<any>window)['element2'].length).toBe(2),\n \n \t\t\telement2.removeAttribute('id'),\n \n-\t\t\texpect(window['element2']).toBe(element),\n+\t\t\texpect((<any>window)['element2']).toBe(element),\n \n \t\t\telement.removeAttribute('id'),\n \n-\t\t\texpect(window['element2']).toBe(undefined),\n+\t\t\texpect((<any>window)['element2']).toBe(undefined),\n \t\t}),\n \n \t\tit(`Doesn't add the \"id\" attribute as a property to Window if it collides with Window properties.`, () => {\n \t\t\telement.setAttribute('id', 'document'),\n \t\t\tdocument.body.appendChild(element),\n-\t\t\texpect(window['document']).toBe(document),\n+\t\t\texpect((<any>window)['document']).toBe(document),\n \t\t}),\n \n \t\tit(`Doesn't add the \"opener\" attribute as a property to Window when the property value is null (#1841).`, () => {\n \t\t\tdocument.body.appendChild(element),\n \t\t\telement.id = 'opener',\n-\t\t\texpect(window['opener']).toBe(null),\n+\t\t\texpect((<any>window)['opener']).toBe(null),\n \t\t}),\n \t}),\n \n@@ -355,8 +357,12 @@ describe('Element', () => {\n \t\t\telement.appendChild(document.createElement('div')),\n \t\t\tdiv.appendChild(textNode),\n \n-\t\t\tvi.spyOn(HTMLParser.prototype, 'parse').mockImplementation(function (html, rootNode) {\n-\t\t\t\texpect(this.window).toBe(window),\n+\t\t\tvi.spyOn(HTMLParser.prototype, 'parse').mockImplementation(function (\n+\t\t\t\tthis: HTMLParser,\n+\t\t\t\thtml,\n+\t\t\t\trootNode\n+\t\t\t) {\n+\t\t\t\texpect((<any>this).window).toBe(window),\n \t\t\t\texpect(html).toBe('SOME_HTML'),\n \t\t\t\texpect(rootNode).toBe(element),\n \t\t\t\telement.appendChild(div),\n@@ -437,26 +443,26 @@ describe('Element', () => {\n \t\t\texpect(element.attributes[2].ownerElement === element).toBe(true),\n \t\t\texpect(element.attributes[2].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['key1'].name).toBe('key1'),\n-\t\t\texpect(element.attributes['key1'].value).toBe('value1'),\n-\t\t\texpect(element.attributes['key1'].namespaceURI).toBe(null),\n-\t\t\texpect(element.attributes['key1'].specified).toBe(true),\n-\t\t\texpect(element.attributes['key1'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['key1'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['key1'].name).toBe('key1'),\n+\t\t\texpect((<any>element).attributes['key1'].value).toBe('value1'),\n+\t\t\texpect((<any>element).attributes['key1'].namespaceURI).toBe(null),\n+\t\t\texpect((<any>element).attributes['key1'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['key1'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['key1'].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['key2'].name).toBe('key2'),\n-\t\t\texpect(element.attributes['key2'].value).toBe('value2'),\n-\t\t\texpect(element.attributes['key2'].namespaceURI).toBe(null),\n-\t\t\texpect(element.attributes['key2'].specified).toBe(true),\n-\t\t\texpect(element.attributes['key2'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['key2'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['key2'].name).toBe('key2'),\n+\t\t\texpect((<any>element).attributes['key2'].value).toBe('value2'),\n+\t\t\texpect((<any>element).attributes['key2'].namespaceURI).toBe(null),\n+\t\t\texpect((<any>element).attributes['key2'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['key2'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['key2'].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['key3'].name).toBe('key3'),\n-\t\t\texpect(element.attributes['key3'].value).toBe('value3'),\n-\t\t\texpect(element.attributes['key3'].namespaceURI).toBe(null),\n-\t\t\texpect(element.attributes['key3'].specified).toBe(true),\n-\t\t\texpect(element.attributes['key3'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['key3'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['key3'].name).toBe('key3'),\n+\t\t\texpect((<any>element).attributes['key3'].value).toBe('value3'),\n+\t\t\texpect((<any>element).attributes['key3'].namespaceURI).toBe(null),\n+\t\t\texpect((<any>element).attributes['key3'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['key3'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['key3'].ownerDocument === document).toBe(true),\n \t\t}),\n \t}),\n \n@@ -1287,10 +1293,10 @@ describe('Element', () => {\n \t\t\texpect(otherParent.children[0] === otherDiv).toBe(true),\n \t\t\texpect(otherParent.children[1] === div).toBe(true),\n \t\t\texpect(otherParent.children[2] === otherSpan).toBe(true),\n-\t\t\texpect(otherParent.children['div1'] === div).toBe(true),\n-\t\t\texpect(otherParent.children['div2'] === div).toBe(true),\n-\t\t\texpect(otherParent.children['otherDiv'] === otherDiv).toBe(true),\n-\t\t\texpect(otherParent.children['otherSpan'] === otherSpan).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['div1'] === div).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['div2'] === div).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherDiv'] === otherDiv).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherSpan'] === otherSpan).toBe(true),\n \n \t\t\telement.appendChild(document.createComment('test')),\n \t\t\telement.appendChild(div),\n@@ -1300,17 +1306,17 @@ describe('Element', () => {\n \t\t\texpect(otherParent.children.length).toBe(2),\n \t\t\texpect(otherParent.children[0] === otherDiv).toBe(true),\n \t\t\texpect(otherParent.children[1] === otherSpan).toBe(true),\n-\t\t\texpect(otherParent.children['div1'] === undefined).toBe(true),\n-\t\t\texpect(otherParent.children['div2'] === undefined).toBe(true),\n-\t\t\texpect(otherParent.children['otherDiv'] === otherDiv).toBe(true),\n-\t\t\texpect(otherParent.children['otherSpan'] === otherSpan).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['div1'] === undefined).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['div2'] === undefined).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherDiv'] === otherDiv).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherSpan'] === otherSpan).toBe(true),\n \n \t\t\texpect(element.children.length).toBe(2),\n \t\t\texpect(element.children[0] === div).toBe(true),\n \t\t\texpect(element.children[1] === span).toBe(true),\n-\t\t\texpect(element.children['div1'] === div).toBe(true),\n-\t\t\texpect(element.children['div2'] === div).toBe(true),\n-\t\t\texpect(element.children['span'] === span).toBe(true),\n+\t\t\texpect((<any>element.children)['div1'] === div).toBe(true),\n+\t\t\texpect((<any>element.children)['div2'] === div).toBe(true),\n+\t\t\texpect((<any>element.children)['span'] === span).toBe(true),\n \t\t}),\n \t}),\n \n@@ -1327,15 +1333,15 @@ describe('Element', () => {\n \t\t\telement.appendChild(document.createComment('test')),\n \t\t\telement.appendChild(span),\n \n-\t\t\texpect(element.children['div'] === div).toBe(true),\n-\t\t\texpect(element.children['span'] === span).toBe(true),\n+\t\t\texpect((<any>element.children)['div'] === div).toBe(true),\n+\t\t\texpect((<any>element.children)['span'] === span).toBe(true),\n \n \t\t\telement.removeChild(div),\n \n \t\t\texpect(element.children.length).toBe(1),\n \t\t\texpect(element.children[0] === span).toBe(true),\n-\t\t\texpect(element.children['div'] === undefined).toBe(true),\n-\t\t\texpect(element.children['span'] === span).toBe(true),\n+\t\t\texpect((<any>element.children)['div'] === undefined).toBe(true),\n+\t\t\texpect((<any>element.children)['span'] === span).toBe(true),\n \t\t}),\n \t}),\n \n@@ -1456,9 +1462,9 @@ describe('Element', () => {\n \t\t\texpect(otherParent.children[0] === otherSpan1).toBe(true),\n \t\t\texpect(otherParent.children[1] === div).toBe(true),\n \t\t\texpect(otherParent.children[2] === otherSpan2).toBe(true),\n-\t\t\texpect(otherParent.children['otherSpan1'] === otherSpan1).toBe(true),\n-\t\t\texpect(otherParent.children['div'] === div).toBe(true),\n-\t\t\texpect(otherParent.children['otherSpan2'] === otherSpan2).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherSpan1'] === otherSpan1).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['div'] === div).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherSpan2'] === otherSpan2).toBe(true),\n \n \t\t\telement.appendChild(document.createComment('test')),\n \t\t\telement.appendChild(span1),\n@@ -1472,17 +1478,17 @@ describe('Element', () => {\n \t\t\texpect(otherParent.children.length).toBe(2),\n \t\t\texpect(otherParent.children[0] === otherSpan1).toBe(true),\n \t\t\texpect(otherParent.children[1] === otherSpan2).toBe(true),\n-\t\t\texpect(otherParent.children['div'] === undefined).toBe(true),\n-\t\t\texpect(otherParent.children['otherSpan1'] === otherSpan1).toBe(true),\n-\t\t\texpect(otherParent.children['otherSpan2'] === otherSpan2).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['div'] === undefined).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherSpan1'] === otherSpan1).toBe(true),\n+\t\t\texpect((<any>otherParent.children)['otherSpan2'] === otherSpan2).toBe(true),\n \n \t\t\texpect(element.children.length).toBe(3),\n \t\t\texpect(element.children[0] === span1).toBe(true),\n \t\t\texpect(element.children[1] === div).toBe(true),\n \t\t\texpect(element.children[2] === span2).toBe(true),\n-\t\t\texpect(element.children['span1'] === span1).toBe(true),\n-\t\t\texpect(element.children['div'] === div).toBe(true),\n-\t\t\texpect(element.children['span2'] === span2).toBe(true),\n+\t\t\texpect((<any>element.children)['span1'] === span1).toBe(true),\n+\t\t\texpect((<any>element.children)['div'] === div).toBe(true),\n+\t\t\texpect((<any>element.children)['span2'] === span2).toBe(true),\n \t\t}),\n \n \t\tit('Inserts correctly with comment reference node', () => {\n@@ -1612,19 +1618,19 @@ describe('Element', () => {\n \t\t\texpect(element.attributes[1].ownerElement === element).toBe(true),\n \t\t\texpect(element.attributes[1].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['key1'].name).toBe('key1'),\n-\t\t\texpect(element.attributes['key1'].value).toBe('value1'),\n-\t\t\texpect(element.attributes['key1'].namespaceURI).toBe(null),\n-\t\t\texpect(element.attributes['key1'].specified).toBe(true),\n-\t\t\texpect(element.attributes['key1'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['key1'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['key1'].name).toBe('key1'),\n+\t\t\texpect((<any>element).attributes['key1'].value).toBe('value1'),\n+\t\t\texpect((<any>element).attributes['key1'].namespaceURI).toBe(null),\n+\t\t\texpect((<any>element).attributes['key1'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['key1'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['key1'].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['key2'].name).toBe('key2'),\n-\t\t\texpect(element.attributes['key2'].value).toBe(''),\n-\t\t\texpect(element.attributes['key2'].namespaceURI).toBe(null),\n-\t\t\texpect(element.attributes['key2'].specified).toBe(true),\n-\t\t\texpect(element.attributes['key2'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['key2'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['key2'].name).toBe('key2'),\n+\t\t\texpect((<any>element).attributes['key2'].value).toBe(''),\n+\t\t\texpect((<any>element).attributes['key2'].namespaceURI).toBe(null),\n+\t\t\texpect((<any>element).attributes['key2'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['key2'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['key2'].ownerDocument === document).toBe(true),\n \t\t}),\n \n \t\tit('Sets valid attribute names', () => {\n@@ -1748,58 +1754,58 @@ describe('Element', () => {\n \t\t\ttry {\n \t\t\t\telement.setAttribute('\u263a', '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\t// eslint-disable-next-line\n \t\t\t\telement.setAttribute({} as string, '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute('', '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute('=', '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute(' ', '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute('\"', '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute(`'`, '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute(`>`, '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute(`\\/`, '1'),\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute(`\\u007F`, '1'), // control character delete\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t\ttry {\n \t\t\t\telement.setAttribute(`\\u9FFFE`, '1'), // non character\n \t\t\t} catch (error) {\n-\t\t\t\texpect(error.name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n+\t\t\t\texpect((<any>error).name).toBe(DOMExceptionNameEnum.invalidCharacterError),\n \t\t\t}\n \t\t}),\n \t}),\n@@ -1825,19 +1831,19 @@ describe('Element', () => {\n \t\t\texpect(element.attributes[1].ownerElement === element).toBe(true),\n \t\t\texpect(element.attributes[1].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['global:local1'].name).toBe('global:local1'),\n-\t\t\texpect(element.attributes['global:local1'].value).toBe('value1'),\n-\t\t\texpect(element.attributes['global:local1'].namespaceURI).toBe(NAMESPACE_URI),\n-\t\t\texpect(element.attributes['global:local1'].specified).toBe(true),\n-\t\t\texpect(element.attributes['global:local1'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['global:local1'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['global:local1'].name).toBe('global:local1'),\n+\t\t\texpect((<any>element).attributes['global:local1'].value).toBe('value1'),\n+\t\t\texpect((<any>element).attributes['global:local1'].namespaceURI).toBe(NAMESPACE_URI),\n+\t\t\texpect((<any>element).attributes['global:local1'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['global:local1'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['global:local1'].ownerDocument === document).toBe(true),\n \n-\t\t\texpect(element.attributes['global:local2'].name).toBe('global:local2'),\n-\t\t\texpect(element.attributes['global:local2'].value).toBe(''),\n-\t\t\texpect(element.attributes['global:local2'].namespaceURI).toBe(NAMESPACE_URI),\n-\t\t\texpect(element.attributes['global:local2'].specified).toBe(true),\n-\t\t\texpect(element.attributes['global:local2'].ownerElement === element).toBe(true),\n-\t\t\texpect(element.attributes['global:local2'].ownerDocument === document).toBe(true),\n+\t\t\texpect((<any>element).attributes['global:local2'].name).toBe('global:local2'),\n+\t\t\texpect((<any>element).attributes['global:local2'].value).toBe(''),\n+\t\t\texpect((<any>element).attributes['global:local2'].namespaceURI).toBe(NAMESPACE_URI),\n+\t\t\texpect((<any>element).attributes['global:local2'].specified).toBe(true),\n+\t\t\texpect((<any>element).attributes['global:local2'].ownerElement === element).toBe(true),\n+\t\t\texpect((<any>element).attributes['global:local2'].ownerDocument === document).toBe(true),\n \t\t}),\n \t}),\n \n@@ -1962,39 +1968,39 @@ describe('Element', () => {\n \tfor (const functionName of ['scroll', 'scrollTo']) {\n \t\tdescribe(`${functionName}()`, () => {\n \t\t\tit('Sets the properties scrollTop and scrollLeft.', () => {\n-\t\t\t\telement[functionName](50, 60),\n+\t\t\t\t(<any>element)[functionName](50, 60),\n \t\t\t\texpect(element.scrollLeft).toBe(50),\n \t\t\t\texpect(element.scrollTop).toBe(60),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`${functionName}()`, () => {\n \t\t\tit('Sets the properties scrollTop and scrollLeft using object.', () => {\n-\t\t\t\telement[functionName]({ left: 50, top: 60 }),\n+\t\t\t\t(<any>element)[functionName]({ left: 50, top: 60 }),\n \t\t\t\texpect(element.scrollLeft).toBe(50),\n \t\t\t\texpect(element.scrollTop).toBe(60),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`${functionName}()`, () => {\n \t\t\tit('Sets only the property scrollTop.', () => {\n-\t\t\t\telement[functionName]({ top: 60 }),\n+\t\t\t\t(<any>element)[functionName]({ top: 60 }),\n \t\t\t\texpect(element.scrollLeft).toBe(0),\n \t\t\t\texpect(element.scrollTop).toBe(60),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`${functionName}()`, () => {\n \t\t\tit('Sets only the property scrollLeft.', () => {\n-\t\t\t\telement[functionName]({ left: 60 }),\n+\t\t\t\t(<any>element)[functionName]({ left: 60 }),\n \t\t\t\texpect(element.scrollLeft).toBe(60),\n \t\t\t\texpect(element.scrollTop).toBe(0),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`${functionName}()`, () => {\n \t\t\tit('Sets the properties scrollTop and scrollLeft with animation.', async () => {\n-\t\t\t\telement[functionName]({ left: 50, top: 60, behavior: 'smooth' }),\n+\t\t\t\t(<any>element)[functionName]({ left: 50, top: 60, behavior: 'smooth' }),\n \t\t\t\texpect(element.scrollLeft).toBe(0),\n \t\t\t\texpect(element.scrollTop).toBe(0),\n \t\t\t\tawait window.happyDOM?.waitUntilComplete(),\n@@ -2127,9 +2133,9 @@ describe('Element', () => {\n \t\t\t\tattribute2.value = 'value2',\n \t\t\t\tattribute3.value = 'value3',\n \n-\t\t\t\telement[method](attribute1),\n-\t\t\t\telement[method](attribute2),\n-\t\t\t\telement[method](attribute3),\n+\t\t\t\t(<any>element)[method](attribute1),\n+\t\t\t\t(<any>element)[method](attribute2),\n+\t\t\t\t(<any>element)[method](attribute3),\n \n \t\t\t\texpect(element.attributes.length).toBe(3),\n \n@@ -2155,32 +2161,32 @@ describe('Element', () => {\n \t\t\t\texpect(element.attributes[2].ownerDocument === document).toBe(true),\n \n \t\t\t\t// \"undefined\" as the key is in upper case which should not be considered as a named item when the element is in the HTML namespace\n-\t\t\t\texpect(element.attributes['key1']).toBe(undefined),\n-\t\t\t\texpect(element.attributes['KEY1']).toBe(undefined),\n+\t\t\t\texpect((<any>element).attributes['key1']).toBe(undefined),\n+\t\t\t\texpect((<any>element).attributes['KEY1']).toBe(undefined),\n \n \t\t\t\t// Lower case SVG namespace key is fine\n-\t\t\t\texpect(element.attributes['key2'].name).toBe('key2'),\n-\t\t\t\texpect(element.attributes['key2'].namespaceURI).toBe(NamespaceURI.svg),\n-\t\t\t\texpect(element.attributes['key2'].value).toBe('value2'),\n-\t\t\t\texpect(element.attributes['key2'].specified).toBe(true),\n-\t\t\t\texpect(element.attributes['key2'].ownerElement === element).toBe(true),\n-\t\t\t\texpect(element.attributes['key2'].ownerDocument === document).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['key2'].name).toBe('key2'),\n+\t\t\t\texpect((<any>element).attributes['key2'].namespaceURI).toBe(NamespaceURI.svg),\n+\t\t\t\texpect((<any>element).attributes['key2'].value).toBe('value2'),\n+\t\t\t\texpect((<any>element).attributes['key2'].specified).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['key2'].ownerElement === element).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['key2'].ownerDocument === document).toBe(true),\n \n \t\t\t\t// Matches the key in the HTML namespace\n-\t\t\t\texpect(element.attributes['key3'].name).toBe('key3'),\n-\t\t\t\texpect(element.attributes['key3'].namespaceURI).toBe(null),\n-\t\t\t\texpect(element.attributes['key3'].value).toBe('value3'),\n-\t\t\t\texpect(element.attributes['key3'].specified).toBe(true),\n-\t\t\t\texpect(element.attributes['key3'].ownerElement === element).toBe(true),\n-\t\t\t\texpect(element.attributes['key3'].ownerDocument === document).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['key3'].name).toBe('key3'),\n+\t\t\t\texpect((<any>element).attributes['key3'].namespaceURI).toBe(null),\n+\t\t\t\texpect((<any>element).attributes['key3'].value).toBe('value3'),\n+\t\t\t\texpect((<any>element).attributes['key3'].specified).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['key3'].ownerElement === element).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['key3'].ownerDocument === document).toBe(true),\n \n \t\t\t\t// Is converted to lower case through the Proxy in the HTML namespace\n-\t\t\t\texpect(element.attributes['KeY3'].name).toBe('key3'),\n-\t\t\t\texpect(element.attributes['KeY3'].namespaceURI).toBe(null),\n-\t\t\t\texpect(element.attributes['KeY3'].value).toBe('value3'),\n-\t\t\t\texpect(element.attributes['KeY3'].specified).toBe(true),\n-\t\t\t\texpect(element.attributes['KeY3'].ownerElement === element).toBe(true),\n-\t\t\t\texpect(element.attributes['KeY3'].ownerDocument === document).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['KeY3'].name).toBe('key3'),\n+\t\t\t\texpect((<any>element).attributes['KeY3'].namespaceURI).toBe(null),\n+\t\t\t\texpect((<any>element).attributes['KeY3'].value).toBe('value3'),\n+\t\t\t\texpect((<any>element).attributes['KeY3'].specified).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['KeY3'].ownerElement === element).toBe(true),\n+\t\t\t\texpect((<any>element).attributes['KeY3'].ownerDocument === document).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Sets an Attr node on an <svg> element.', () => {\n@@ -2191,47 +2197,47 @@ describe('Element', () => {\n \t\t\t\tattribute1.value = 'value1',\n \t\t\t\tattribute2.value = 'value2',\n \n-\t\t\t\tsvg[method](attribute1),\n-\t\t\t\tsvg[method](attribute2),\n+\t\t\t\t(<any>svg)[method](attribute1),\n+\t\t\t\t(<any>svg)[method](attribute2),\n \n \t\t\t\texpect(svg.attributes.length).toBe(2),\n \n-\t\t\t\texpect(svg.attributes[0].name).toBe('KEY1'),\n-\t\t\t\texpect(svg.attributes[0].namespaceURI).toBe(NamespaceURI.svg),\n-\t\t\t\texpect(svg.attributes[0].value).toBe('value1'),\n-\t\t\t\texpect(svg.attributes[0].specified).toBe(true),\n-\t\t\t\texpect(svg.attributes[0].ownerElement === svg).toBe(true),\n-\t\t\t\texpect(svg.attributes[0].ownerDocument).toBe(document),\n+\t\t\t\texpect((<any>svg.attributes)[0].name).toBe('KEY1'),\n+\t\t\t\texpect((<any>svg.attributes)[0].namespaceURI).toBe(NamespaceURI.svg),\n+\t\t\t\texpect((<any>svg.attributes)[0].value).toBe('value1'),\n+\t\t\t\texpect((<any>svg.attributes)[0].specified).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)[0].ownerElement === svg).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)[0].ownerDocument).toBe(document),\n \n-\t\t\t\texpect(svg.attributes[1].name).toBe('key2'),\n-\t\t\t\texpect(svg.attributes[1].namespaceURI).toBe(null),\n-\t\t\t\texpect(svg.attributes[1].value).toBe('value2'),\n-\t\t\t\texpect(svg.attributes[1].specified).toBe(true),\n-\t\t\t\texpect(svg.attributes[1].ownerElement === svg).toBe(true),\n-\t\t\t\texpect(svg.attributes[1].ownerDocument).toBe(document),\n+\t\t\t\texpect((<any>svg.attributes)[1].name).toBe('key2'),\n+\t\t\t\texpect((<any>svg.attributes)[1].namespaceURI).toBe(null),\n+\t\t\t\texpect((<any>svg.attributes)[1].value).toBe('value2'),\n+\t\t\t\texpect((<any>svg.attributes)[1].specified).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)[1].ownerElement === svg).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)[1].ownerDocument).toBe(document),\n \n \t\t\t\t// \"undefined\" as the SVG namespace should not lowercase the key\n-\t\t\t\texpect(svg.attributes['key1']).toBe(undefined),\n-\t\t\t\texpect(svg.attributes['kEy1']).toBe(undefined),\n+\t\t\t\texpect((<any>svg.attributes)['key1']).toBe(undefined),\n+\t\t\t\texpect((<any>svg.attributes)['kEy1']).toBe(undefined),\n \n \t\t\t\t// Matching key is fine in the SVG namespace\n-\t\t\t\texpect(svg.attributes['KEY1'].name).toBe('KEY1'),\n-\t\t\t\texpect(svg.attributes['KEY1'].namespaceURI).toBe(NamespaceURI.svg),\n-\t\t\t\texpect(svg.attributes['KEY1'].value).toBe('value1'),\n-\t\t\t\texpect(svg.attributes['KEY1'].specified).toBe(true),\n-\t\t\t\texpect(svg.attributes['KEY1'].ownerElement === svg).toBe(true),\n-\t\t\t\texpect(svg.attributes['KEY1'].ownerDocument).toBe(document),\n+\t\t\t\texpect((<any>svg.attributes)['KEY1'].name).toBe('KEY1'),\n+\t\t\t\texpect((<any>svg.attributes)['KEY1'].namespaceURI).toBe(NamespaceURI.svg),\n+\t\t\t\texpect((<any>svg.attributes)['KEY1'].value).toBe('value1'),\n+\t\t\t\texpect((<any>svg.attributes)['KEY1'].specified).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)['KEY1'].ownerElement === svg).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)['KEY1'].ownerDocument).toBe(document),\n \n \t\t\t\t// \"undefined\" as the SVG namespace should not lowercase the key\n-\t\t\t\texpect(svg.attributes['KeY2']).toBe(undefined),\n+\t\t\t\texpect((<any>svg.attributes)['KeY2']).toBe(undefined),\n \n \t\t\t\t// Works when matching in the SVG namespace\n-\t\t\t\texpect(svg.attributes['key2'].name).toBe('key2'),\n-\t\t\t\texpect(svg.attributes['key2'].namespaceURI).toBe(null),\n-\t\t\t\texpect(svg.attributes['key2'].value).toBe('value2'),\n-\t\t\t\texpect(svg.attributes['key2'].specified).toBe(true),\n-\t\t\t\texpect(svg.attributes['key2'].ownerElement === svg).toBe(true),\n-\t\t\t\texpect(svg.attributes['key2'].ownerDocument).toBe(document),\n+\t\t\t\texpect((<any>svg.attributes)['key2'].name).toBe('key2'),\n+\t\t\t\texpect((<any>svg.attributes)['key2'].namespaceURI).toBe(null),\n+\t\t\t\texpect((<any>svg.attributes)['key2'].value).toBe('value2'),\n+\t\t\t\texpect((<any>svg.attributes)['key2'].specified).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)['key2'].ownerElement === svg).toBe(true),\n+\t\t\t\texpect((<any>svg.attributes)['key2'].ownerDocument).toBe(document),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -2347,7 +2353,7 @@ describe('Element', () => {\n \t\t\t\tdiv.scrollLeft = 10,\n \t\t\t\tdiv.scrollTop = 15,\n \n-\t\t\t\tdiv[functionName](20, 30),\n+\t\t\t\t(<any>div)[functionName](20, 30),\n \n \t\t\t\texpect(div.scrollLeft).toBe(20),\n \t\t\t\texpect(div.scrollTop).toBe(30),\n@@ -2359,7 +2365,7 @@ describe('Element', () => {\n \t\t\t\tdiv.scrollLeft = 10,\n \t\t\t\tdiv.scrollTop = 15,\n \n-\t\t\t\tdiv[functionName]({ left: 20, top: 30 }),\n+\t\t\t\t(<any>div)[functionName]({ left: 20, top: 30 }),\n \n \t\t\t\texpect(div.scrollLeft).toBe(20),\n \t\t\t\texpect(div.scrollTop).toBe(30),\n@@ -2371,7 +2377,7 @@ describe('Element', () => {\n \t\t\t\tdiv.scrollLeft = 10,\n \t\t\t\tdiv.scrollTop = 15,\n \n-\t\t\t\tdiv[functionName]({ left: 20, top: 30, behavior: 'smooth' }),\n+\t\t\t\t(<any>div)[functionName]({ left: 20, top: 30, behavior: 'smooth' }),\n \n \t\t\t\texpect(div.scrollLeft).toBe(10),\n \t\t\t\texpect(div.scrollTop).toBe(15),\n@@ -2384,7 +2390,7 @@ describe('Element', () => {\n \n \t\t\tit('Throws an exception if the there is only one argument and it is not an object.', () => {\n \t\t\t\tconst div = document.createElement('div'),\n-\t\t\t\texpect(() => div[functionName](10)).toThrow(\n+\t\t\t\texpect(() => (<any>div)[functionName](10)).toThrow(\n \t\t\t\t\tnew TypeError(\n \t\t\t\t\t\t`Failed to execute '${functionName}' on 'Element': The provided value is not of type 'ScrollToOptions'.`\n \t\t\t\t\t)\n@@ -2450,15 +2456,15 @@ describe('Element', () => {\n \t\t\tconst div = document.createElement('div'),\n \t\t\tdiv.setAttribute('onclick', 'divClicked = true'),\n \t\t\tdiv.dispatchEvent(new Event('click')),\n-\t\t\texpect(window['divClicked']).toBe(true),\n+\t\t\texpect((<any>window)['divClicked']).toBe(true),\n \t\t}),\n \n \t\tit(\"Doesn't evaluate attribute event listener is immediate propagation has been stopped.\", () => {\n \t\t\tconst div = document.createElement('div'),\n \t\t\tdiv.addEventListener('click', (e: Event) => e.stopImmediatePropagation()),\n \t\t\tdiv.setAttribute('onclick', 'divClicked = true'),\n \t\t\tdiv.dispatchEvent(new Event('click')),\n-\t\t\texpect(window['divClicked']).toBe(undefined),\n+\t\t\texpect((<any>window)['divClicked']).toBe(undefined),\n \t\t}),\n \t}),\n }),"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-body-element/HTMLBodyElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-body-element/HTMLBodyElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-body-element/HTMLBodyElement.test.ts",
          "diff": "@@ -10,7 +10,9 @@ describe('HTMLBodyElement', () => {\n \tlet element: HTMLBodyElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElement('body'),\n \t}),\n@@ -44,20 +46,20 @@ describe('HTMLBodyElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-canvas-element/HTMLCanvasElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-canvas-element/HTMLCanvasElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-canvas-element/HTMLCanvasElement.test.ts",
          "diff": "@@ -16,7 +16,9 @@ describe('HTMLCanvasElement', () => {\n \tlet element: HTMLCanvasElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElement('canvas'),\n \t}),\n@@ -37,20 +39,20 @@ describe('HTMLCanvasElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-details-element/HTMLDetailsElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-details-element/HTMLDetailsElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-details-element/HTMLDetailsElement.test.ts",
          "diff": "@@ -11,7 +11,9 @@ describe('HTMLDetailsElement', () => {\n \tlet element: HTMLDetailsElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElement('details'),\n \t}),\n@@ -26,20 +28,20 @@ describe('HTMLDetailsElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-dialog-element/HTMLDialogElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-dialog-element/HTMLDialogElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-dialog-element/HTMLDialogElement.test.ts",
          "diff": "@@ -11,7 +11,9 @@ describe('HTMLDialogElement', () => {\n \tlet element: HTMLDialogElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLDialogElement>document.createElement('dialog'),\n \t}),\n@@ -26,20 +28,20 @@ describe('HTMLDialogElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-element/HTMLElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-element/HTMLElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-element/HTMLElement.test.ts",
          "diff": "@@ -17,7 +17,9 @@ describe('HTMLElement', () => {\n \tlet element: HTMLElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLElement>document.createElement('div'),\n \t}),\n@@ -91,20 +93,20 @@ describe('HTMLElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -129,7 +131,7 @@ describe('HTMLElement', () => {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns \"0\".', () => {\n \t\t\t\tconst div = document.createElement('div'),\n-\t\t\t\texpect(div[property]).toBe(0),\n+\t\t\t\texpect((<any>div)[property]).toBe(0),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -619,14 +621,14 @@ describe('HTMLElement', () => {\n \t\t\tit(`Returns the attribute \"${property}\".`, () => {\n \t\t\t\tconst div = document.createElement('div'),\n \t\t\t\tdiv.setAttribute(property, 'value'),\n-\t\t\t\texpect(div[property]).toBe('value'),\n+\t\t\t\texpect((<any>div)[property]).toBe('value'),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit(`Sets the attribute \"${property}\".`, () => {\n \t\t\t\tconst div = document.createElement('div'),\n-\t\t\t\tdiv[property] = 'value',\n+\t\t\t\t(<any>div)[property] = 'value',\n \t\t\t\texpect(div.getAttribute(property)).toBe('value'),\n \t\t\t}),\n \t\t}),"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-iframe-element/HTMLIFrameElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-iframe-element/HTMLIFrameElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-iframe-element/HTMLIFrameElement.test.ts",
          "diff": "@@ -19,7 +19,9 @@ describe('HTMLIFrameElement', () => {\n \tlet element: HTMLIFrameElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLIFrameElement>document.createElement('iframe'),\n \t}),\n@@ -38,20 +40,20 @@ describe('HTMLIFrameElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -60,13 +62,13 @@ describe('HTMLIFrameElement', () => {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit(`Returns the \"${property}\" attribute.`, () => {\n \t\t\t\telement.setAttribute(property, 'value'),\n-\t\t\t\texpect(element[property]).toBe('value'),\n+\t\t\t\texpect((<any>element)[property]).toBe('value'),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit(`Sets the attribute \"${property}\".`, () => {\n-\t\t\t\telement[property] = 'value',\n+\t\t\t\t(<any>element)[property] = 'value',\n \t\t\t\texpect(element.getAttribute(property)).toBe('value'),\n \t\t\t}),\n \t\t}),\n@@ -382,8 +384,10 @@ describe('HTMLIFrameElement', () => {\n \t\t\tconst responseHTML = '<html><head></head><body>Test</body></html>',\n \t\t\tlet fetchedURL: string | null = null,\n \n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function () {\n-\t\t\t\tfetchedURL = <string>this.request.url,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\tfetchedURL = <string>(<any>this).request.url,\n \t\t\t\treturn new Promise((resolve) => {\n \t\t\t\t\tsetTimeout(() => {\n \t\t\t\t\t\tresolve(<Response>(<unknown>{\n@@ -418,8 +422,10 @@ describe('HTMLIFrameElement', () => {\n \t\t\tconst responseHTML = '<html><head></head><body>Test</body></html>',\n \t\t\tlet fetchedURL: string | null = null,\n \n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function () {\n-\t\t\t\tfetchedURL = <string>this.request.url,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\tfetchedURL = <string>(<any>this).request.url,\n \t\t\t\treturn Promise.resolve(<Response>(<unknown>{\n \t\t\t\t\ttext: () => Promise.resolve(responseHTML),\n \t\t\t\t\tok: true,\n@@ -516,8 +522,10 @@ describe('HTMLIFrameElement', () => {\n \n \t\t\t\tpage.mainFrame.url = documentOrigin,\n \n-\t\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\t\tfetchedURL = <string>this.request.url,\n+\t\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\t\tthis: Fetch\n+\t\t\t\t): Promise<Response> {\n+\t\t\t\t\tfetchedURL = <string>(<any>this).request.url,\n \t\t\t\t\treturn new Promise((resolve) => {\n \t\t\t\t\t\tsetTimeout(() => {\n \t\t\t\t\t\t\tresolve(<Response>(<unknown>{"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-input-element/HTMLInputElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-input-element/HTMLInputElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-input-element/HTMLInputElement.test.ts",
          "diff": "@@ -21,7 +21,9 @@ describe('HTMLInputElement', () => {\n \tlet element: HTMLInputElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLInputElement>document.createElement('input'),\n \t}),\n@@ -36,20 +38,20 @@ describe('HTMLInputElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -751,15 +753,15 @@ describe('HTMLInputElement', () => {\n \tfor (const property of ['disabled', 'autofocus', 'required', 'multiple', 'readOnly']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(false),\n+\t\t\t\texpect((<any>element)[property]).toBe(false),\n \t\t\t\telement.setAttribute(property, ''),\n-\t\t\t\texpect(element[property]).toBe(true),\n+\t\t\t\texpect((<any>element)[property]).toBe(true),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = true,\n+\t\t\t\t(<any>element)[property] = true,\n \t\t\t\texpect(element.getAttribute(property)).toBe(''),\n \t\t\t}),\n \t\t}),\n@@ -781,15 +783,15 @@ describe('HTMLInputElement', () => {\n \t]) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(''),\n+\t\t\t\texpect((<any>element)[property]).toBe(''),\n \t\t\t\telement.setAttribute(property, 'value'),\n-\t\t\t\texpect(element[property]).toBe('value'),\n+\t\t\t\texpect((<any>element)[property]).toBe('value'),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = 'value',\n+\t\t\t\t(<any>element)[property] = 'value',\n \t\t\t\texpect(element.getAttribute(property)).toBe('value'),\n \t\t\t}),\n \t\t}),\n@@ -798,18 +800,18 @@ describe('HTMLInputElement', () => {\n \tfor (const property of ['height', 'width']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(0),\n-\t\t\t\telement[property] = 20,\n-\t\t\t\texpect(element[property]).toBe(20),\n+\t\t\t\texpect((<any>element)[property]).toBe(0),\n+\t\t\t\t(<any>element)[property] = 20,\n+\t\t\t\texpect((<any>element)[property]).toBe(20),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n \t\t\t\telement.setAttribute(property, '50'),\n-\t\t\t\texpect(element[property]).toBe(0),\n-\t\t\t\telement[property] = 50,\n-\t\t\t\texpect(element[property]).toBe(50),\n+\t\t\t\texpect((<any>element)[property]).toBe(0),\n+\t\t\t\t(<any>element)[property] = 50,\n+\t\t\t\texpect((<any>element)[property]).toBe(50),\n \t\t\t\texpect(element.getAttribute(property)).toBe('50'),\n \t\t\t}),\n \t\t}),\n@@ -818,16 +820,16 @@ describe('HTMLInputElement', () => {\n \tfor (const property of ['minLength', 'maxLength']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(-1),\n+\t\t\t\texpect((<any>element)[property]).toBe(-1),\n \t\t\t\telement.setAttribute(property, '50'),\n-\t\t\t\texpect(element[property]).toBe(50),\n+\t\t\t\texpect((<any>element)[property]).toBe(50),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = 50,\n-\t\t\t\texpect(element[property]).toBe(50),\n+\t\t\t\t(<any>element)[property] = 50,\n+\t\t\t\texpect((<any>element)[property]).toBe(50),\n \t\t\t\texpect(element.getAttribute(property)).toBe('50'),\n \t\t\t}),\n \t\t}),\n@@ -1243,43 +1245,43 @@ describe('HTMLInputElement', () => {\n \t\t\tit('Returns \"true\" if the field is \"disabled\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.disabled = true,\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"true\" if the field is \"readOnly\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.readOnly = true,\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"true\" if the field type is \"hidden\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.type = 'hidden',\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"true\" if the field type is \"reset\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.type = 'reset',\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"true\" if the field type is \"button\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.type = 'button',\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"false\" if invalid.', () => {\n \t\t\t\telement.required = true,\n-\t\t\t\texpect(element[method]()).toBe(false),\n+\t\t\t\texpect((<any>element)[method]()).toBe(false),\n \t\t\t}),\n \n \t\t\tit('Triggers an \"invalid\" event when invalid.', () => {\n \t\t\t\telement.required = true,\n \t\t\t\tlet dispatchedEvent: Event | null = null,\n \t\t\t\telement.addEventListener('invalid', (event: Event) => (dispatchedEvent = event)),\n-\t\t\t\telement[method](),\n+\t\t\t\t(<any>element)[method](),\n \t\t\t\texpect((<Event>(<unknown>dispatchedEvent)).type).toBe('invalid'),\n \t\t\t}),\n \t\t}),"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-link-element/HTMLLinkElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-link-element/HTMLLinkElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-link-element/HTMLLinkElement.test.ts",
          "diff": "@@ -13,7 +13,9 @@ describe('HTMLLinkElement', () => {\n \tlet document: Document,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t}),\n \n@@ -33,21 +35,21 @@ describe('HTMLLinkElement', () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\tconst element = document.createElement('link'),\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n \t\t\t\tconst element = document.createElement('link'),\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -66,14 +68,14 @@ describe('HTMLLinkElement', () => {\n \t\t\tit(`Returns the \"${property}\" attribute.`, () => {\n \t\t\t\tconst element = document.createElement('link'),\n \t\t\t\telement.setAttribute(property, 'test'),\n-\t\t\t\texpect(element[property]).toBe('test'),\n+\t\t\t\texpect((<any>element)[property]).toBe('test'),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit(`Sets the attribute \"${property}\".`, () => {\n \t\t\t\tconst element = document.createElement('link'),\n-\t\t\t\telement[property] = 'test',\n+\t\t\t\t(<any>element)[property] = 'test',\n \t\t\t\texpect(element.getAttribute(property)).toBe('test'),\n \t\t\t}),\n \t\t}),\n@@ -136,9 +138,10 @@ describe('HTMLLinkElement', () => {\n \t\t\tlet loadEventCurrentTarget: EventTarget | null = null,\n \n \t\t\tvi.spyOn(ResourceFetch.prototype, 'fetch').mockImplementation(async function (\n+\t\t\t\tthis: ResourceFetch,\n \t\t\t\turl: string | URL\n \t\t\t) {\n-\t\t\t\tloadedWindow = this.window,\n+\t\t\t\tloadedWindow = (<any>this).window,\n \t\t\t\tloadedURL = <string>url,\n \t\t\t\treturn { content: css, virtualServerFile: null },\n \t\t\t}),\n@@ -158,8 +161,8 @@ describe('HTMLLinkElement', () => {\n \n \t\t\texpect(loadedWindow).toBe(window),\n \t\t\texpect(loadedURL).toBe('https://localhost:8080/test/path/file.css'),\n-\t\t\texpect(element.sheet.cssRules.length).toBe(1),\n-\t\t\texpect(element.sheet.cssRules[0].cssText).toBe('div { background: red, }'),\n+\t\t\texpect(element.sheet!.cssRules.length).toBe(1),\n+\t\t\texpect(element.sheet!.cssRules[0].cssText).toBe('div { background: red, }'),\n \t\t\texpect((<Event>(<unknown>loadEvent)).target).toBe(element),\n \t\t\texpect(loadEventTarget).toBe(element),\n \t\t\texpect(loadEventCurrentTarget).toBe(element),\n@@ -199,9 +202,10 @@ describe('HTMLLinkElement', () => {\n \t\t\tlet loadedURL: string | null = null,\n \n \t\t\tvi.spyOn(ResourceFetch.prototype, 'fetch').mockImplementation(async function (\n+\t\t\t\tthis: ResourceFetch,\n \t\t\t\turl: string | URL\n \t\t\t) {\n-\t\t\t\tloadedWindow = this.window,\n+\t\t\t\tloadedWindow = (<any>this).window,\n \t\t\t\tloadedURL = <string>url,\n \t\t\t\treturn { content: css, virtualServerFile: null },\n \t\t\t}),\n@@ -225,9 +229,10 @@ describe('HTMLLinkElement', () => {\n \t\t\tlet loadedURL: string | null = null,\n \n \t\t\tvi.spyOn(ResourceFetch.prototype, 'fetch').mockImplementation(async function (\n+\t\t\t\tthis: ResourceFetch,\n \t\t\t\turl: string | URL\n \t\t\t) {\n-\t\t\t\tloadedWindow = this.window,\n+\t\t\t\tloadedWindow = (<any>this).window,\n \t\t\t\tloadedURL = <string>url,\n \t\t\t\treturn { content: css, virtualServerFile: null },\n \t\t\t}),\n@@ -246,8 +251,8 @@ describe('HTMLLinkElement', () => {\n \n \t\t\texpect(loadedWindow).toBe(window),\n \t\t\texpect(loadedURL).toBe('https://localhost:8080/test/path/file.css'),\n-\t\t\texpect(element.sheet.cssRules.length).toBe(1),\n-\t\t\texpect(element.sheet.cssRules[0].cssText).toBe('div { background: red, }'),\n+\t\t\texpect(element.sheet!.cssRules.length).toBe(1),\n+\t\t\texpect(element.sheet!.cssRules[0].cssText).toBe('div { background: red, }'),\n \t\t\texpect((<Event>(<unknown>loadEvent)).target).toBe(element),\n \t\t\texpect(loadEventTarget).toBe(element),\n \t\t\texpect(loadEventCurrentTarget).toBe(element),\n@@ -286,9 +291,10 @@ describe('HTMLLinkElement', () => {\n \t\t\tlet loadedURL: string | null = null,\n \n \t\t\tvi.spyOn(ResourceFetch.prototype, 'fetch').mockImplementation(async function (\n+\t\t\t\tthis: ResourceFetch,\n \t\t\t\turl: string | URL\n \t\t\t) {\n-\t\t\t\tloadedWindow = this.window,\n+\t\t\t\tloadedWindow = (<any>this).window,\n \t\t\t\tloadedURL = <string>url,\n \t\t\t\treturn { content: css, virtualServerFile: null },\n \t\t\t}),\n@@ -353,6 +359,8 @@ describe('HTMLLinkElement', () => {\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/base/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.disabled,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tinterceptor: {\n@@ -403,7 +411,7 @@ describe('HTMLLinkElement', () => {\n \t\t\t\t'https://localhost:8080/base/js/utilities/stringUtility.js'\n \t\t\t]),\n \n-\t\t\texpect(window['moduleLoadOrder']).toEqual([\n+\t\t\texpect((<any>window)['moduleLoadOrder']).toEqual([\n \t\t\t\t'apostrophWrapper.js',\n \t\t\t\t'StringUtilityClass.js',\n \t\t\t\t'stringUtility.js',\n@@ -426,6 +434,8 @@ describe('HTMLLinkElement', () => {\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.disabled,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tinterceptor: {\n@@ -505,6 +515,8 @@ describe('HTMLLinkElement', () => {\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.disabled,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tinterceptor: {\n@@ -585,6 +597,8 @@ describe('HTMLLinkElement', () => {\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.disabled,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tinterceptor: {"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-media-element/HTMLMediaElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-media-element/HTMLMediaElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-media-element/HTMLMediaElement.test.ts",
          "diff": "@@ -21,7 +21,9 @@ describe('HTMLMediaElement', () => {\n \tlet element: HTMLMediaElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLMediaElement>document.createElement('audio'),\n \t}),\n@@ -41,7 +43,7 @@ describe('HTMLMediaElement', () => {\n \t\t\texpect(audio.localName).toBe('audio'),\n \t\t\texpect(audio.namespaceURI).toBe(NamespaceURI.html),\n \n-\t\t\texpect(window['Video']).toBe(undefined),\n+\t\t\texpect((<any>window)['Video']).toBe(undefined),\n \t\t}),\n \t}),\n \n@@ -79,20 +81,20 @@ describe('HTMLMediaElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -174,21 +176,21 @@ describe('HTMLMediaElement', () => {\n \tfor (const property of ['autoplay', 'controls', 'loop']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(false),\n+\t\t\t\texpect((<any>element)[property]).toBe(false),\n \t\t\t\telement.setAttribute(property, ''),\n-\t\t\t\texpect(element[property]).toBe(true),\n+\t\t\t\texpect((<any>element)[property]).toBe(true),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = true,\n+\t\t\t\t(<any>element)[property] = true,\n \t\t\t\texpect(element.getAttribute(property)).toBe(''),\n \t\t\t}),\n \n \t\t\tit('Remove attribute value.', () => {\n \t\t\t\telement.setAttribute(property, ''),\n-\t\t\t\telement[property] = false,\n+\t\t\t\t(<any>element)[property] = false,\n \t\t\t\texpect(element.getAttribute(property)).toBeNull(),\n \t\t\t}),\n \t\t}),\n@@ -392,15 +394,15 @@ describe('HTMLMediaElement', () => {\n \n \t\t\texpect(element.textTracks.length).toBe(4),\n \n-\t\t\texpect(element.textTracks[2].id).toBe('track1'),\n-\t\t\texpect(element.textTracks[2].kind).toBe('captions'),\n-\t\t\texpect(element.textTracks[2].label).toBe('English'),\n-\t\t\texpect(element.textTracks[2].language).toBe('en'),\n+\t\t\texpect(element.textTracks[2]!.id).toBe('track1'),\n+\t\t\texpect(element.textTracks[2]!.kind).toBe('captions'),\n+\t\t\texpect(element.textTracks[2]!.label).toBe('English'),\n+\t\t\texpect(element.textTracks[2]!.language).toBe('en'),\n \n-\t\t\texpect(element.textTracks[3].id).toBe('track2'),\n-\t\t\texpect(element.textTracks[3].kind).toBe('metadata'),\n-\t\t\texpect(element.textTracks[3].label).toBe('French'),\n-\t\t\texpect(element.textTracks[3].language).toBe('fr'),\n+\t\t\texpect(element.textTracks[3]!.id).toBe('track2'),\n+\t\t\texpect(element.textTracks[3]!.kind).toBe('metadata'),\n+\t\t\texpect(element.textTracks[3]!.label).toBe('French'),\n+\t\t\texpect(element.textTracks[3]!.language).toBe('fr'),\n \t\t}),\n \t}),\n "
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-script-element/HTMLScriptElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-script-element/HTMLScriptElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-script-element/HTMLScriptElement.test.ts",
          "diff": "@@ -18,7 +18,9 @@ describe('HTMLScriptElement', () => {\n \tlet document: Document,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t}),\n \n@@ -38,21 +40,21 @@ describe('HTMLScriptElement', () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\tconst element = document.createElement('script'),\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n \t\t\t\tconst element = document.createElement('script'),\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -62,14 +64,14 @@ describe('HTMLScriptElement', () => {\n \t\t\tit(`Returns the \"${property}\" attribute.`, () => {\n \t\t\t\tconst element = document.createElement('script'),\n \t\t\t\telement.setAttribute(property, 'test'),\n-\t\t\t\texpect(element[property]).toBe('test'),\n+\t\t\t\texpect((<any>element)[property]).toBe('test'),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit(`Sets the attribute \"${property}\".`, () => {\n \t\t\t\tconst element = document.createElement('script'),\n-\t\t\t\telement[property] = 'test',\n+\t\t\t\t(<any>element)[property] = 'test',\n \t\t\t\texpect(element.getAttribute(property)).toBe('test'),\n \t\t\t}),\n \t\t}),\n@@ -80,14 +82,14 @@ describe('HTMLScriptElement', () => {\n \t\t\tit(`Returns \"true\" if the \"${property}\" attribute is defined.`, () => {\n \t\t\t\tconst element = document.createElement('script'),\n \t\t\t\telement.setAttribute(property, ''),\n-\t\t\t\texpect(element[property]).toBe(true),\n+\t\t\t\texpect((<any>element)[property]).toBe(true),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit(`Sets the \"${property}\" attribute to an empty string if set to \"true\".`, () => {\n \t\t\t\tconst element = document.createElement('script'),\n-\t\t\t\telement[property] = true,\n+\t\t\t\t(<any>element)[property] = true,\n \t\t\t\texpect(element.getAttribute(property)).toBe(''),\n \t\t\t}),\n \t\t}),\n@@ -211,13 +213,62 @@ describe('HTMLScriptElement', () => {\n \t}),\n \n \tdescribe('set src()', () => {\n+\t\tit('Does not load external script when JavaScript is disabled.', async () => {\n+\t\t\tconst window = new Window(),\n+\t\t\tconst document = window.document,\n+\t\t\tconst element = document.createElement('script'),\n+\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(\n+\t\t\t\tasync () =>\n+\t\t\t\t\t<Response>{\n+\t\t\t\t\t\ttext: async () => 'globalThis.test = \"test\",',\n+\t\t\t\t\t\tok: true,\n+\t\t\t\t\t\tstatus: 200\n+\t\t\t\t\t}\n+\t\t\t),\n+\n+\t\t\tdocument.body.appendChild(element),\n+\n+\t\t\telement.async = true,\n+\t\t\telement.src = 'https://localhost:8080/path/to/script.js',\n+\n+\t\t\tawait window.happyDOM?.waitUntilComplete(),\n+\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t}),\n+\n+\t\tit('Does not load external module when JavaScript is disabled.', async () => {\n+\t\t\tconst window = new Window(),\n+\t\t\tconst document = window.document,\n+\t\t\tconst element = document.createElement('script'),\n+\n+\t\t\telement.type = 'module',\n+\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(\n+\t\t\t\tasync () =>\n+\t\t\t\t\t<Response>{\n+\t\t\t\t\t\ttext: async () => 'globalThis.test = \"test\",',\n+\t\t\t\t\t\tok: true,\n+\t\t\t\t\t\tstatus: 200\n+\t\t\t\t\t}\n+\t\t\t),\n+\n+\t\t\tdocument.body.appendChild(element),\n+\n+\t\t\telement.src = 'https://localhost:8080/path/to/script.js',\n+\n+\t\t\tawait window.happyDOM?.waitUntilComplete(),\n+\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t}),\n+\n \t\tit('Sets the attribute \"src\".', () => {\n \t\t\tconst element = document.createElement('script'),\n \t\t\telement.src = 'test',\n \t\t\texpect(element.getAttribute('src')).toBe('test'),\n \t\t}),\n \n-\t\tit('Loads and evaluates an external script when the attribute \"src\" is set and the element is connected to DOM.', async () => {\n+\t\tit('Loads and evaluates an external script when the property \"src\" is set and the element is connected to DOM.', async () => {\n \t\t\tconst element = document.createElement('script'),\n \n \t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(\n@@ -236,7 +287,7 @@ describe('HTMLScriptElement', () => {\n \n \t\t\tawait window.happyDOM?.waitUntilComplete(),\n \n-\t\t\texpect(window['test']).toBe('test'),\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n \t\t}),\n \n \t\tit('Does not evaluate script if the element is not connected to DOM.', async () => {\n@@ -256,7 +307,52 @@ describe('HTMLScriptElement', () => {\n \n \t\t\tawait window.happyDOM?.waitUntilComplete(),\n \n-\t\t\texpect(window['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t}),\n+\n+\t\tit('Loads and evaluates an external script when the attribute \"src\" is set and the element is connected to DOM.', async () => {\n+\t\t\tconst element = document.createElement('script'),\n+\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(\n+\t\t\t\tasync () =>\n+\t\t\t\t\t<Response>{\n+\t\t\t\t\t\ttext: async () => 'globalThis.test = \"test\",',\n+\t\t\t\t\t\tok: true,\n+\t\t\t\t\t\tstatus: 200\n+\t\t\t\t\t}\n+\t\t\t),\n+\n+\t\t\tdocument.body.appendChild(element),\n+\n+\t\t\telement.async = true,\n+\t\t\telement.setAttribute('src', 'https://localhost:8080/path/to/script.js'),\n+\n+\t\t\tawait window.happyDOM?.waitUntilComplete(),\n+\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n+\t\t}),\n+\n+\t\tit('Loads and evaluates an external module script when the attribute \"src\" is set and the element is connected to DOM.', async () => {\n+\t\t\tconst element = document.createElement('script'),\n+\n+\t\t\telement.type = 'module',\n+\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(\n+\t\t\t\tasync () =>\n+\t\t\t\t\t<Response>{\n+\t\t\t\t\t\ttext: async () => 'globalThis.test = \"test\",',\n+\t\t\t\t\t\tok: true,\n+\t\t\t\t\t\tstatus: 200\n+\t\t\t\t\t}\n+\t\t\t),\n+\n+\t\t\tdocument.body.appendChild(element),\n+\n+\t\t\telement.setAttribute('src', 'https://localhost:8080/path/to/script.js'),\n+\n+\t\t\tawait window.happyDOM?.waitUntilComplete(),\n+\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n \t\t}),\n \t}),\n \n@@ -278,12 +374,65 @@ describe('HTMLScriptElement', () => {\n \t}),\n \n \tdescribe('set isConnected()', () => {\n+\t\tit('Does not execute script when Javascript is disabled.', () => {\n+\t\t\tconst window = new Window(),\n+\t\t\tconst document = window.document,\n+\t\t\tconst element = document.createElement('script'),\n+\t\t\telement.text = 'globalThis.test = \"test\",globalThis.currentScript = document.currentScript,',\n+\t\t\tdocument.body.appendChild(element),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['currentScript']).toBe(undefined),\n+\t\t}),\n+\n+\t\tit('Does not load script when Javascript is disabled.', () => {\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(async function (this: Fetch) {\n+\t\t\t\treturn <Response>{\n+\t\t\t\t\ttext: async () => 'globalThis.test = \"test\",',\n+\t\t\t\t\tok: true\n+\t\t\t\t},\n+\t\t\t}),\n+\n+\t\t\tconst window = new Window(),\n+\t\t\tconst document = window.document,\n+\t\t\tconst element = document.createElement('script'),\n+\t\t\telement.src = 'https://localhost:8080/path/to/script.js',\n+\t\t\tdocument.body.appendChild(element),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t}),\n+\n+\t\tit('Does not execute module script when Javascript is disabled.', () => {\n+\t\t\tconst window = new Window(),\n+\t\t\tconst document = window.document,\n+\t\t\tconst element = document.createElement('script'),\n+\t\t\telement.type = 'module',\n+\t\t\telement.text = 'globalThis.test = \"test\",',\n+\t\t\tdocument.body.appendChild(element),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t}),\n+\n+\t\tit('Does not load module script when Javascript is disabled.', () => {\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(async function (this: Fetch) {\n+\t\t\t\treturn <Response>{\n+\t\t\t\t\ttext: async () => 'globalThis.test = \"test\",',\n+\t\t\t\t\tok: true\n+\t\t\t\t},\n+\t\t\t}),\n+\n+\t\t\tconst window = new Window(),\n+\t\t\tconst document = window.document,\n+\t\t\tconst element = document.createElement('script'),\n+\t\t\telement.type = 'module',\n+\t\t\telement.src = 'https://localhost:8080/path/to/script.js',\n+\t\t\tdocument.body.appendChild(element),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n+\t\t}),\n+\n \t\tit('Evaluates the text content as code when appended to an element that is connected to the document.', () => {\n \t\t\tconst element = document.createElement('script'),\n \t\t\telement.text = 'globalThis.test = \"test\",globalThis.currentScript = document.currentScript,',\n \t\t\tdocument.body.appendChild(element),\n-\t\t\texpect(window['test']).toBe('test'),\n-\t\t\texpect(window['currentScript']).toBe(element),\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n+\t\t\texpect((<any>window)['currentScript']).toBe(element),\n \t\t}),\n \n \t\tit('Evaluates the text content as code when inserted before an element that is connected to the document.', () => {\n@@ -299,8 +448,8 @@ describe('HTMLScriptElement', () => {\n \t\t\tdocument.body.insertBefore(div1, div2),\n \t\t\tdocument.body.appendChild(element),\n \n-\t\t\texpect(window['test']).toBe('test'),\n-\t\t\texpect(window['currentScript']).toBe(element),\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n+\t\t\texpect((<any>window)['currentScript']).toBe(element),\n \t\t}),\n \n \t\tfor (const attribute of [\n@@ -313,8 +462,8 @@ describe('HTMLScriptElement', () => {\n \t\t\t\tlet loadEventTarget: EventTarget | null = null,\n \t\t\t\tlet loadEventCurrentTarget: EventTarget | null = null,\n \n-\t\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(async function () {\n-\t\t\t\t\tfetchedURL = this.request.url,\n+\t\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(async function (this: Fetch) {\n+\t\t\t\t\tfetchedURL = (<any>this).request.url,\n \t\t\t\t\treturn <Response>{\n \t\t\t\t\t\ttext: async () =>\n \t\t\t\t\t\t\t'globalThis.test = \"test\",globalThis.currentScript = document.currentScript,',\n@@ -339,8 +488,8 @@ describe('HTMLScriptElement', () => {\n \t\t\t\texpect(loadEventTarget).toBe(script),\n \t\t\t\texpect(loadEventCurrentTarget).toBe(script),\n \t\t\t\texpect(fetchedURL).toBe('https://localhost:8080/path/to/script.js'),\n-\t\t\t\texpect(window['test']).toBe('test'),\n-\t\t\t\texpect(window['currentScript']).toBe(script),\n+\t\t\t\texpect((<any>window)['test']).toBe('test'),\n+\t\t\t\texpect((<any>window)['currentScript']).toBe(script),\n \t\t\t}),\n \n \t\t\tit(`Triggers error event when loading external script asynchronously when the attribute \"${attribute.name}\" is set to \"${attribute.value}\".`, async () => {\n@@ -379,15 +528,24 @@ describe('HTMLScriptElement', () => {\n \t\t}\n \n \t\tit('Loads external script synchronously with relative URL.', async () => {\n-\t\t\tconst window = new Window({ url: 'https://localhost:8080/base/' }),\n+\t\t\tconst window = new Window({\n+\t\t\t\turl: 'https://localhost:8080/base/',\n+\t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n+\t\t\t}),\n \t\t\tlet fetchedWindow: BrowserWindow | null = null,\n \t\t\tlet fetchedURL: string | null = null,\n \t\t\tlet loadEvent: Event | null = null,\n \t\t\tlet loadEventTarget: EventTarget | null = null,\n \t\t\tlet loadEventCurrentTarget: EventTarget | null = null,\n \n-\t\t\tvi.spyOn(ResourceFetch.prototype, 'fetchSync').mockImplementation(function (url: string) {\n-\t\t\t\tfetchedWindow = this.window,\n+\t\t\tvi.spyOn(ResourceFetch.prototype, 'fetchSync').mockImplementation(function (\n+\t\t\t\tthis: ResourceFetch,\n+\t\t\t\turl: string\n+\t\t\t) {\n+\t\t\t\tfetchedWindow = (<any>this).window,\n \t\t\t\tfetchedURL = url,\n \t\t\t\treturn {\n \t\t\t\t\tcontent: 'globalThis.test = \"test\",globalThis.currentScript = document.currentScript,',\n@@ -410,12 +568,18 @@ describe('HTMLScriptElement', () => {\n \t\t\texpect(loadEventCurrentTarget).toBe(script),\n \t\t\texpect(fetchedWindow).toBe(window),\n \t\t\texpect(fetchedURL).toBe('https://localhost:8080/base/path/to/script.js'),\n-\t\t\texpect(window['test']).toBe('test'),\n-\t\t\texpect(window['currentScript']).toBe(script),\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n+\t\t\texpect((<any>window)['currentScript']).toBe(script),\n \t\t}),\n \n \t\tit('Triggers error event when loading external script synchronously with relative URL.', () => {\n-\t\t\tconst window = new Window({ url: 'https://localhost:8080/base/' }),\n+\t\t\tconst window = new Window({\n+\t\t\t\turl: 'https://localhost:8080/base/',\n+\t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n+\t\t\t}),\n \t\t\tconst thrownError = new Error('error'),\n \t\t\tlet errorEvent: Event | null = null,\n \n@@ -451,27 +615,27 @@ describe('HTMLScriptElement', () => {\n \t\t\tconst div = document.createElement('div'),\n \t\t\tdiv.innerHTML = '<script>globalThis.test = \"test\",</script>',\n \t\t\tdocument.body.appendChild(div),\n-\t\t\texpect(window['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n \t\t}),\n \n \t\tit('Does not evaluate code when added as outerHTML.', () => {\n \t\t\tconst div = document.createElement('div'),\n \t\t\tdocument.body.appendChild(div),\n \t\t\tdiv.outerHTML = '<script>globalThis.test = \"test\",</script>',\n-\t\t\texpect(window['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n \t\t}),\n \n \t\tit('Does not evaluate code if the element is not connected to DOM.', () => {\n \t\t\tconst div = document.createElement('div'),\n \t\t\tconst element = document.createElement('script'),\n \t\t\telement.text = 'window.test = \"test\",',\n \t\t\tdiv.appendChild(element),\n-\t\t\texpect(window['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n \t\t}),\n \n \t\tit('Evaluates the text content as code when using document.write().', () => {\n \t\t\tdocument.write('<script>globalThis.test = \"test\",</script>'),\n-\t\t\texpect(window['test']).toBe('test'),\n+\t\t\texpect((<any>window)['test']).toBe('test'),\n \t\t}),\n \n \t\tit(\"Doesn't evaluate the text content as code when using DOMParser.parseFromString().\", () => {\n@@ -480,9 +644,9 @@ describe('HTMLScriptElement', () => {\n \t\t\t\t'<script>globalThis.test = \"test\",</script>',\n \t\t\t\t'text/html'\n \t\t\t),\n-\t\t\texpect(window['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n \t\t\tdocument.body.appendChild(result),\n-\t\t\texpect(window['test']).toBe(undefined),\n+\t\t\texpect((<any>window)['test']).toBe(undefined),\n \t\t}),\n \n \t\tit('Loads and evaluates an external script when \"src\" attribute has been set, but does not evaluate text content.', () => {\n@@ -498,8 +662,8 @@ describe('HTMLScriptElement', () => {\n \n \t\t\tdocument.body.appendChild(element),\n \n-\t\t\texpect(window['testFetch']).toBe('test'),\n-\t\t\texpect(window['testContent']).toBe(undefined),\n+\t\t\texpect((<any>window)['testFetch']).toBe('test'),\n+\t\t\texpect((<any>window)['testContent']).toBe(undefined),\n \t\t}),\n \n \t\tit('Does not load external scripts when \"src\" attribute has been set if the element is not connected to DOM.', () => {\n@@ -513,13 +677,17 @@ describe('HTMLScriptElement', () => {\n \t\t\telement.src = 'https://localhost:8080/path/to/script.js',\n \t\t\telement.text = 'globalThis.test = \"test\",',\n \n-\t\t\texpect(window['testFetch']).toBe(undefined),\n-\t\t\texpect(window['testContent']).toBe(undefined),\n+\t\t\texpect((<any>window)['testFetch']).toBe(undefined),\n+\t\t\texpect((<any>window)['testContent']).toBe(undefined),\n \t\t}),\n \n-\t\tit('Triggers an error event when attempting to perform an asynchrounous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n+\t\tit('Triggers an error event when attempting to perform an asynchronous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { disableJavaScriptFileLoading: true }\n+\t\t\t\tsettings: {\n+\t\t\t\t\tdisableJavaScriptFileLoading: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -545,9 +713,14 @@ describe('HTMLScriptElement', () => {\n \t\t\t).toBe(true),\n \t\t}),\n \n-\t\tit('Triggers a load event when attempting to perform an asynchrounous request and the Happy DOM setting \"disableJavaScriptFileLoading\" and \"handleDisabledFileLoadingAsSuccess\" is set to \"true\".', () => {\n+\t\tit('Triggers a load event when attempting to perform an asynchronous request and the Happy DOM setting \"disableJavaScriptFileLoading\" and \"handleDisabledFileLoadingAsSuccess\" is set to \"true\".', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { disableJavaScriptFileLoading: true, handleDisabledFileLoadingAsSuccess: true }\n+\t\t\t\tsettings: {\n+\t\t\t\t\tdisableJavaScriptFileLoading: true,\n+\t\t\t\t\thandleDisabledFileLoadingAsSuccess: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -565,9 +738,13 @@ describe('HTMLScriptElement', () => {\n \t\t\texpect((<Event>(<unknown>loadEvent)).type).toBe('load'),\n \t\t}),\n \n-\t\tit('Triggers an error event when attempting to perform a synchrounous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n+\t\tit('Triggers an error event when attempting to perform a synchronous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { disableJavaScriptFileLoading: true }\n+\t\t\t\tsettings: {\n+\t\t\t\t\tdisableJavaScriptFileLoading: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -592,9 +769,13 @@ describe('HTMLScriptElement', () => {\n \t\t\t).toBe(true),\n \t\t}),\n \n-\t\tit('Triggers an error event when attempting to perform an asynchrounous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n+\t\tit('Triggers an error event when attempting to perform an asynchronous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { disableJavaScriptFileLoading: true }\n+\t\t\t\tsettings: {\n+\t\t\t\t\tdisableJavaScriptFileLoading: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -620,9 +801,13 @@ describe('HTMLScriptElement', () => {\n \t\t\t).toBe(true),\n \t\t}),\n \n-\t\tit('Triggers an error event when attempting to perform a synchrounous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n+\t\tit('Triggers an error event when attempting to perform a synchronous request and the Happy DOM setting \"disableJavaScriptFileLoading\" is set to \"true\".', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { disableJavaScriptFileLoading: true }\n+\t\t\t\tsettings: {\n+\t\t\t\t\tdisableJavaScriptFileLoading: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -646,7 +831,7 @@ describe('HTMLScriptElement', () => {\n \t\t\t).toBe(true),\n \t\t}),\n \n-\t\tit('Triggers an error event on Window when attempting to perform an asynchrounous request containing invalid JavaScript.', async () => {\n+\t\tit('Triggers an error event on Window when attempting to perform an asynchronous request containing invalid JavaScript.', async () => {\n \t\t\tlet errorEvent: ErrorEvent | null = null,\n \n \t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(\n@@ -672,12 +857,16 @@ describe('HTMLScriptElement', () => {\n \t\t\t),\n \n \t\t\tconst consoleOutput = window.happyDOM?.virtualConsolePrinter.readAsString() || '',\n-\t\t\texpect(consoleOutput.startsWith('SyntaxError: Invalid regular expression: missing /')).toBe(\n-\t\t\t\ttrue\n-\t\t\t),\n+\t\t\texpect(\n+\t\t\t\tconsoleOutput.startsWith(`https://localhost:8080/base/path/to/script/:1\n+globalThis.test = /,\n+                  ^\n+\n+SyntaxError: Invalid regular expression: missing /`)\n+\t\t\t).toBe(true),\n \t\t}),\n \n-\t\tit('Triggers an error event on Window when attempting to perform a synchrounous request containing invalid JavaScript.', () => {\n+\t\tit('Triggers an error event on Window when attempting to perform a synchronous request containing invalid JavaScript.', () => {\n \t\t\tlet errorEvent: ErrorEvent | null = null,\n \n \t\t\tvi.spyOn(ResourceFetch.prototype, 'fetchSync').mockImplementation(() => ({\n@@ -697,9 +886,13 @@ describe('HTMLScriptElement', () => {\n \t\t\t),\n \n \t\t\tconst consoleOutput = window.happyDOM?.virtualConsolePrinter.readAsString() || '',\n-\t\t\texpect(consoleOutput.startsWith('SyntaxError: Invalid regular expression: missing /')).toBe(\n-\t\t\t\ttrue\n-\t\t\t),\n+\t\t\texpect(\n+\t\t\t\tconsoleOutput.startsWith(`https://localhost:8080/base/path/to/script/:1\n+globalThis.test = /,\n+                  ^\n+\n+SyntaxError: Invalid regular expression: missing /`)\n+\t\t\t).toBe(true),\n \t\t}),\n \n \t\tit('Triggers an error event on Window when appending an element that contains invalid Javascript.', () => {\n@@ -717,14 +910,22 @@ describe('HTMLScriptElement', () => {\n \t\t\t),\n \n \t\t\tconst consoleOutput = window.happyDOM?.virtualConsolePrinter.readAsString() || '',\n-\t\t\texpect(consoleOutput.startsWith('SyntaxError: Invalid regular expression: missing /')).toBe(\n-\t\t\t\ttrue\n-\t\t\t),\n+\t\t\texpect(\n+\t\t\t\tconsoleOutput.startsWith(`about:blank:1\n+globalThis.test = /,\n+                  ^\n+\n+SyntaxError: Invalid regular expression: missing /`)\n+\t\t\t).toBe(true),\n \t\t}),\n \n \t\tit('Throws an exception when appending an element that contains invalid Javascript and the Happy DOM setting \"disableErrorCapturing\" is set to true.', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { disableErrorCapturing: true }\n+\t\t\t\tsettings: {\n+\t\t\t\t\tdisableErrorCapturing: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -734,12 +935,16 @@ describe('HTMLScriptElement', () => {\n \n \t\t\texpect(() => {\n \t\t\t\tdocument.body.appendChild(element),\n-\t\t\t}).toThrow(new TypeError('Invalid regular expression: missing /')),\n+\t\t\t}).toThrow(new SyntaxError('Invalid regular expression: missing /')),\n \t\t}),\n \n \t\tit('Throws an exception when appending an element that contains invalid Javascript and the Happy DOM setting \"errorCapture\" is set to \"disabled\".', () => {\n \t\t\twindow = new Window({\n-\t\t\t\tsettings: { errorCapture: BrowserErrorCaptureEnum.disabled }\n+\t\t\t\tsettings: {\n+\t\t\t\t\terrorCapture: BrowserErrorCaptureEnum.disabled,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n \t\t\t}),\n \t\t\tdocument = window.document,\n \n@@ -749,14 +954,16 @@ describe('HTMLScriptElement', () => {\n \n \t\t\texpect(() => {\n \t\t\t\tdocument.body.appendChild(element),\n-\t\t\t}).toThrow(new TypeError('Invalid regular expression: missing /')),\n+\t\t\t}).toThrow(new SyntaxError('Invalid regular expression: missing /')),\n \t\t}),\n \n-\t\tit('Handles loading of a modules.', async () => {\n+\t\tit('Handles loading of a modules with \"src\" attribute.', async () => {\n \t\t\tconst requests: string[] = [],\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/base/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tinterceptor: {\n \t\t\t\t\t\t\tbeforeAsyncRequest: async ({ request }) => {\n@@ -780,7 +987,7 @@ describe('HTMLScriptElement', () => {\n \t\t\tscript.src = 'https://localhost:8080/base/js/TestModuleElement.js',\n \t\t\tscript.type = 'module',\n \t\t\tscript.addEventListener('load', () => {\n-\t\t\t\tmodulesLoadedAfterLoadEvent = window['moduleLoadOrder'].slice(),\n+\t\t\t\tmodulesLoadedAfterLoadEvent = (<any>window)['moduleLoadOrder'].slice(),\n \t\t\t}),\n \n \t\t\tdocument.body.appendChild(script),\n@@ -803,7 +1010,7 @@ describe('HTMLScriptElement', () => {\n \t\t\t\t'https://localhost:8080/base/js/utilities/lazyload.js'\n \t\t\t]),\n \n-\t\t\texpect(window['moduleLoadOrder']).toEqual([\n+\t\t\texpect((<any>window)['moduleLoadOrder']).toEqual([\n \t\t\t\t'apostrophWrapper.js',\n \t\t\t\t'StringUtilityClass.js',\n \t\t\t\t'stringUtility.js',\n@@ -836,11 +1043,88 @@ describe('HTMLScriptElement', () => {\n \t\t\t).toBe('red'),\n \t\t}),\n \n+\t\tit('Handles loading of a modules by code.', async () => {\n+\t\t\tconst requests: string[] = [],\n+\t\t\tconst window = new Window({\n+\t\t\t\turl: 'https://localhost:8080/base/',\n+\t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n+\t\t\t\t\tfetch: {\n+\t\t\t\t\t\tinterceptor: {\n+\t\t\t\t\t\t\tbeforeAsyncRequest: async ({ request }) => {\n+\t\t\t\t\t\t\t\trequests.push(request.url),\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t},\n+\t\t\t\t\t\tvirtualServers: [\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\turl: 'https://localhost:8080/base/js/',\n+\t\t\t\t\t\t\t\tdirectory: './test/nodes/html-script-element/modules/'\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t]\n+\t\t\t\t\t}\n+\t\t\t\t},\n+\t\t\t\tconsole\n+\t\t\t}),\n+\t\t\tconst document = window.document,\n+\t\t\tconst script = document.createElement('script'),\n+\n+\t\t\tscript.type = 'module',\n+\t\t\tscript.textContent = `import('./js/TestModuleElement.js'),`,\n+\n+\t\t\tdocument.body.appendChild(script),\n+\n+\t\t\tawait window.happyDOM?.waitUntilComplete(),\n+\n+\t\t\tconst testModule = document.createElement('test-module'),\n+\n+\t\t\tdocument.body.appendChild(testModule),\n+\n+\t\t\tawait window.happyDOM?.waitUntilComplete(),\n+\n+\t\t\texpect(requests).toEqual([\n+\t\t\t\t'https://localhost:8080/base/js/TestModuleElement.js',\n+\t\t\t\t'https://localhost:8080/base/js/utilities/StringUtilityClass.js',\n+\t\t\t\t'https://localhost:8080/base/js/utilities/stringUtility.js',\n+\t\t\t\t'https://localhost:8080/base/js/json/data.json',\n+\t\t\t\t'https://localhost:8080/base/js/css/style.css',\n+\t\t\t\t'https://localhost:8080/base/js/utilities/apostrophWrapper.js',\n+\t\t\t\t'https://localhost:8080/base/js/utilities/lazyload.js'\n+\t\t\t]),\n+\n+\t\t\texpect((<any>window)['moduleLoadOrder']).toEqual([\n+\t\t\t\t'apostrophWrapper.js',\n+\t\t\t\t'StringUtilityClass.js',\n+\t\t\t\t'stringUtility.js',\n+\t\t\t\t'TestModuleElement.js',\n+\t\t\t\t'lazyload.js'\n+\t\t\t]),\n+\n+\t\t\texpect(testModule.shadowRoot?.innerHTML).toBe(`<div>\n+            Expect lower case: \"value\"\n+            Expect upper case: \"VALUE\"\n+            Expect lower case. \"value\"\n+            Expect trimmed lower case: \"value\"\n+            Import URL: https://localhost:8080/base/js/TestModuleElement.js\n+            Resolved URL: https://localhost:8080/base/js/Resolved.js\n+        </div><div>Lazy-loaded module: true</div>`),\n+\n+\t\t\texpect(testModule.shadowRoot?.adoptedStyleSheets[0].cssRules[0].cssText).toBe(\n+\t\t\t\t'div { background: red, }'\n+\t\t\t),\n+\t\t\texpect(\n+\t\t\t\twindow.getComputedStyle(<HTMLElement>testModule.shadowRoot?.querySelector('div'))\n+\t\t\t\t\t.backgroundColor\n+\t\t\t).toBe('red'),\n+\t\t}),\n+\n \t\tit('Handles modules using an import map.', async () => {\n \t\t\tconst requests: string[] = [],\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/base/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tinterceptor: {\n \t\t\t\t\t\t\tbeforeAsyncRequest: async ({ request }) => {\n@@ -915,7 +1199,7 @@ describe('HTMLScriptElement', () => {\n \t\t\t\t'https://localhost:8080/base/js/utilities/lazyload.js'\n \t\t\t]),\n \n-\t\t\texpect(window['moduleLoadOrder']).toEqual([\n+\t\t\texpect((<any>window)['moduleLoadOrder']).toEqual([\n \t\t\t\t'apostrophWrapper.js',\n \t\t\t\t'StringUtilityClass.js',\n \t\t\t\t'stringUtility.js',\n@@ -944,6 +1228,8 @@ describe('HTMLScriptElement', () => {\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/base/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tvirtualServers: [\n \t\t\t\t\t\t\t{\n@@ -983,6 +1269,8 @@ DOMException: Failed to perform request to \"https://localhost:8080/base/js/utili\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/base/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tvirtualServers: [\n \t\t\t\t\t\t\t{\n@@ -1024,6 +1312,8 @@ DOMException: Failed to perform request to \"https://localhost:8080/base/js/utili\n \t\t\tconst window = new Window({\n \t\t\t\turl: 'https://localhost:8080/base/',\n \t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true,\n \t\t\t\t\tfetch: {\n \t\t\t\t\t\tvirtualServers: [\n \t\t\t\t\t\t\t{\n@@ -1053,7 +1343,7 @@ DOMException: Failed to perform request to \"https://localhost:8080/base/js/utili\n \t\t\texpect((<ErrorEvent>(<unknown>errorEvent)).type).toBe('error'),\n \t\t\texpect((<ErrorEvent>(<unknown>errorEvent)).bubbles).toBe(false),\n \t\t\texpect(\n-\t\t\t\t/^ReferenceError: notFound is not defined\\n    at eval \\((.+?)\\/nodes\\/html-script-element\\/modules-with-evaluation-error\\/utilities\\/stringUtility.js:10:14\\)/.test(\n+\t\t\t\t/^ReferenceError: notFound is not defined\\n    at (.+?)\\/nodes\\/html-script-element\\/modules-with-evaluation-error\\/utilities\\/stringUtility.js:10:14/.test(\n \t\t\t\t\twindow.happyDOM?.virtualConsolePrinter.readAsString()\n \t\t\t\t)\n \t\t\t).toBe(true),"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-select-element/HTMLSelectElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-select-element/HTMLSelectElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-select-element/HTMLSelectElement.test.ts",
          "diff": "@@ -14,7 +14,9 @@ describe('HTMLSelectElement', () => {\n \tlet element: HTMLSelectElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLSelectElement>document.createElement('select'),\n \t}),\n@@ -37,21 +39,21 @@ describe('HTMLSelectElement', () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\tconst element = document.createElement('script'),\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n \t\t\t\tconst element = document.createElement('script'),\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -147,15 +149,15 @@ describe('HTMLSelectElement', () => {\n \tfor (const property of ['disabled', 'autofocus', 'required', 'multiple']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(false),\n+\t\t\t\texpect((<any>element)[property]).toBe(false),\n \t\t\t\telement.setAttribute(property, ''),\n-\t\t\t\texpect(element[property]).toBe(true),\n+\t\t\t\texpect((<any>element)[property]).toBe(true),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = true,\n+\t\t\t\t(<any>element)[property] = true,\n \t\t\t\texpect(element.getAttribute(property)).toBe(''),\n \t\t\t}),\n \t\t}),\n@@ -268,14 +270,14 @@ describe('HTMLSelectElement', () => {\n \tdescribe('get symbol()', () => {\n \t\tit('returns existing symbol properties', () => {\n \t\t\tconst symbol = Symbol('test'),\n-\t\t\telement[symbol] = 'test',\n-\t\t\texpect(element[symbol]).toBe('test'),\n+\t\t\t(<any>element)[symbol] = 'test',\n+\t\t\texpect((<any>element)[symbol]).toBe('test'),\n \t\t}),\n \n \t\tit('ignores missing symbol properties', () => {\n \t\t\tconst symbol = Symbol('other-test'),\n \n-\t\t\texpect(element[symbol]).toBe(undefined),\n+\t\t\texpect((<any>element)[symbol]).toBe(undefined),\n \n \t\t\t// https://github.com/capricorn86/happy-dom/issues/1526\n \t\t\texpect(symbol in element).toBe(false),\n@@ -799,7 +801,7 @@ describe('HTMLSelectElement', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.disabled = true,\n \n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"false\" if invalid.', () => {\n@@ -809,7 +811,7 @@ describe('HTMLSelectElement', () => {\n \n \t\t\t\telement.required = true,\n \n-\t\t\t\texpect(element[method]()).toBe(false),\n+\t\t\t\texpect((<any>element)[method]()).toBe(false),\n \t\t\t}),\n \n \t\t\tit('Triggers an \"invalid\" event when invalid.', () => {\n@@ -822,7 +824,7 @@ describe('HTMLSelectElement', () => {\n \t\t\t\tlet dispatchedEvent: Event | null = null,\n \t\t\t\telement.addEventListener('invalid', (event: Event) => (dispatchedEvent = event)),\n \n-\t\t\t\telement[method](),\n+\t\t\t\t(<any>element)[method](),\n \n \t\t\t\texpect((<Event>(<unknown>dispatchedEvent)).type).toBe('invalid'),\n \t\t\t}),"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-slot-element/HTMLSlotElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-slot-element/HTMLSlotElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-slot-element/HTMLSlotElement.test.ts",
          "diff": "@@ -15,7 +15,9 @@ describe('HTMLSlotElement', () => {\n \tlet customElementWithSlot: CustomElementWithSlot,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \n \t\twindow.customElements.define('custom-element-with-named-slots', CustomElementWithNamedSlots),\n@@ -37,21 +39,21 @@ describe('HTMLSlotElement', () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\tconst element = <HTMLSlotElement>customElementWithSlot.shadowRoot?.querySelector('slot'),\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n \t\t\t\tconst element = <HTMLSlotElement>customElementWithSlot.shadowRoot?.querySelector('slot'),\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-text-area-element/HTMLTextAreaElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-text-area-element/HTMLTextAreaElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-text-area-element/HTMLTextAreaElement.test.ts",
          "diff": "@@ -14,7 +14,9 @@ describe('HTMLTextAreaElement', () => {\n \tlet element: HTMLTextAreaElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <HTMLTextAreaElement>document.createElement('textarea'),\n \t}),\n@@ -29,20 +31,20 @@ describe('HTMLTextAreaElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -169,15 +171,15 @@ describe('HTMLTextAreaElement', () => {\n \tfor (const property of ['disabled', 'autofocus', 'required', 'readOnly']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(false),\n+\t\t\t\texpect((<any>element)[property]).toBe(false),\n \t\t\t\telement.setAttribute(property, ''),\n-\t\t\t\texpect(element[property]).toBe(true),\n+\t\t\t\texpect((<any>element)[property]).toBe(true),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = true,\n+\t\t\t\t(<any>element)[property] = true,\n \t\t\t\texpect(element.getAttribute(property)).toBe(''),\n \t\t\t}),\n \t\t}),\n@@ -186,15 +188,15 @@ describe('HTMLTextAreaElement', () => {\n \tfor (const property of ['name', 'autocomplete', 'cols', 'rows', 'placeholder', 'inputMode']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(''),\n+\t\t\t\texpect((<any>element)[property]).toBe(''),\n \t\t\t\telement.setAttribute(property, 'value'),\n-\t\t\t\texpect(element[property]).toBe('value'),\n+\t\t\t\texpect((<any>element)[property]).toBe('value'),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = 'value',\n+\t\t\t\t(<any>element)[property] = 'value',\n \t\t\t\texpect(element.getAttribute(property)).toBe('value'),\n \t\t\t}),\n \t\t}),\n@@ -203,16 +205,16 @@ describe('HTMLTextAreaElement', () => {\n \tfor (const property of ['minLength', 'maxLength']) {\n \t\tdescribe(`get ${property}()`, () => {\n \t\t\tit('Returns attribute value.', () => {\n-\t\t\t\texpect(element[property]).toBe(-1),\n+\t\t\t\texpect((<any>element)[property]).toBe(-1),\n \t\t\t\telement.setAttribute(property, '50'),\n-\t\t\t\texpect(element[property]).toBe(50),\n+\t\t\t\texpect((<any>element)[property]).toBe(50),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set ${property}()`, () => {\n \t\t\tit('Sets attribute value.', () => {\n-\t\t\t\telement[property] = 50,\n-\t\t\t\texpect(element[property]).toBe(50),\n+\t\t\t\t(<any>element)[property] = 50,\n+\t\t\t\texpect((<any>element)[property]).toBe(50),\n \t\t\t\texpect(element.getAttribute(property)).toBe('50'),\n \t\t\t}),\n \t\t}),\n@@ -285,25 +287,25 @@ describe('HTMLTextAreaElement', () => {\n \t\t\tit('Returns \"true\" if the field is \"disabled\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.disabled = true,\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"true\" if the field is \"readOnly\".', () => {\n \t\t\t\telement.required = true,\n \t\t\t\telement.readOnly = true,\n-\t\t\t\texpect(element[method]()).toBe(true),\n+\t\t\t\texpect((<any>element)[method]()).toBe(true),\n \t\t\t}),\n \n \t\t\tit('Returns \"false\" if invalid.', () => {\n \t\t\t\telement.required = true,\n-\t\t\t\texpect(element[method]()).toBe(false),\n+\t\t\t\texpect((<any>element)[method]()).toBe(false),\n \t\t\t}),\n \n \t\t\tit('Triggers an \"invalid\" event when invalid.', () => {\n \t\t\t\telement.required = true,\n \t\t\t\tlet triggeredEvent: Event | null = null,\n \t\t\t\telement.addEventListener('invalid', (event: Event) => (triggeredEvent = event)),\n-\t\t\t\telement[method](),\n+\t\t\t\t(<any>element)[method](),\n \t\t\t\texpect((<Event>(<unknown>triggeredEvent)).type).toBe('invalid'),\n \t\t\t}),\n \t\t}),"
        },
        {
          "filename": "packages/happy-dom/test/nodes/html-track-element/HTMLTrackElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/html-track-element/HTMLTrackElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/html-track-element/HTMLTrackElement.test.ts",
          "diff": "@@ -11,7 +11,9 @@ describe('HTMLTrackElement', () => {\n \tlet element: HTMLTrackElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElement('track'),\n \t}),\n@@ -26,20 +28,20 @@ describe('HTMLTrackElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/svg-animation-element/SVGAnimationElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/svg-animation-element/SVGAnimationElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/svg-animation-element/SVGAnimationElement.test.ts",
          "diff": "@@ -11,7 +11,9 @@ describe('SVGAnimationElement', () => {\n \tlet element: SVGAnimationElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElementNS('http://www.w3.org/2000/svg', 'animate'),\n \t}),\n@@ -30,20 +32,20 @@ describe('SVGAnimationElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/svg-element/SVGElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/svg-element/SVGElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/svg-element/SVGElement.test.ts",
          "diff": "@@ -1,7 +1,5 @@\n import Window from '../../../src/window/Window.js',\n import Document from '../../../src/nodes/document/Document.js',\n-import SVGSVGElement from '../../../src/nodes/svg-svg-element/SVGSVGElement.js',\n-import NamespaceURI from '../../../src/config/NamespaceURI.js',\n import SVGElement from '../../../src/nodes/svg-element/SVGElement.js',\n import HTMLElementUtility from '../../../src/nodes/html-element/HTMLElementUtility.js',\n import { beforeEach, describe, it, expect, vi, afterEach } from 'vitest',\n@@ -15,7 +13,9 @@ describe('SVGElement', () => {\n \tlet element: SVGElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = <SVGElement>document.createElementNS('http://www.w3.org/2000/svg', 'unknown'),\n \t}),\n@@ -126,20 +126,20 @@ describe('SVGElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/nodes/svg-graphics-element/SVGGraphicsElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/svg-graphics-element/SVGGraphicsElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/svg-graphics-element/SVGGraphicsElement.test.ts",
          "diff": "@@ -13,7 +13,9 @@ describe('SVGGraphicsElement', () => {\n \tlet element: SVGGraphicsElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElementNS('http://www.w3.org/2000/svg', 'g'),\n \t}),\n@@ -32,20 +34,20 @@ describe('SVGGraphicsElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}\n@@ -129,38 +131,38 @@ describe('SVGGraphicsElement', () => {\n \t\t\telement.setAttribute('transform', 'matrix(1 2 3 4 5 6) translate(10 20)'),\n \n \t\t\texpect(element.transform.baseVal.numberOfItems).toBe(2),\n-\t\t\texpect(element.transform.baseVal.getItem(0).type).toBe(SVGTransformTypeEnum.matrix),\n-\t\t\texpect(element.transform.baseVal.getItem(0).matrix.a).toBe(1),\n-\t\t\texpect(element.transform.baseVal.getItem(0).matrix.b).toBe(2),\n-\t\t\texpect(element.transform.baseVal.getItem(0).matrix.c).toBe(3),\n-\t\t\texpect(element.transform.baseVal.getItem(0).matrix.d).toBe(4),\n-\t\t\texpect(element.transform.baseVal.getItem(0).matrix.e).toBe(5),\n-\t\t\texpect(element.transform.baseVal.getItem(0).matrix.f).toBe(6),\n-\n-\t\t\texpect(element.transform.baseVal.getItem(1).type).toBe(SVGTransformTypeEnum.translate),\n-\t\t\texpect(element.transform.baseVal.getItem(1).matrix.a).toBe(1),\n-\t\t\texpect(element.transform.baseVal.getItem(1).matrix.b).toBe(0),\n-\t\t\texpect(element.transform.baseVal.getItem(1).matrix.c).toBe(0),\n-\t\t\texpect(element.transform.baseVal.getItem(1).matrix.d).toBe(1),\n-\t\t\texpect(element.transform.baseVal.getItem(1).matrix.e).toBe(10),\n-\t\t\texpect(element.transform.baseVal.getItem(1).matrix.f).toBe(20),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.type).toBe(SVGTransformTypeEnum.matrix),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.matrix.a).toBe(1),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.matrix.b).toBe(2),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.matrix.c).toBe(3),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.matrix.d).toBe(4),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.matrix.e).toBe(5),\n+\t\t\texpect(element.transform.baseVal.getItem(0)!.matrix.f).toBe(6),\n+\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.type).toBe(SVGTransformTypeEnum.translate),\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.matrix.a).toBe(1),\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.matrix.b).toBe(0),\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.matrix.c).toBe(0),\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.matrix.d).toBe(1),\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.matrix.e).toBe(10),\n+\t\t\texpect(element.transform.baseVal.getItem(1)!.matrix.f).toBe(20),\n \n \t\t\texpect(element.transform.animVal.numberOfItems).toBe(2),\n-\t\t\texpect(element.transform.animVal.getItem(0).type).toBe(SVGTransformTypeEnum.matrix),\n-\t\t\texpect(element.transform.animVal.getItem(0).matrix.a).toBe(1),\n-\t\t\texpect(element.transform.animVal.getItem(0).matrix.b).toBe(2),\n-\t\t\texpect(element.transform.animVal.getItem(0).matrix.c).toBe(3),\n-\t\t\texpect(element.transform.animVal.getItem(0).matrix.d).toBe(4),\n-\t\t\texpect(element.transform.animVal.getItem(0).matrix.e).toBe(5),\n-\t\t\texpect(element.transform.animVal.getItem(0).matrix.f).toBe(6),\n-\n-\t\t\texpect(element.transform.animVal.getItem(1).type).toBe(SVGTransformTypeEnum.translate),\n-\t\t\texpect(element.transform.animVal.getItem(1).matrix.a).toBe(1),\n-\t\t\texpect(element.transform.animVal.getItem(1).matrix.b).toBe(0),\n-\t\t\texpect(element.transform.animVal.getItem(1).matrix.c).toBe(0),\n-\t\t\texpect(element.transform.animVal.getItem(1).matrix.d).toBe(1),\n-\t\t\texpect(element.transform.animVal.getItem(1).matrix.e).toBe(10),\n-\t\t\texpect(element.transform.animVal.getItem(1).matrix.f).toBe(20),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.type).toBe(SVGTransformTypeEnum.matrix),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.matrix.a).toBe(1),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.matrix.b).toBe(2),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.matrix.c).toBe(3),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.matrix.d).toBe(4),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.matrix.e).toBe(5),\n+\t\t\texpect(element.transform.animVal.getItem(0)!.matrix.f).toBe(6),\n+\n+\t\t\texpect(element.transform.animVal.getItem(1)!.type).toBe(SVGTransformTypeEnum.translate),\n+\t\t\texpect(element.transform.animVal.getItem(1)!.matrix.a).toBe(1),\n+\t\t\texpect(element.transform.animVal.getItem(1)!.matrix.b).toBe(0),\n+\t\t\texpect(element.transform.animVal.getItem(1)!.matrix.c).toBe(0),\n+\t\t\texpect(element.transform.animVal.getItem(1)!.matrix.d).toBe(1),\n+\t\t\texpect(element.transform.animVal.getItem(1)!.matrix.e).toBe(10),\n+\t\t\texpect(element.transform.animVal.getItem(1)!.matrix.f).toBe(20),\n \n \t\t\tconst transform = new window.SVGTransform(PropertySymbol.illegalConstructor, window),\n "
        },
        {
          "filename": "packages/happy-dom/test/nodes/svg-svg-element/SVGSVGElement.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/nodes/svg-svg-element/SVGSVGElement.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/nodes/svg-svg-element/SVGSVGElement.test.ts",
          "diff": "@@ -25,7 +25,9 @@ describe('SVGSVGElement', () => {\n \tlet element: SVGSVGElement,\n \n \tbeforeEach(() => {\n-\t\twindow = new Window(),\n+\t\twindow = new Window({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tdocument = window.document,\n \t\telement = document.createElementNS('http://www.w3.org/2000/svg', 'svg'),\n \t}),\n@@ -53,20 +55,20 @@ describe('SVGSVGElement', () => {\n \t\tdescribe(`get on${event}()`, () => {\n \t\t\tit('Returns the event listener.', () => {\n \t\t\t\telement.setAttribute(`on${event}`, 'window.test = 1'),\n-\t\t\t\texpect(element[`on${event}`]).toBeTypeOf('function'),\n-\t\t\t\telement[`on${event}`](new Event(event)),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>element)[`on${event}`]).toBeTypeOf('function'),\n+\t\t\t\t(<any>element)[`on${event}`](new Event(event)),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \n \t\tdescribe(`set on${event}()`, () => {\n \t\t\tit('Sets the event listener.', () => {\n-\t\t\t\telement[`on${event}`] = () => {\n-\t\t\t\t\twindow['test'] = 1,\n+\t\t\t\t(<any>element)[`on${event}`] = () => {\n+\t\t\t\t\t(<any>window)['test'] = 1,\n \t\t\t\t},\n \t\t\t\telement.dispatchEvent(new Event(event)),\n \t\t\t\texpect(element.getAttribute(`on${event}`)).toBe(null),\n-\t\t\t\texpect(window['test']).toBe(1),\n+\t\t\t\texpect((<any>window)['test']).toBe(1),\n \t\t\t}),\n \t\t}),\n \t}"
        },
        {
          "filename": "packages/happy-dom/test/window/BrowserWindow.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/window/BrowserWindow.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/window/BrowserWindow.test.ts",
          "diff": "@@ -58,7 +58,9 @@ describe('BrowserWindow', () => {\n \tlet document: Document,\n \n \tbeforeEach(() => {\n-\t\tbrowser = new Browser(),\n+\t\tbrowser = new Browser({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t\tbrowserPage = browser.newPage(),\n \t\tbrowserFrame = browserPage.mainFrame,\n \t\twindow = browserFrame.window,\n@@ -75,9 +77,58 @@ describe('BrowserWindow', () => {\n \t\tvi.restoreAllMocks(),\n \t}),\n \n+\tdescribe('constructor()', () => {\n+\t\tit('Outputs a warning if \"enableJavaScriptEvaluation\" is enabled in an environment with code generation enabled.', () => {\n+\t\t\tconst consoleWarn: string[] = [],\n+\t\t\tvi.spyOn(globalThis.console, 'warn').mockImplementation((...args: any[]) =>\n+\t\t\t\tconsoleWarn.push(args.join(' '))\n+\t\t\t),\n+\t\t\tconst browser = new Browser({ settings: { enableJavaScriptEvaluation: true } }),\n+\n+\t\t\tbrowser.newPage(),\n+\n+\t\t\texpect(consoleWarn).toEqual([\n+\t\t\t\t'\\nWarning! Happy DOM has JavaScript evaluation enabled and is running in an environment with code generation from strings (eval) enabled at process level.' +\n+\t\t\t\t\t'\\n\\nA VM Context is not an isolated environment, and if you run untrusted code you are at risk of RCE (Remote Code Execution) attacks. The attacker can use code generation to escape the VM and run code at process level.' +\n+\t\t\t\t\t'\\n\\nIt is recommended to disable code generation at process level by running node with the \"--disallow-code-generation-from-strings\" flag enabled when Javascript evaluation is enabled in Happy DOM.' +\n+\t\t\t\t\t' You can suppress this warning by setting \"suppressCodeGenerationFromStringsWarning\" to \"true\" at your own risk.' +\n+\t\t\t\t\t'\\n\\nFor more information, see https://github.com/capricorn86/happy-dom/wiki/Code-Generation-From-Strings-Warning\\n\\n'\n+\t\t\t]),\n+\t\t}),\n+\n+\t\tit('Does not output a warning if \"enableJavaScriptEvaluation\" is disabled.', () => {\n+\t\t\tconst consoleWarn: string[] = [],\n+\t\t\tvi.spyOn(globalThis.console, 'warn').mockImplementation((...args: any[]) =>\n+\t\t\t\tconsoleWarn.push(args.join(' '))\n+\t\t\t),\n+\t\t\tconst browser = new Browser(),\n+\n+\t\t\tnew BrowserWindow(browser.newPage().mainFrame),\n+\n+\t\t\texpect(consoleWarn.length).toBe(0),\n+\t\t}),\n+\n+\t\tit('Does not output a warning if \"suppressCodeGenerationFromStringsWarning\" is enabled.', () => {\n+\t\t\tconst consoleWarn: string[] = [],\n+\t\t\tvi.spyOn(globalThis.console, 'warn').mockImplementation((...args: any[]) =>\n+\t\t\t\tconsoleWarn.push(args.join(' '))\n+\t\t\t),\n+\t\t\tconst browser = new Browser({\n+\t\t\t\tsettings: {\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n+\t\t\t\t\tsuppressCodeGenerationFromStringsWarning: true\n+\t\t\t\t}\n+\t\t\t}),\n+\n+\t\t\tnew BrowserWindow(browser.newPage().mainFrame),\n+\n+\t\t\texpect(consoleWarn.length).toBe(0),\n+\t\t}),\n+\t}),\n+\n \tdescribe('get happyDOM()', () => {\n \t\tit('Returns \"undefined\" for an attached browser.', () => {\n-\t\t\texpect(browserFrame.window['happyDOM']).toBeUndefined(),\n+\t\t\texpect((<any>browserFrame.window)['happyDOM']).toBeUndefined(),\n \t\t}),\n \t}),\n \n@@ -114,18 +165,22 @@ describe('BrowserWindow', () => {\n \t}),\n \n \tdescribe('get Function()', () => {\n-\t\tit('Is not the same as (() => {}).constructorr when inside the VM.', () => {\n+\t\tit('Is not the same as (() => {}).constructor when inside the VM.', () => {\n \t\t\texpect(typeof window.Function).toBe('function'),\n \t\t\texpect((() => {}).constructor).not.toBe(window.Function),\n \t\t}),\n \n \t\tit('Is the same as (() => {}).constructor when using eval().', () => {\n-\t\t\texpect(window.eval('(() => {}).constructor === window.Function')).toBe(true),\n+\t\t\texpect(window.Function('return (() => {}).constructor === window.Function')()).toBe(true),\n+\t\t}),\n+\n+\t\tit('Does not execute unsafe code using import', () => {\n+\t\t\texpect(() => window.Function('return import(\"process\")')()).rejects.toThrow(),\n \t\t}),\n \t}),\n \n \tdescribe('get Array()', () => {\n-\t\tit('Is not the same as [].constructorr when inside the VM.', () => {\n+\t\tit('Is not the same as [].constructor when inside the VM.', () => {\n \t\t\texpect(typeof window.Array).toBe('function'),\n \t\t\texpect([].constructor).not.toBe(window.Array),\n \t\t}),\n@@ -182,15 +237,15 @@ describe('BrowserWindow', () => {\n \tdescribe('get {ElementClass}()', () => {\n \t\tfor (const tagName of Object.keys(HTMLElementConfig)) {\n \t\t\tit(`Exposes the HTML element class \"${HTMLElementConfig[tagName].className}\" for tag name \"${tagName}\"`, () => {\n-\t\t\t\texpect(window[HTMLElementConfig[tagName].className].name).toBe(\n+\t\t\t\texpect((<any>window)[HTMLElementConfig[tagName].className].name).toBe(\n \t\t\t\t\tHTMLElementConfig[tagName].className\n \t\t\t\t),\n \t\t\t}),\n \t\t}\n \n \t\tfor (const tagName of Object.keys(SVGElementConfig)) {\n \t\t\tit(`Exposes the SVG element class \"${SVGElementConfig[tagName]}\" for tag name \"${tagName}\"`, () => {\n-\t\t\t\texpect(window[SVGElementConfig[tagName].className].name).toBe(\n+\t\t\t\texpect((<any>window)[SVGElementConfig[tagName].className].name).toBe(\n \t\t\t\t\tSVGElementConfig[tagName].className\n \t\t\t\t),\n \t\t\t}),\n@@ -205,7 +260,7 @@ describe('BrowserWindow', () => {\n \n \tdescribe('get process()', () => {\n \t\tit('Returns undefined.', () => {\n-\t\t\texpect(window['process']).toBeUndefined(),\n+\t\t\texpect((<any>window)['process']).toBeUndefined(),\n \t\t}),\n \t}),\n \n@@ -283,7 +338,7 @@ describe('BrowserWindow', () => {\n \t\t\t},\n \n \t\t\tfor (const propertyKey in referenceValues) {\n-\t\t\t\texpect(window.navigator[propertyKey]).toEqual(referenceValues[propertyKey]),\n+\t\t\t\texpect((<any>window.navigator)[propertyKey]).toEqual((<any>referenceValues)[propertyKey]),\n \t\t\t}\n \t\t}),\n \t}),\n@@ -408,7 +463,7 @@ describe('BrowserWindow', () => {\n \t\t\t\treturn eval('variable'),\n \t\t\t})()`),\n \t\t\texpect(result).toBe('locally defined'),\n-\t\t\texpect(window['variable']).toBe('globally defined'),\n+\t\t\texpect((<any>window)['variable']).toBe('globally defined'),\n \t\t}),\n \n \t\tit('Respects indirect eval.', () => {\n@@ -419,12 +474,12 @@ describe('BrowserWindow', () => {\n \t\t\t\treturn (0,eval)('variable'),\n \t\t\t})()`),\n \t\t\texpect(result).toBe('globally defined'),\n-\t\t\texpect(window['variable']).toBe('globally defined'),\n+\t\t\texpect((<any>window)['variable']).toBe('globally defined'),\n \t\t}),\n \n \t\tit('Has access to the window and document.', () => {\n \t\t\twindow.eval(`window.variable = document.characterSet,`),\n-\t\t\texpect(window['variable']).toBe('UTF-8'),\n+\t\t\texpect((<any>window)['variable']).toBe('UTF-8'),\n \t\t}),\n \t}),\n \n@@ -1751,8 +1806,10 @@ describe('BrowserWindow', () => {\n \t\t\t},\n \t\t\tlet request: Request | null = null,\n \n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = <Request>this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = <Request>(<any>this).request,\n \t\t\t\treturn Promise.resolve(expectedResponse),\n \t\t\t}),\n \n@@ -1767,7 +1824,7 @@ describe('BrowserWindow', () => {\n \tfor (const functionName of ['scroll', 'scrollTo']) {\n \t\tdescribe(`${functionName}()`, () => {\n \t\t\tit('Sets the properties scrollTop, scrollLeft, scrollY, scrollX, pageXOffset and pageYOffset', () => {\n-\t\t\t\twindow[functionName](50, 60),\n+\t\t\t\t(<any>window)[functionName](50, 60),\n \t\t\t\texpect(window.document.documentElement.scrollLeft).toBe(50),\n \t\t\t\texpect(window.document.documentElement.scrollTop).toBe(60),\n \t\t\t\texpect(window.pageXOffset).toBe(50),\n@@ -1777,7 +1834,7 @@ describe('BrowserWindow', () => {\n \t\t\t}),\n \n \t\t\tit('Sets the properties scrollTop, scrollLeft, scrollY, scrollX, pageXOffset and pageYOffset using object.', () => {\n-\t\t\t\twindow[functionName]({ left: 50, top: 60 }),\n+\t\t\t\t(<any>window)[functionName]({ left: 50, top: 60 }),\n \t\t\t\texpect(window.document.documentElement.scrollLeft).toBe(50),\n \t\t\t\texpect(window.document.documentElement.scrollTop).toBe(60),\n \t\t\t\texpect(window.pageXOffset).toBe(50),\n@@ -1787,7 +1844,7 @@ describe('BrowserWindow', () => {\n \t\t\t}),\n \n \t\t\tit('Sets only the property scrollTop, pageYOffset, and scrollY', () => {\n-\t\t\t\twindow[functionName]({ top: 60 }),\n+\t\t\t\t(<any>window)[functionName]({ top: 60 }),\n \t\t\t\texpect(window.document.documentElement.scrollLeft).toBe(0),\n \t\t\t\texpect(window.document.documentElement.scrollTop).toBe(60),\n \t\t\t\texpect(window.pageXOffset).toBe(0),\n@@ -1797,7 +1854,7 @@ describe('BrowserWindow', () => {\n \t\t\t}),\n \n \t\t\tit('Sets only the property scrollLeft, pageXOffset, and scrollX', () => {\n-\t\t\t\twindow[functionName]({ left: 60 }),\n+\t\t\t\t(<any>window)[functionName]({ left: 60 }),\n \t\t\t\texpect(window.document.documentElement.scrollLeft).toBe(60),\n \t\t\t\texpect(window.document.documentElement.scrollTop).toBe(0),\n \t\t\t\texpect(window.document.documentElement.scrollLeft).toBe(60),\n@@ -1809,7 +1866,7 @@ describe('BrowserWindow', () => {\n \t\t\t}),\n \n \t\t\tit('Sets the properties scrollTop, scrollLeft, scrollY, scrollX, pageXOffset and pageYOffset with animation.', async () => {\n-\t\t\t\twindow[functionName]({ left: 50, top: 60, behavior: 'smooth' }),\n+\t\t\t\t(<any>window)[functionName]({ left: 50, top: 60, behavior: 'smooth' }),\n \t\t\t\texpect(window.document.documentElement.scrollLeft).toBe(0),\n \t\t\t\texpect(window.document.documentElement.scrollTop).toBe(0),\n \t\t\t\texpect(window.pageXOffset).toBe(0),\n@@ -1826,7 +1883,7 @@ describe('BrowserWindow', () => {\n \t\t\t}),\n \n \t\t\tit('Throws an exception if the there is only one argument and it is not an object.', () => {\n-\t\t\t\texpect(() => window[functionName](10)).toThrow(\n+\t\t\t\texpect(() => (<any>window)[functionName](10)).toThrow(\n \t\t\t\t\tnew TypeError(\n \t\t\t\t\t\t`Failed to execute '${functionName}' on 'Window': The provided value is not of type 'ScrollToOptions'.`\n \t\t\t\t\t)\n@@ -1930,15 +1987,16 @@ describe('BrowserWindow', () => {\n \t\t\t\tlet loadEventCurrentTarget: EventTarget | null = null,\n \n \t\t\t\tvi.spyOn(ResourceFetch.prototype, 'fetch').mockImplementation(async function (\n+\t\t\t\t\tthis: ResourceFetch,\n \t\t\t\t\turl: string | URL\n \t\t\t\t) {\n \t\t\t\t\tif ((<string>url).endsWith('.css')) {\n-\t\t\t\t\t\tresourceFetchCSSWindow = this.window,\n+\t\t\t\t\t\tresourceFetchCSSWindow = (<any>this).window,\n \t\t\t\t\t\tresourceFetchCSSURL = <string>url,\n \t\t\t\t\t\treturn { content: cssResponse, virtualServerFile: null },\n \t\t\t\t\t}\n \n-\t\t\t\t\tresourceFetchJSWindow = this.window,\n+\t\t\t\t\tresourceFetchJSWindow = (<any>this).window,\n \t\t\t\t\tresourceFetchJSURL = <string>url,\n \t\t\t\t\treturn { content: jsResponse, virtualServerFile: null },\n \t\t\t\t}),\n@@ -1973,7 +2031,7 @@ describe('BrowserWindow', () => {\n \t\t\t\t\texpect(document.styleSheets.length).toBe(1),\n \t\t\t\t\texpect(document.styleSheets[0].cssRules[0].cssText).toBe(cssResponse),\n \n-\t\t\t\t\texpect(window['test']).toBe('test'),\n+\t\t\t\t\texpect((<any>window)['test']).toBe('test'),\n \n \t\t\t\t\tresolve(null),\n \t\t\t\t}, 20),\n@@ -2185,8 +2243,10 @@ describe('BrowserWindow', () => {\n \t\t\tconst html = '<html><body>Test</body></html>',\n \t\t\tlet request: Request | null = null,\n \n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = <Request>this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = <Request>(<any>this).request,\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\ttext: () => new Promise((resolve) => setTimeout(() => resolve(html)))\n \t\t\t\t}),\n@@ -2267,8 +2327,10 @@ describe('BrowserWindow', () => {\n \t\t\tconst html = '<html><body>Test</body></html>',\n \t\t\tlet request: Request | null = null,\n \n-\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (): Promise<Response> {\n-\t\t\t\trequest = <Request>this.request,\n+\t\t\tvi.spyOn(Fetch.prototype, 'send').mockImplementation(function (\n+\t\t\t\tthis: Fetch\n+\t\t\t): Promise<Response> {\n+\t\t\t\trequest = <Request>(<any>this).request,\n \t\t\t\treturn Promise.resolve(<Response>{\n \t\t\t\t\ttext: () => new Promise((resolve) => setTimeout(() => resolve(html)))\n \t\t\t\t}),"
        },
        {
          "filename": "packages/happy-dom/test/window/DetachedWindowAPI.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/window/DetachedWindowAPI.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/window/DetachedWindowAPI.test.ts",
          "diff": "@@ -21,16 +21,16 @@ describe('DetachedWindowAPI', () => {\n \n \tdescribe('get settings()', () => {\n \t\tit('Returns browser settings.', () => {\n-\t\t\tconst window = new Window({ settings: { disableJavaScriptEvaluation: true } }),\n+\t\t\tconst window = new Window({ settings: { enableJavaScriptEvaluation: true } }),\n \t\t\texpect(window.happyDOM?.settings).toEqual({\n \t\t\t\t...DefaultBrowserSettings,\n-\t\t\t\tdisableJavaScriptEvaluation: true\n+\t\t\t\tenableJavaScriptEvaluation: true\n \t\t\t}),\n \t\t}),\n \n \t\tit('Supports editing setting properties.', () => {\n-\t\t\tconst window = new Window({ settings: { disableJavaScriptEvaluation: true } }),\n-\t\t\t(<DetachedWindowAPI>window.happyDOM).settings.disableJavaScriptEvaluation = false,\n+\t\t\tconst window = new Window({ settings: { enableJavaScriptEvaluation: true } }),\n+\t\t\t(<DetachedWindowAPI>window.happyDOM).settings.enableJavaScriptEvaluation = false,\n \t\t\texpect(window.happyDOM?.settings).toEqual(DefaultBrowserSettings),\n \t\t}),\n \t}),"
        },
        {
          "filename": "packages/happy-dom/test/window/GlobalWindow.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/window/GlobalWindow.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/window/GlobalWindow.test.ts",
          "diff": "@@ -1,12 +1,14 @@\n import GlobalWindow from '../../src/window/GlobalWindow.js',\n-import Window from '../../src/window/Window.js',\n+import * as PropertySymbol from '../../src/PropertySymbol.js',\n import { beforeEach, describe, it, expect } from 'vitest',\n \n describe('GlobalWindow', () => {\n-\tlet window: Window,\n+\tlet window: GlobalWindow,\n \n \tbeforeEach(() => {\n-\t\twindow = new GlobalWindow(),\n+\t\twindow = new GlobalWindow({\n+\t\t\tsettings: { enableJavaScriptEvaluation: true, suppressCodeGenerationFromStringsWarning: true }\n+\t\t}),\n \t}),\n \n \tdescribe('get Object()', () => {\n@@ -15,9 +17,9 @@ describe('GlobalWindow', () => {\n \t\t}),\n \n \t\tit('Is the same as {}.constructor when using eval().', () => {\n-\t\t\tglobal['globalWindow'] = window,\n+\t\t\t(<any>global)['globalWindow'] = window,\n \t\t\texpect(window.eval('({}).constructor === globalWindow.Object')).toBe(true),\n-\t\t\tdelete global['globalWindow'],\n+\t\t\tdelete (<any>global)['globalWindow'],\n \t\t}),\n \t}),\n \n@@ -27,9 +29,11 @@ describe('GlobalWindow', () => {\n \t\t}),\n \n \t\tit('Is the same as (() => {}).constructor when using eval().', () => {\n-\t\t\tglobal['globalWindow'] = window,\n-\t\t\texpect(window.eval('(() => {}).constructor === globalWindow.Function')).toBe(true),\n-\t\t\tdelete global['globalWindow'],\n+\t\t\texpect(window.Function('return (() => {}).constructor === globalThis.Function')()).toBe(true),\n+\t\t}),\n+\n+\t\tit('Does not execute unsafe code using import', () => {\n+\t\t\texpect(() => window.Function('return import(\"process\")')()).rejects.toThrow(),\n \t\t}),\n \t}),\n \n@@ -39,9 +43,9 @@ describe('GlobalWindow', () => {\n \t\t}),\n \n \t\tit('Is the same as [].constructor when using eval().', () => {\n-\t\t\tglobal['globalWindow'] = window,\n+\t\t\t(<any>global)['globalWindow'] = window,\n \t\t\texpect(window.eval('[].constructor === globalWindow.Array')).toBe(true),\n-\t\t\tdelete global['globalWindow'],\n+\t\t\tdelete (<any>global)['globalWindow'],\n \t\t}),\n \t}),\n \n@@ -55,9 +59,9 @@ describe('GlobalWindow', () => {\n \t\t\t})()`),\n \n \t\t\texpect(result).toBe('locally defined'),\n-\t\t\texpect(globalThis['variable']).toBe('globally defined'),\n+\t\t\texpect((<any>globalThis)['variable']).toBe('globally defined'),\n \n-\t\t\tdelete globalThis['variable'],\n+\t\t\tdelete (<any>globalThis)['variable'],\n \t\t}),\n \n \t\tit('Respects indirect eval.', () => {\n@@ -69,9 +73,26 @@ describe('GlobalWindow', () => {\n \t\t\t})()`),\n \n \t\t\texpect(result).toBe('globally defined'),\n-\t\t\texpect(globalThis['variable']).toBe('globally defined'),\n+\t\t\texpect((<any>globalThis)['variable']).toBe('globally defined'),\n+\n+\t\t\tdelete (<any>globalThis)['variable'],\n+\t\t}),\n+\t}),\n+\n+\tdescribe('[PropertySymbol.evaluateScript]()', () => {\n+\t\tit('Evaluates script.', () => {\n+\t\t\tconst result = window[PropertySymbol.evaluateScript]('1 + 1,', {\n+\t\t\t\tfilename: 'filename.js'\n+\t\t\t}),\n+\t\t\texpect(result).toBe(2),\n+\t\t}),\n \n-\t\t\tdelete globalThis['variable'],\n+\t\tit('Evaluates code from script elements', () => {\n+\t\t\tconst script = window.document.createElement('script'),\n+\t\t\tscript.textContent = 'globalThis[\"$scriptResult\"] = 1 + 1,',\n+\t\t\twindow.document.body.appendChild(script),\n+\t\t\texpect((<any>globalThis)['$scriptResult']).toBe(2),\n+\t\t\tdelete (<any>globalThis)['$scriptResult'],\n \t\t}),\n \t}),\n "
        },
        {
          "filename": "packages/happy-dom/test/window/Window.test.ts",
          "old_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/c80a08f30ad97b04fbb251ab11b87cb9d5706207/packages/happy-dom/test/window/Window.test.ts",
          "new_url": "https://raw.githubusercontent.com/capricorn86/happy-dom/819d15ba289495439eda8be360d92a614ce22405/packages/happy-dom/test/window/Window.test.ts",
          "diff": "@@ -149,6 +149,7 @@ describe('Window', () => {\n \t\t\t\tconsole: globalThis.console,\n \t\t\t\tsettings: {\n \t\t\t\t\tdisableJavaScriptEvaluation: true,\n+\t\t\t\t\tenableJavaScriptEvaluation: true,\n \t\t\t\t\tnavigator: {\n \t\t\t\t\t\tuserAgent: 'test'\n \t\t\t\t\t},\n@@ -169,6 +170,7 @@ describe('Window', () => {\n \t\t\t\tVirtualConsolePrinter\n \t\t\t),\n \t\t\texpect(windowWithOptions.happyDOM?.settings.disableJavaScriptEvaluation).toBe(true),\n+\t\t\texpect(windowWithOptions.happyDOM?.settings.enableJavaScriptEvaluation).toBe(true),\n \t\t\texpect(windowWithOptions.happyDOM?.settings.disableJavaScriptFileLoading).toBe(false),\n \t\t\texpect(windowWithOptions.happyDOM?.settings.disableCSSFileLoading).toBe(false),\n \t\t\texpect(windowWithOptions.happyDOM?.settings.disableIframePageLoading).toBe(false),\n@@ -191,6 +193,7 @@ describe('Window', () => {\n \t\t\t\tVirtualConsolePrinter\n \t\t\t),\n \t\t\texpect(windowWithoutOptions.happyDOM?.settings.disableJavaScriptEvaluation).toBe(false),\n+\t\t\texpect(windowWithoutOptions.happyDOM?.settings.enableJavaScriptEvaluation).toBe(false),\n \t\t\texpect(windowWithoutOptions.happyDOM?.settings.disableJavaScriptFileLoading).toBe(false),\n \t\t\texpect(windowWithoutOptions.happyDOM?.settings.disableCSSFileLoading).toBe(false),\n \t\t\texpect(windowWithoutOptions.happyDOM?.settings.disableIframePageLoading).toBe(false),"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62158",
        "https://github.com/frappe/lms/commit/78640561f558a6c7396f8be48874f79a54f03420"
      ],
      "repo": "lms",
      "commit_hash": "78640561f558a6c7396f8be48874f79a54f03420",
      "commit_message": "fix: private file uploads in assignment text editor",
      "files_changed": [
        {
          "filename": "frappe-ui",
          "old_url": "https://raw.githubusercontent.com/frappe/lms/f72631a262d1dadd8789a16927b7b06d230f1af1/frappe-ui",
          "new_url": "https://raw.githubusercontent.com/frappe/lms/78640561f558a6c7396f8be48874f79a54f03420/frappe-ui",
          "diff": "@@ -1 +1 @@\n-Subproject commit c9a0fc937cc897864857271b3708a0c675379015\n+Subproject commit 8b85a70d21215e90ce9b3a0c3b7fccc5bcb21c79"
        },
        {
          "filename": "frontend/package.json",
          "old_url": "https://raw.githubusercontent.com/frappe/lms/f72631a262d1dadd8789a16927b7b06d230f1af1/frontend/package.json",
          "new_url": "https://raw.githubusercontent.com/frappe/lms/78640561f558a6c7396f8be48874f79a54f03420/frontend/package.json",
          "diff": "@@ -32,7 +32,7 @@\n     \"dayjs\": \"^1.11.6\",\n     \"dompurify\": \"^3.2.6\",\n     \"feather-icons\": \"^4.28.0\",\n-    \"frappe-ui\": \"^0.1.200\",\n+    \"frappe-ui\": \"^0.1.201\",\n     \"highlight.js\": \"^11.11.1\",\n     \"lucide-vue-next\": \"^0.383.0\",\n     \"markdown-it\": \"^14.0.0\","
        },
        {
          "filename": "frontend/src/components/Assignment.vue",
          "old_url": "https://raw.githubusercontent.com/frappe/lms/f72631a262d1dadd8789a16927b7b06d230f1af1/frontend/src/components/Assignment.vue",
          "new_url": "https://raw.githubusercontent.com/frappe/lms/78640561f558a6c7396f8be48874f79a54f03420/frontend/src/components/Assignment.vue",
          "diff": "@@ -130,6 +130,9 @@\n \t\t\t\t\t\t@change=\"(val) => (answer = val)\"\n \t\t\t\t\t\t:editable=\"true\"\n \t\t\t\t\t\t:fixedMenu=\"true\"\n+\t\t\t\t\t\t:uploadArgs=\"{\n+\t\t\t\t\t\t\tprivate: true,\n+\t\t\t\t\t\t}\"\n \t\t\t\t\t\teditorClass=\"prose-sm max-w-none border-b border-x bg-surface-gray-2 rounded-b-md py-1 px-2 min-h-[7rem]\"\n \t\t\t\t\t/>\n \t\t\t\t</div>"
        },
        {
          "filename": "frontend/yarn.lock",
          "old_url": "https://raw.githubusercontent.com/frappe/lms/f72631a262d1dadd8789a16927b7b06d230f1af1/frontend/yarn.lock",
          "new_url": "https://raw.githubusercontent.com/frappe/lms/78640561f558a6c7396f8be48874f79a54f03420/frontend/yarn.lock",
          "diff": " "
        },
        {
          "filename": "lms/lms/doctype/lms_assignment_submission/lms_assignment_submission.py",
          "old_url": "https://raw.githubusercontent.com/frappe/lms/f72631a262d1dadd8789a16927b7b06d230f1af1/lms/lms/doctype/lms_assignment_submission/lms_assignment_submission.py",
          "new_url": "https://raw.githubusercontent.com/frappe/lms/78640561f558a6c7396f8be48874f79a54f03420/lms/lms/doctype/lms_assignment_submission/lms_assignment_submission.py",
          "diff": "@@ -14,6 +14,9 @@ def validate(self):\n \t\tself.validate_url()\n \t\tself.validate_status()\n \n+\tdef on_update(self):\n+\t\tself.validate_private_attachments()\n+\n \tdef validate_duplicates(self):\n \t\tif frappe.db.exists(\n \t\t\t\"LMS Assignment Submission\",\n@@ -34,6 +37,30 @@ def validate_status(self):\n \t\t\tif doc_before_save.status != self.status or doc_before_save.comments != self.comments:\n \t\t\t\tself.trigger_update_notification()\n \n+\tdef validate_private_attachments(self):\n+\t\tif self.type == \"Text\":\n+\t\t\tfrom bs4 import BeautifulSoup\n+\n+\t\t\tsoup = BeautifulSoup(self.answer, \"html.parser\")\n+\t\t\timages = soup.find_all(\"img\")\n+\t\t\tself.attach_images_to_document(images)\n+\n+\tdef attach_images_to_document(self, images):\n+\t\tfor img in images:\n+\t\t\tsrc = img.get(\"src\", \"\")\n+\t\t\tif src.startswith(\"/private/files/\"):\n+\t\t\t\tfile_name = frappe.db.get_value(\"File\", {\"file_url\": src}, \"name\")\n+\t\t\t\tif file_name:\n+\t\t\t\t\tfrappe.db.set_value(\n+\t\t\t\t\t\t\"File\",\n+\t\t\t\t\t\tfile_name,\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\"attached_to_doctype\": self.doctype,\n+\t\t\t\t\t\t\t\"attached_to_name\": self.name,\n+\t\t\t\t\t\t\t\"attached_to_field\": \"answer\",\n+\t\t\t\t\t\t},\n+\t\t\t\t\t)\n+\n \tdef trigger_update_notification(self):\n \t\tnotification = frappe._dict(\n \t\t\t{"
        },
        {
          "filename": "yarn.lock",
          "old_url": "https://raw.githubusercontent.com/frappe/lms/f72631a262d1dadd8789a16927b7b06d230f1af1/yarn.lock",
          "new_url": "https://raw.githubusercontent.com/frappe/lms/78640561f558a6c7396f8be48874f79a54f03420/yarn.lock",
          "diff": " "
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62170",
        "https://github.com/rathena/rathena/commit/af2f3ba33fc03dc6dd510f8cfe84cd9185af748d"
      ],
      "repo": "rathena",
      "commit_hash": "af2f3ba33fc03dc6dd510f8cfe84cd9185af748d",
      "commit_message": "Fixed a possible crash with RODEX  Thanks to @rabbit-lunatic",
      "files_changed": [
        {
          "filename": "src/map/clif.cpp",
          "old_url": "https://raw.githubusercontent.com/rathena/rathena/6b5c231ff08faa4027bb3b1806295b889c5ae9e0/src/map/clif.cpp",
          "new_url": "https://raw.githubusercontent.com/rathena/rathena/af2f3ba33fc03dc6dd510f8cfe84cd9185af748d/src/map/clif.cpp",
          "diff": "@@ -16715,7 +16715,17 @@ void clif_mail_removeitem( map_session_data* sd, bool success, int32 index, int3\n \t\t\tbreak,\n \t\t}\n \n-\t\ttotal += sd->mail.item[i].amount * ( sd->inventory_data[sd->mail.item[i].index]->weight / 10 ),\n+\t\tif( sd->mail.item[i].index < 0 || sd->mail.item[i].index >= MAX_INVENTORY ){\n+\t\t\tcontinue,\n+\t\t}\n+\n+\t\titem_data* id = sd->inventory_data[sd->mail.item[i].index],\n+\n+\t\tif( id == nullptr ){\n+\t\t\tcontinue,\n+\t\t}\n+\n+\t\ttotal += sd->mail.item[i].amount * ( id->weight / 10 ),\n \t}\n \n \tp.weight = total,"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-59836",
        "https://github.com/siderolabs/omni/commit/1396083f766a1b0380e9949968d7fc17b7afecaa"
      ],
      "repo": "omni",
      "commit_hash": "1396083f766a1b0380e9949968d7fc17b7afecaa",
      "commit_message": "fix: fix the order in the grpc interceptor chain  Change the interceptor order to move the Prometheus metrics collector earlier, so that we can get metrics for the calls that fail early. Related to siderolabs/omni#1606.  Additionally, ensure that `get` access to the `AuthConfig` resource does not require a GRPC signature.  Signed-off-by: Utku Ozdemir <utku.ozdemir@siderolabs.com> (cherry picked from commit 5beb24f7d04e2e2469f796a2f32cf3a56b087528)",
      "files_changed": [
        {
          "filename": "go.mod",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/go.mod",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/go.mod",
          "diff": "@@ -66,7 +66,7 @@ require (\n \tgithub.com/siderolabs/discovery-client v0.1.13\n \tgithub.com/siderolabs/discovery-service v1.0.11\n \tgithub.com/siderolabs/gen v0.8.5\n-\tgithub.com/siderolabs/go-api-signature v0.3.7\n+\tgithub.com/siderolabs/go-api-signature v0.3.8\n \tgithub.com/siderolabs/go-circular v0.2.3\n \tgithub.com/siderolabs/go-debug v0.6.0\n \tgithub.com/siderolabs/go-kubernetes v0.2.25"
        },
        {
          "filename": "go.sum",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/go.sum",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/go.sum",
          "diff": "@@ -409,8 +409,8 @@ github.com/siderolabs/discovery-service v1.0.11 h1:+ymDXKhPL2f1c5MIO559wciA38PcQ\n github.com/siderolabs/discovery-service v1.0.11/go.mod h1:pUTOYgtYasO/T02zJNNfw0SCP8hDbIgFIvdm+Fn1UKo=\n github.com/siderolabs/gen v0.8.5 h1:xlWXTynnGD/epaj7uplvKvmAkBH+Fp51bLnw1JC0xME=\n github.com/siderolabs/gen v0.8.5/go.mod h1:CRrktDXQf3yDJI7xKv+cDYhBbKdfd/YE16OpgcHoT9E=\n-github.com/siderolabs/go-api-signature v0.3.7 h1:Qx5NH3BrtYucCgiLObAJhx7pouLR4tivr1moOClII3M=\n-github.com/siderolabs/go-api-signature v0.3.7/go.mod h1:MQy+DcXCQIFFXZr+E4tbMmnQSQs7WpubSpJFRN694mI=\n+github.com/siderolabs/go-api-signature v0.3.8 h1:0iTcOWIxOAc7M8aB2L+WScUd4BoqdXshvQ4h9tSSeF8=\n+github.com/siderolabs/go-api-signature v0.3.8/go.mod h1:MQy+DcXCQIFFXZr+E4tbMmnQSQs7WpubSpJFRN694mI=\n github.com/siderolabs/go-circular v0.2.3 h1:GKkA1Tw79kEFGtWdl7WTxEUTbwtklITeiRT0V1McHrA=\n github.com/siderolabs/go-circular v0.2.3/go.mod h1:YBN/q9YpQphUYnBtBgPsngauSHj1TEZfgQZWZVjk1WE=\n github.com/siderolabs/go-debug v0.6.0 h1:wcftcXv3fFeUHwsj4bJpHaXRJ6JJXL+eeaY69fCtHoY="
        },
        {
          "filename": "hack/generate-certs/main.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/hack/generate-certs/main.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/hack/generate-certs/main.go",
          "diff": "@@ -157,7 +157,7 @@ func generate() (err error) {\n }\n \n func runApp(app string, args ...string) error {\n-\tcmd := exec.Command(app, args...)\n+\tcmd := exec.Command(app, args...) //nolint:noctx\n \tcmd.Stdout = os.Stdout\n \tcmd.Stderr = os.Stderr\n \tcmd.Stdin = os.Stdin"
        },
        {
          "filename": "internal/backend/grpc/resource.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/backend/grpc/resource.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/backend/grpc/resource.go",
          "diff": "@@ -317,7 +317,7 @@ func (s *ResourceServer) Teardown(ctx context.Context, in *resources.DeleteReque\n \n func getSource(ctx context.Context) common.Runtime {\n \tif md, ok := metadata.FromIncomingContext(ctx), ok {\n-\t\tsource := md.Get(message.RuntimeHeaderHey)\n+\t\tsource := md.Get(message.RuntimeHeaderKey)\n \t\tif source != nil {\n \t\t\tif res, ok := common.Runtime_value[source[0]], ok {\n \t\t\t\treturn common.Runtime(res)\n@@ -361,6 +361,14 @@ func withResource(r res) []runtime.QueryOption {\n \n // CreateResource creates a resource from a resource proto representation.\n func CreateResource(resource *resources.Resource) (cosiresource.Resource, error) { //nolint:ireturn\n+\tif resource == nil {\n+\t\treturn nil, errors.New(\"resource is nil\")\n+\t}\n+\n+\tif resource.Metadata == nil {\n+\t\treturn nil, errors.New(\"resource metadata is nil\")\n+\t}\n+\n \tif resource.Metadata.Version == \"\" {\n \t\tresource.Metadata.Version = \"1\"\n \t}"
        },
        {
          "filename": "internal/backend/grpc/router/router.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/backend/grpc/router/router.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/backend/grpc/router/router.go",
          "diff": "@@ -154,7 +154,7 @@ func (r *Router) Director(ctx context.Context, fullMethodName string) (proxy.Mod\n \t\treturn proxy.One2One, []proxy.Backend{r.omniBackend}, nil\n \t}\n \n-\tif runtime := md.Get(message.RuntimeHeaderHey), runtime != nil && runtime[0] == common.Runtime_Talos.String() {\n+\tif runtime := md.Get(message.RuntimeHeaderKey), runtime != nil && runtime[0] == common.Runtime_Talos.String() {\n \t\tbackends, err := r.getTalosBackend(ctx, md)\n \t\tif err != nil {\n \t\t\treturn proxy.One2One, nil, err"
        },
        {
          "filename": "internal/backend/server.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/backend/server.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/backend/server.go",
          "diff": "@@ -416,6 +416,8 @@ func (s *Server) buildServerOptions() ([]grpc.ServerOption, error) {\n \t\tgrpc_ctxtags.UnaryServerInterceptor(),\n \t\tlogLevelOverrideUnaryInterceptor,\n \t\tgrpc_zap.UnaryServerInterceptor(s.logger, grpc_zap.WithMessageProducer(messageProducer)),\n+\t\tgrpc_prometheus.UnaryServerInterceptor,\n+\t\tgrpc_recovery.UnaryServerInterceptor(recoveryOpt),\n \t\tgrpcutil.SetUserAgent(),\n \t\tgrpcutil.SetRealPeerAddress(),\n \t\tgrpcutil.SetAuditData(),\n@@ -428,14 +430,14 @@ func (s *Server) buildServerOptions() ([]grpc.ServerOption, error) {\n \t\t\t),\n \t\t\t1024,\n \t\t),\n-\t\tgrpc_prometheus.UnaryServerInterceptor,\n-\t\tgrpc_recovery.UnaryServerInterceptor(recoveryOpt),\n \t}\n \n \tstreamInterceptors := []grpc.StreamServerInterceptor{\n \t\tgrpc_ctxtags.StreamServerInterceptor(),\n \t\tlogLevelOverrideStreamInterceptor,\n \t\tgrpc_zap.StreamServerInterceptor(s.logger, grpc_zap.WithMessageProducer(messageProducer)),\n+\t\tgrpc_prometheus.StreamServerInterceptor,\n+\t\tgrpc_recovery.StreamServerInterceptor(recoveryOpt),\n \t\tgrpcutil.StreamSetUserAgent(),\n \t\tgrpcutil.StreamSetRealPeerAddress(),\n \t\tgrpcutil.StreamSetAuditData(),\n@@ -452,8 +454,6 @@ func (s *Server) buildServerOptions() ([]grpc.ServerOption, error) {\n \t\t\t\t),\n \t\t\t},\n \t\t),\n-\t\tgrpc_prometheus.StreamServerInterceptor,\n-\t\tgrpc_recovery.StreamServerInterceptor(recoveryOpt),\n \t}\n \n \tauthInterceptors, err := s.getAuthInterceptors()\n@@ -759,12 +759,12 @@ func resourceServerUpdate(resCopy *resapi.UpdateRequest) (*resapi.UpdateRequest,\n func isSensitiveResource(res *v1alpha1.Resource) bool {\n \tprotoR, err := protobuf.Unmarshal(res)\n \tif err != nil {\n-\t\treturn false\n+\t\treturn true\n \t}\n \n \tproperResource, err := protobuf.UnmarshalResource(protoR)\n \tif err != nil {\n-\t\treturn false\n+\t\treturn true\n \t}\n \n \tresDef, ok := properResource.(meta.ResourceDefinitionProvider)\n@@ -779,7 +779,7 @@ func isSensitiveResource(res *v1alpha1.Resource) bool {\n func isSensitiveSpec(resource *resapi.Resource) bool {\n \tres, err := grpcomni.CreateResource(resource)\n \tif err != nil {\n-\t\treturn false\n+\t\treturn true\n \t}\n \n \tresDef, ok := res.(meta.ResourceDefinitionProvider)"
        },
        {
          "filename": "internal/integration/auth_test.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/integration/auth_test.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/integration/auth_test.go",
          "diff": "@@ -945,11 +945,6 @@ func AssertResourceAuthz(rootCtx context.Context, rootCli *client.Client, client\n \t\t\t\tresource:       omni.NewImagePullStatus(resources.DefaultNamespace, uuid.New().String()),\n \t\t\t\tallowedVerbSet: readOnlyVerbSet,\n \t\t\t},\n-\t\t\t{\n-\t\t\t\tresource:       authres.NewAuthConfig(),\n-\t\t\t\tallowedVerbSet: readOnlyVerbSet,\n-\t\t\t\tisPublic:       true,\n-\t\t\t},\n \t\t\t{\n \t\t\t\tresource:       siderolink.NewConnectionParams(resources.DefaultNamespace, uuid.New().String()),\n \t\t\t\tallowedVerbSet: readOnlyVerbSet,\n@@ -1155,6 +1150,7 @@ func AssertResourceAuthz(rootCtx context.Context, rootCli *client.Client, client\n \t\t// delete excluded resources from the untested set\n \t\tdelete(untestedResourceTypes, k8s.KubernetesResourceType)\n \t\tdelete(untestedResourceTypes, siderolink.DeprecatedLinkCounterType)\n+\t\tdelete(untestedResourceTypes, authres.AuthConfigType)\n \n \t\tfor _, tc := range testCases {\n \t\t\tfor _, testVerb := range allVerbs {\n@@ -1179,19 +1175,19 @@ func AssertResourceAuthz(rootCtx context.Context, rootCli *client.Client, client\n \n \t\t\t\t\t\taccessErr := accessResource(noSignatureCtx, t, rootCli, scopedCli, tc.resource, testVerb)\n \n-\t\t\t\t\t\tif len(tc.allowedVerbSet) == 0 {\n-\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"no access is permitted\")\n-\n-\t\t\t\t\t\t\treturn\n-\t\t\t\t\t\t}\n-\n \t\t\t\t\t\tif !tc.isPublic {\n-\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"missing valid signature\")\n+\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"invalid signature\")\n \n \t\t\t\t\t\t\t// refresh the error but with a signature this time\n \t\t\t\t\t\t\taccessErr = accessResource(rootCtx, t, rootCli, scopedCli, tc.resource, testVerb)\n \t\t\t\t\t\t}\n \n+\t\t\t\t\t\tif len(tc.allowedVerbSet) == 0 {\n+\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"no access is permitted\")\n+\n+\t\t\t\t\t\t\treturn\n+\t\t\t\t\t\t}\n+\n \t\t\t\t\t\tisVerbError := accessErr != nil && strings.Contains(accessErr.Error(), \"only\") && strings.Contains(accessErr.Error(), \"access is permitted\")\n \t\t\t\t\t\tisRoleError := accessErr != nil && strings.Contains(accessErr.Error(), \"insufficient role:\")\n "
        },
        {
          "filename": "internal/pkg/auth/handler/handler_test.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/pkg/auth/handler/handler_test.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/pkg/auth/handler/handler_test.go",
          "diff": "@@ -32,7 +32,7 @@ func testHandler(t *testing.T, authEnabled bool) {\n \n \tlogger := zaptest.NewLogger(t)\n \n-\tauthenticatorFunc := func(context.Context, string) (*auth.Authenticator, error) {\n+\tauthenticatorFunc := func(context.Context, string) (*auth.Authenticator, error) { //nolint:unparam\n \t\treturn &auth.Authenticator{\n \t\t\tVerifier: mockSignerVerifier{},\n \t\t\tIdentity: \"user@example.com\",\n@@ -41,12 +41,15 @@ func testHandler(t *testing.T, authEnabled bool) {\n \t\t}, nil\n \t}\n \n-\twrapWithAuth := func(h http.Handler) http.Handler {\n-\t\treturn handler.NewAuthConfig(handler.NewSignature(h, authenticatorFunc, logger), authEnabled, logger)\n-\t}\n+\ttestServer := func(signatureRequired message.SignatureRequiredCheckFunc) *httptest.Server {\n+\t\twrapWithAuth := func(h http.Handler) http.Handler {\n+\t\t\tsignatureHandler := handler.NewSignature(h, authenticatorFunc, logger, message.WithSignatureRequiredCheck(signatureRequired))\n \n-\tts := httptest.NewServer(wrapWithAuth(coreHandler))\n-\tdefer ts.Close()\n+\t\t\treturn handler.NewAuthConfig(signatureHandler, authEnabled, logger)\n+\t\t}\n+\n+\t\treturn httptest.NewServer(wrapWithAuth(coreHandler))\n+\t}\n \n \tctx := t.Context()\n \n@@ -59,6 +62,7 @@ func testHandler(t *testing.T, authEnabled bool) {\n \t\tverifyContext   bool\n \n \t\texpectedCode int\n+\t\tpublic       bool\n \t}\n \n \tvar testCases []testCase\n@@ -69,6 +73,7 @@ func testHandler(t *testing.T, authEnabled bool) {\n \t\t\t\tname:         \"no signature\",\n \t\t\t\texpectedCode: http.StatusOK,\n \t\t\t\turi:          \"/ok\",\n+\t\t\t\tpublic:       true,\n \t\t\t},\n \t\t\t{\n \t\t\t\tname:         \"correct signature\",\n@@ -101,6 +106,11 @@ func testHandler(t *testing.T, authEnabled bool) {\n \n \tfor _, tc := range testCases {\n \t\tt.Run(tc.name, func(t *testing.T) {\n+\t\t\tts := testServer(func() (bool, error) {\n+\t\t\t\treturn authEnabled && !tc.public, nil\n+\t\t\t})\n+\t\t\tdefer ts.Close()\n+\n \t\t\treq, err := http.NewRequestWithContext(ctx, http.MethodGet, ts.URL+tc.uri, nil)\n \t\t\trequire.NoError(t, err)\n "
        },
        {
          "filename": "internal/pkg/auth/handler/signature.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/pkg/auth/handler/signature.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/pkg/auth/handler/signature.go",
          "diff": "@@ -25,14 +25,16 @@ type Signature struct {\n \tauthenticatorFunc auth.AuthenticatorFunc\n \tnext              http.Handler\n \tlogger            *zap.Logger\n+\toptions           []message.Option\n }\n \n // NewSignature returns a new signature handler.\n-func NewSignature(handler http.Handler, authenticatorFunc auth.AuthenticatorFunc, logger *zap.Logger) *Signature {\n+func NewSignature(handler http.Handler, authenticatorFunc auth.AuthenticatorFunc, logger *zap.Logger, messageOptions ...message.Option) *Signature {\n \treturn &Signature{\n \t\tnext:              handler,\n \t\tauthenticatorFunc: authenticatorFunc,\n \t\tlogger:            logger,\n+\t\toptions:           messageOptions,\n \t}\n }\n \n@@ -57,7 +59,7 @@ func (s *Signature) ServeHTTP(writer http.ResponseWriter, request *http.Request)\n }\n \n func (s *Signature) intercept(request *http.Request) (*http.Request, error) {\n-\tmsg, err := message.NewHTTP(request)\n+\tmsg, err := message.NewHTTP(request, s.options...)\n \tif err != nil {\n \t\treturn nil, err\n \t}"
        },
        {
          "filename": "internal/pkg/auth/interceptor/auth_config.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/pkg/auth/interceptor/auth_config.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/pkg/auth/interceptor/auth_config.go",
          "diff": "@@ -14,6 +14,8 @@ import (\n \t\"google.golang.org/grpc\"\n \t\"google.golang.org/grpc/metadata\"\n \n+\tresapi \"github.com/siderolabs/omni/client/api/omni/resources\"\n+\tauthres \"github.com/siderolabs/omni/client/pkg/omni/resources/auth\"\n \t\"github.com/siderolabs/omni/internal/backend/runtime/omni/audit\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth\"\n \t\"github.com/siderolabs/omni/internal/pkg/ctxstore\"\n@@ -36,7 +38,15 @@ func NewAuthConfig(enabled bool, logger *zap.Logger) *AuthConfig {\n // Unary returns a new unary GRPC interceptor.\n func (c *AuthConfig) Unary() grpc.UnaryServerInterceptor {\n \treturn func(ctx context.Context, req any, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (any, error) {\n-\t\tctx = c.intercept(ctx, info.FullMethod)\n+\t\tisGetAuthConfigRequest := false\n+\n+\t\tif req != nil && info != nil && info.FullMethod == resapi.ResourceService_Get_FullMethodName {\n+\t\t\tif getReq, getReqOk := req.(*resapi.GetRequest), getReqOk && getReq.Type == authres.AuthConfigType {\n+\t\t\t\tisGetAuthConfigRequest = true\n+\t\t\t}\n+\t\t}\n+\n+\t\tctx = c.intercept(ctx, isGetAuthConfigRequest, info.FullMethod)\n \n \t\treturn handler(ctx, req)\n \t}\n@@ -45,7 +55,7 @@ func (c *AuthConfig) Unary() grpc.UnaryServerInterceptor {\n // Stream returns a new streaming GRPC interceptor.\n func (c *AuthConfig) Stream() grpc.StreamServerInterceptor {\n \treturn func(srv any, ss grpc.ServerStream, info *grpc.StreamServerInfo, handler grpc.StreamHandler) error {\n-\t\tctx := c.intercept(ss.Context(), info.FullMethod)\n+\t\tctx := c.intercept(ss.Context(), false, info.FullMethod)\n \n \t\treturn handler(srv, &grpc_middleware.WrappedServerStream{\n \t\t\tServerStream:   ss,\n@@ -54,7 +64,7 @@ func (c *AuthConfig) Stream() grpc.StreamServerInterceptor {\n \t}\n }\n \n-func (c *AuthConfig) intercept(ctx context.Context, method string) context.Context {\n+func (c *AuthConfig) intercept(ctx context.Context, isGetAuthConfigRequest bool, method string) context.Context {\n \tctx = ctxstore.WithValue(ctx, auth.EnabledAuthContextKey{Enabled: c.enabled})\n \n \tif !c.enabled {\n@@ -66,7 +76,9 @@ func (c *AuthConfig) intercept(ctx context.Context, method string) context.Conte\n \t\tmd = metadata.New(nil)\n \t}\n \n-\tmsg := message.NewGRPC(md, method)\n+\tmsg := message.NewGRPC(md, method, message.WithSignatureRequiredCheck(func() (bool, error) {\n+\t\treturn !isGetAuthConfigRequest, nil\n+\t}))\n \n \tauditData, ok := ctxstore.Value[*audit.Data](ctx)\n \tif ok {"
        },
        {
          "filename": "internal/pkg/auth/interceptor/signature_test.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/0181162143e3e23b2bf537f2c57af3256086ab21/internal/pkg/auth/interceptor/signature_test.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1396083f766a1b0380e9949968d7fc17b7afecaa/internal/pkg/auth/interceptor/signature_test.go",
          "diff": "@@ -22,28 +22,29 @@ import (\n \t\"google.golang.org/grpc\"\n \t\"google.golang.org/grpc/codes\"\n \t\"google.golang.org/grpc/credentials/insecure\"\n-\t\"google.golang.org/grpc/interop/grpc_testing\"\n \t\"google.golang.org/grpc/metadata\"\n \t\"google.golang.org/grpc/status\"\n \n+\t\"github.com/siderolabs/omni/client/api/omni/resources\"\n+\tauthres \"github.com/siderolabs/omni/client/pkg/omni/resources/auth\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth/interceptor\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth/role\"\n \t\"github.com/siderolabs/omni/internal/pkg/test\"\n )\n \n type testServer struct {\n-\tgrpc_testing.UnimplementedTestServiceServer\n+\tresources.UnimplementedResourceServiceServer\n \n \tt *testing.T\n }\n \n-func (s testServer) UnaryCall(_ context.Context, _ *grpc_testing.SimpleRequest) (*grpc_testing.SimpleResponse, error) {\n-\treturn &grpc_testing.SimpleResponse{}, nil\n+func (s testServer) Get(context.Context, *resources.GetRequest) (*resources.GetResponse, error) {\n+\treturn &resources.GetResponse{}, nil\n }\n \n type SignatureTestSuite struct {\n-\ttestServiceClient grpc_testing.TestServiceClient\n+\ttestServiceClient resources.ResourceServiceClient\n \tclientConn        *grpc.ClientConn\n \tkey               *pgp.Key\n \ttest.GRPCSuite\n@@ -81,7 +82,7 @@ func (suite *SignatureTestSuite) SetupSuite() {\n \t\t),\n \t)\n \n-\tgrpc_testing.RegisterTestServiceServer(suite.Server, testServer{\n+\tresources.RegisterResourceServiceServer(suite.Server, testServer{\n \t\tt: suite.T(),\n \t})\n \n@@ -94,7 +95,7 @@ func (suite *SignatureTestSuite) SetupSuite() {\n \tsuite.clientConn, err = grpc.NewClient(suite.Target, dialOptions...)\n \tsuite.Require().NoError(err)\n \n-\tsuite.testServiceClient = grpc_testing.NewTestServiceClient(suite.clientConn)\n+\tsuite.testServiceClient = resources.NewResourceServiceClient(suite.clientConn)\n }\n \n func (suite *SignatureTestSuite) TearDownSuite() {\n@@ -103,7 +104,9 @@ func (suite *SignatureTestSuite) TearDownSuite() {\n }\n \n func (suite *SignatureTestSuite) TestMissingSignaturePassthrough() {\n-\t_, err := suite.testServiceClient.UnaryCall(suite.T().Context(), &grpc_testing.SimpleRequest{})\n+\t_, err := suite.testServiceClient.Get(suite.T().Context(), &resources.GetRequest{\n+\t\tType: authres.AuthConfigType,\n+\t})\n \n \tsuite.Assert().NoError(err)\n }\n@@ -113,7 +116,7 @@ func (suite *SignatureTestSuite) TestInvalidSignatureVersion() {\n \t\tmessage.SignatureHeaderKey, \"invalid\",\n \t))\n \n-\t_, err := suite.testServiceClient.UnaryCall(ctx, &grpc_testing.SimpleRequest{})\n+\t_, err := suite.testServiceClient.Get(ctx, &resources.GetRequest{})\n \n \tsuite.Assert().Error(err)\n \tsuite.Assert().Equal(codes.Unauthenticated, status.Code(err), \"error code should be codes.Unauthenticated\")\n@@ -127,7 +130,7 @@ func (suite *SignatureTestSuite) TestMissingTimestamp() {\n \t\tmessage.SignatureHeaderKey, fmt.Sprintf(\"%s test@example.org signer-1 %s\", message.SignatureVersionV1, payload),\n \t))\n \n-\t_, err := suite.testServiceClient.UnaryCall(ctx, &grpc_testing.SimpleRequest{})\n+\t_, err := suite.testServiceClient.Get(ctx, &resources.GetRequest{})\n \n \tsuite.Assert().Error(err)\n \tsuite.Assert().Equal(codes.Unauthenticated, status.Code(err), \"error code should be codes.Unauthenticated\")\n@@ -141,7 +144,7 @@ func (suite *SignatureTestSuite) TestValidSignature() {\n \t\tHeaders: map[string][]string{\n \t\t\tmessage.TimestampHeaderKey: {epochTimestamp},\n \t\t},\n-\t\tMethod: \"/grpc.testing.TestService/UnaryCall\",\n+\t\tMethod: resources.ResourceService_Get_FullMethodName,\n \t}\n \n \tpayloadJSON, err := json.Marshal(payload)\n@@ -163,7 +166,7 @@ func (suite *SignatureTestSuite) TestValidSignature() {\n \t\tmessage.PayloadHeaderKey, string(payloadJSON),\n \t))\n \n-\t_, err = suite.testServiceClient.UnaryCall(ctx, &grpc_testing.SimpleRequest{})\n+\t_, err = suite.testServiceClient.Get(ctx, &resources.GetRequest{})\n \n \tassert.NoError(suite.T(), err)\n }"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-59836",
        "https://github.com/siderolabs/omni/commit/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae"
      ],
      "repo": "omni",
      "commit_hash": "1fd954af64985a8b3dbf5b11deddbf7cd953f5ae",
      "commit_message": "fix: fix the order in the grpc interceptor chain  Change the interceptor order to move the Prometheus metrics collector earlier, so that we can get metrics for the calls that fail early. Related to siderolabs/omni#1606.  Additionally, ensure that `get` access to the `AuthConfig` resource does not require a GRPC signature.  Signed-off-by: Utku Ozdemir <utku.ozdemir@siderolabs.com> (cherry picked from commit 5beb24f7d04e2e2469f796a2f32cf3a56b087528)",
      "files_changed": [
        {
          "filename": "go.mod",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/go.mod",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/go.mod",
          "diff": "@@ -66,7 +66,7 @@ require (\n \tgithub.com/siderolabs/discovery-client v0.1.11\n \tgithub.com/siderolabs/discovery-service v1.0.10\n \tgithub.com/siderolabs/gen v0.8.4\n-\tgithub.com/siderolabs/go-api-signature v0.3.6\n+\tgithub.com/siderolabs/go-api-signature v0.3.8\n \tgithub.com/siderolabs/go-circular v0.2.3\n \tgithub.com/siderolabs/go-debug v0.5.0\n \tgithub.com/siderolabs/go-kubernetes v0.2.23"
        },
        {
          "filename": "go.sum",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/go.sum",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/go.sum",
          "diff": "@@ -415,8 +415,8 @@ github.com/siderolabs/discovery-service v1.0.10 h1:GSd5p+bC+PJjIpCqiDtVFKKU18Lps\n github.com/siderolabs/discovery-service v1.0.10/go.mod h1:tzeHcfftQQHZSShuSTcrgIN3BY6fmhlum/Z9yOJ61lk=\n github.com/siderolabs/gen v0.8.4 h1:1Xj/YvKTXgpnr9ZC7heKcskJo5wHvWOybwjQSCfEmsQ=\n github.com/siderolabs/gen v0.8.4/go.mod h1:CRrktDXQf3yDJI7xKv+cDYhBbKdfd/YE16OpgcHoT9E=\n-github.com/siderolabs/go-api-signature v0.3.6 h1:wDIsXbpl7Oa/FXvxB6uz4VL9INA9fmr3EbmjEZYFJrU=\n-github.com/siderolabs/go-api-signature v0.3.6/go.mod h1:hoH13AfunHflxbXfh+NoploqV13ZTDfQ1mQJWNVSW9U=\n+github.com/siderolabs/go-api-signature v0.3.8 h1:0iTcOWIxOAc7M8aB2L+WScUd4BoqdXshvQ4h9tSSeF8=\n+github.com/siderolabs/go-api-signature v0.3.8/go.mod h1:MQy+DcXCQIFFXZr+E4tbMmnQSQs7WpubSpJFRN694mI=\n github.com/siderolabs/go-circular v0.2.3 h1:GKkA1Tw79kEFGtWdl7WTxEUTbwtklITeiRT0V1McHrA=\n github.com/siderolabs/go-circular v0.2.3/go.mod h1:YBN/q9YpQphUYnBtBgPsngauSHj1TEZfgQZWZVjk1WE=\n github.com/siderolabs/go-debug v0.5.0 h1:AQwFtvyFkSYTA1of4/UyDvVu8dVLoQP5sUYgmcp/u+4="
        },
        {
          "filename": "hack/generate-certs/main.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/hack/generate-certs/main.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/hack/generate-certs/main.go",
          "diff": "@@ -157,7 +157,7 @@ func generate() (err error) {\n }\n \n func runApp(app string, args ...string) error {\n-\tcmd := exec.Command(app, args...)\n+\tcmd := exec.Command(app, args...) //nolint:noctx\n \tcmd.Stdout = os.Stdout\n \tcmd.Stderr = os.Stderr\n \tcmd.Stdin = os.Stdin"
        },
        {
          "filename": "internal/backend/grpc/resource.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/backend/grpc/resource.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/backend/grpc/resource.go",
          "diff": "@@ -317,7 +317,7 @@ func (s *ResourceServer) Teardown(ctx context.Context, in *resources.DeleteReque\n \n func getSource(ctx context.Context) common.Runtime {\n \tif md, ok := metadata.FromIncomingContext(ctx), ok {\n-\t\tsource := md.Get(message.RuntimeHeaderHey)\n+\t\tsource := md.Get(message.RuntimeHeaderKey)\n \t\tif source != nil {\n \t\t\tif res, ok := common.Runtime_value[source[0]], ok {\n \t\t\t\treturn common.Runtime(res)\n@@ -361,6 +361,14 @@ func withResource(r res) []runtime.QueryOption {\n \n // CreateResource creates a resource from a resource proto representation.\n func CreateResource(resource *resources.Resource) (cosiresource.Resource, error) { //nolint:ireturn\n+\tif resource == nil {\n+\t\treturn nil, errors.New(\"resource is nil\")\n+\t}\n+\n+\tif resource.Metadata == nil {\n+\t\treturn nil, errors.New(\"resource metadata is nil\")\n+\t}\n+\n \tif resource.Metadata.Version == \"\" {\n \t\tresource.Metadata.Version = \"1\"\n \t}"
        },
        {
          "filename": "internal/backend/grpc/router/router.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/backend/grpc/router/router.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/backend/grpc/router/router.go",
          "diff": "@@ -154,7 +154,7 @@ func (r *Router) Director(ctx context.Context, fullMethodName string) (proxy.Mod\n \t\treturn proxy.One2One, []proxy.Backend{r.omniBackend}, nil\n \t}\n \n-\tif runtime := md.Get(message.RuntimeHeaderHey), runtime != nil && runtime[0] == common.Runtime_Talos.String() {\n+\tif runtime := md.Get(message.RuntimeHeaderKey), runtime != nil && runtime[0] == common.Runtime_Talos.String() {\n \t\tbackends, err := r.getTalosBackend(ctx, md)\n \t\tif err != nil {\n \t\t\treturn proxy.One2One, nil, err"
        },
        {
          "filename": "internal/backend/server.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/backend/server.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/backend/server.go",
          "diff": "@@ -416,6 +416,8 @@ func (s *Server) buildServerOptions() ([]grpc.ServerOption, error) {\n \t\tgrpc_ctxtags.UnaryServerInterceptor(),\n \t\tlogLevelOverrideUnaryInterceptor,\n \t\tgrpc_zap.UnaryServerInterceptor(s.logger, grpc_zap.WithMessageProducer(messageProducer)),\n+\t\tgrpc_prometheus.UnaryServerInterceptor,\n+\t\tgrpc_recovery.UnaryServerInterceptor(recoveryOpt),\n \t\tgrpcutil.SetUserAgent(),\n \t\tgrpcutil.SetRealPeerAddress(),\n \t\tgrpcutil.SetAuditData(),\n@@ -428,14 +430,14 @@ func (s *Server) buildServerOptions() ([]grpc.ServerOption, error) {\n \t\t\t),\n \t\t\t1024,\n \t\t),\n-\t\tgrpc_prometheus.UnaryServerInterceptor,\n-\t\tgrpc_recovery.UnaryServerInterceptor(recoveryOpt),\n \t}\n \n \tstreamInterceptors := []grpc.StreamServerInterceptor{\n \t\tgrpc_ctxtags.StreamServerInterceptor(),\n \t\tlogLevelOverrideStreamInterceptor,\n \t\tgrpc_zap.StreamServerInterceptor(s.logger, grpc_zap.WithMessageProducer(messageProducer)),\n+\t\tgrpc_prometheus.StreamServerInterceptor,\n+\t\tgrpc_recovery.StreamServerInterceptor(recoveryOpt),\n \t\tgrpcutil.StreamSetUserAgent(),\n \t\tgrpcutil.StreamSetRealPeerAddress(),\n \t\tgrpcutil.StreamSetAuditData(),\n@@ -452,8 +454,6 @@ func (s *Server) buildServerOptions() ([]grpc.ServerOption, error) {\n \t\t\t\t),\n \t\t\t},\n \t\t),\n-\t\tgrpc_prometheus.StreamServerInterceptor,\n-\t\tgrpc_recovery.StreamServerInterceptor(recoveryOpt),\n \t}\n \n \tauthInterceptors, err := s.getAuthInterceptors()\n@@ -759,12 +759,12 @@ func resourceServerUpdate(resCopy *resapi.UpdateRequest) (*resapi.UpdateRequest,\n func isSensitiveResource(res *v1alpha1.Resource) bool {\n \tprotoR, err := protobuf.Unmarshal(res)\n \tif err != nil {\n-\t\treturn false\n+\t\treturn true\n \t}\n \n \tproperResource, err := protobuf.UnmarshalResource(protoR)\n \tif err != nil {\n-\t\treturn false\n+\t\treturn true\n \t}\n \n \tresDef, ok := properResource.(meta.ResourceDefinitionProvider)\n@@ -779,7 +779,7 @@ func isSensitiveResource(res *v1alpha1.Resource) bool {\n func isSensitiveSpec(resource *resapi.Resource) bool {\n \tres, err := grpcomni.CreateResource(resource)\n \tif err != nil {\n-\t\treturn false\n+\t\treturn true\n \t}\n \n \tresDef, ok := res.(meta.ResourceDefinitionProvider)"
        },
        {
          "filename": "internal/integration/auth_test.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/integration/auth_test.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/integration/auth_test.go",
          "diff": "@@ -940,11 +940,6 @@ func AssertResourceAuthz(rootCtx context.Context, rootCli *client.Client, client\n \t\t\t\tresource:       omni.NewImagePullStatus(resources.DefaultNamespace, uuid.New().String()),\n \t\t\t\tallowedVerbSet: readOnlyVerbSet,\n \t\t\t},\n-\t\t\t{\n-\t\t\t\tresource:       authres.NewAuthConfig(),\n-\t\t\t\tallowedVerbSet: readOnlyVerbSet,\n-\t\t\t\tisPublic:       true,\n-\t\t\t},\n \t\t\t{\n \t\t\t\tresource:       siderolink.NewConnectionParams(resources.DefaultNamespace, uuid.New().String()),\n \t\t\t\tallowedVerbSet: readOnlyVerbSet,\n@@ -1149,6 +1144,7 @@ func AssertResourceAuthz(rootCtx context.Context, rootCli *client.Client, client\n \t\t// delete excluded resources from the untested set\n \t\tdelete(untestedResourceTypes, k8s.KubernetesResourceType)\n \t\tdelete(untestedResourceTypes, siderolink.DeprecatedLinkCounterType)\n+\t\tdelete(untestedResourceTypes, authres.AuthConfigType)\n \n \t\tfor _, tc := range testCases {\n \t\t\tfor _, testVerb := range allVerbs {\n@@ -1173,19 +1169,19 @@ func AssertResourceAuthz(rootCtx context.Context, rootCli *client.Client, client\n \n \t\t\t\t\t\taccessErr := accessResource(noSignatureCtx, t, rootCli, scopedCli, tc.resource, testVerb)\n \n-\t\t\t\t\t\tif len(tc.allowedVerbSet) == 0 {\n-\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"no access is permitted\")\n-\n-\t\t\t\t\t\t\treturn\n-\t\t\t\t\t\t}\n-\n \t\t\t\t\t\tif !tc.isPublic {\n-\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"missing valid signature\")\n+\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"invalid signature\")\n \n \t\t\t\t\t\t\t// refresh the error but with a signature this time\n \t\t\t\t\t\t\taccessErr = accessResource(rootCtx, t, rootCli, scopedCli, tc.resource, testVerb)\n \t\t\t\t\t\t}\n \n+\t\t\t\t\t\tif len(tc.allowedVerbSet) == 0 {\n+\t\t\t\t\t\t\tassert.ErrorContains(t, accessErr, \"no access is permitted\")\n+\n+\t\t\t\t\t\t\treturn\n+\t\t\t\t\t\t}\n+\n \t\t\t\t\t\tisVerbError := accessErr != nil && strings.Contains(accessErr.Error(), \"only\") && strings.Contains(accessErr.Error(), \"access is permitted\")\n \t\t\t\t\t\tisRoleError := accessErr != nil && strings.Contains(accessErr.Error(), \"insufficient role:\")\n "
        },
        {
          "filename": "internal/pkg/auth/handler/handler_test.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/pkg/auth/handler/handler_test.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/pkg/auth/handler/handler_test.go",
          "diff": "@@ -32,7 +32,7 @@ func testHandler(t *testing.T, authEnabled bool) {\n \n \tlogger := zaptest.NewLogger(t)\n \n-\tauthenticatorFunc := func(context.Context, string) (*auth.Authenticator, error) {\n+\tauthenticatorFunc := func(context.Context, string) (*auth.Authenticator, error) { //nolint:unparam\n \t\treturn &auth.Authenticator{\n \t\t\tVerifier: mockSignerVerifier{},\n \t\t\tIdentity: \"user@example.com\",\n@@ -41,12 +41,15 @@ func testHandler(t *testing.T, authEnabled bool) {\n \t\t}, nil\n \t}\n \n-\twrapWithAuth := func(h http.Handler) http.Handler {\n-\t\treturn handler.NewAuthConfig(handler.NewSignature(h, authenticatorFunc, logger), authEnabled, logger)\n-\t}\n+\ttestServer := func(signatureRequired message.SignatureRequiredCheckFunc) *httptest.Server {\n+\t\twrapWithAuth := func(h http.Handler) http.Handler {\n+\t\t\tsignatureHandler := handler.NewSignature(h, authenticatorFunc, logger, message.WithSignatureRequiredCheck(signatureRequired))\n \n-\tts := httptest.NewServer(wrapWithAuth(coreHandler))\n-\tdefer ts.Close()\n+\t\t\treturn handler.NewAuthConfig(signatureHandler, authEnabled, logger)\n+\t\t}\n+\n+\t\treturn httptest.NewServer(wrapWithAuth(coreHandler))\n+\t}\n \n \tctx := t.Context()\n \n@@ -59,6 +62,7 @@ func testHandler(t *testing.T, authEnabled bool) {\n \t\tverifyContext   bool\n \n \t\texpectedCode int\n+\t\tpublic       bool\n \t}\n \n \tvar testCases []testCase\n@@ -69,6 +73,7 @@ func testHandler(t *testing.T, authEnabled bool) {\n \t\t\t\tname:         \"no signature\",\n \t\t\t\texpectedCode: http.StatusOK,\n \t\t\t\turi:          \"/ok\",\n+\t\t\t\tpublic:       true,\n \t\t\t},\n \t\t\t{\n \t\t\t\tname:         \"correct signature\",\n@@ -101,6 +106,11 @@ func testHandler(t *testing.T, authEnabled bool) {\n \n \tfor _, tc := range testCases {\n \t\tt.Run(tc.name, func(t *testing.T) {\n+\t\t\tts := testServer(func() (bool, error) {\n+\t\t\t\treturn authEnabled && !tc.public, nil\n+\t\t\t})\n+\t\t\tdefer ts.Close()\n+\n \t\t\treq, err := http.NewRequestWithContext(ctx, http.MethodGet, ts.URL+tc.uri, nil)\n \t\t\trequire.NoError(t, err)\n "
        },
        {
          "filename": "internal/pkg/auth/handler/signature.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/pkg/auth/handler/signature.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/pkg/auth/handler/signature.go",
          "diff": "@@ -25,14 +25,16 @@ type Signature struct {\n \tauthenticatorFunc auth.AuthenticatorFunc\n \tnext              http.Handler\n \tlogger            *zap.Logger\n+\toptions           []message.Option\n }\n \n // NewSignature returns a new signature handler.\n-func NewSignature(handler http.Handler, authenticatorFunc auth.AuthenticatorFunc, logger *zap.Logger) *Signature {\n+func NewSignature(handler http.Handler, authenticatorFunc auth.AuthenticatorFunc, logger *zap.Logger, messageOptions ...message.Option) *Signature {\n \treturn &Signature{\n \t\tnext:              handler,\n \t\tauthenticatorFunc: authenticatorFunc,\n \t\tlogger:            logger,\n+\t\toptions:           messageOptions,\n \t}\n }\n \n@@ -57,7 +59,7 @@ func (s *Signature) ServeHTTP(writer http.ResponseWriter, request *http.Request)\n }\n \n func (s *Signature) intercept(request *http.Request) (*http.Request, error) {\n-\tmsg, err := message.NewHTTP(request)\n+\tmsg, err := message.NewHTTP(request, s.options...)\n \tif err != nil {\n \t\treturn nil, err\n \t}"
        },
        {
          "filename": "internal/pkg/auth/interceptor/auth_config.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/pkg/auth/interceptor/auth_config.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/pkg/auth/interceptor/auth_config.go",
          "diff": "@@ -14,6 +14,8 @@ import (\n \t\"google.golang.org/grpc\"\n \t\"google.golang.org/grpc/metadata\"\n \n+\tresapi \"github.com/siderolabs/omni/client/api/omni/resources\"\n+\tauthres \"github.com/siderolabs/omni/client/pkg/omni/resources/auth\"\n \t\"github.com/siderolabs/omni/internal/backend/runtime/omni/audit\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth\"\n \t\"github.com/siderolabs/omni/internal/pkg/ctxstore\"\n@@ -36,7 +38,15 @@ func NewAuthConfig(enabled bool, logger *zap.Logger) *AuthConfig {\n // Unary returns a new unary GRPC interceptor.\n func (c *AuthConfig) Unary() grpc.UnaryServerInterceptor {\n \treturn func(ctx context.Context, req any, info *grpc.UnaryServerInfo, handler grpc.UnaryHandler) (any, error) {\n-\t\tctx = c.intercept(ctx, info.FullMethod)\n+\t\tisGetAuthConfigRequest := false\n+\n+\t\tif req != nil && info != nil && info.FullMethod == resapi.ResourceService_Get_FullMethodName {\n+\t\t\tif getReq, getReqOk := req.(*resapi.GetRequest), getReqOk && getReq.Type == authres.AuthConfigType {\n+\t\t\t\tisGetAuthConfigRequest = true\n+\t\t\t}\n+\t\t}\n+\n+\t\tctx = c.intercept(ctx, isGetAuthConfigRequest, info.FullMethod)\n \n \t\treturn handler(ctx, req)\n \t}\n@@ -45,7 +55,7 @@ func (c *AuthConfig) Unary() grpc.UnaryServerInterceptor {\n // Stream returns a new streaming GRPC interceptor.\n func (c *AuthConfig) Stream() grpc.StreamServerInterceptor {\n \treturn func(srv any, ss grpc.ServerStream, info *grpc.StreamServerInfo, handler grpc.StreamHandler) error {\n-\t\tctx := c.intercept(ss.Context(), info.FullMethod)\n+\t\tctx := c.intercept(ss.Context(), false, info.FullMethod)\n \n \t\treturn handler(srv, &grpc_middleware.WrappedServerStream{\n \t\t\tServerStream:   ss,\n@@ -54,7 +64,7 @@ func (c *AuthConfig) Stream() grpc.StreamServerInterceptor {\n \t}\n }\n \n-func (c *AuthConfig) intercept(ctx context.Context, method string) context.Context {\n+func (c *AuthConfig) intercept(ctx context.Context, isGetAuthConfigRequest bool, method string) context.Context {\n \tctx = ctxstore.WithValue(ctx, auth.EnabledAuthContextKey{Enabled: c.enabled})\n \n \tif !c.enabled {\n@@ -66,7 +76,9 @@ func (c *AuthConfig) intercept(ctx context.Context, method string) context.Conte\n \t\tmd = metadata.New(nil)\n \t}\n \n-\tmsg := message.NewGRPC(md, method)\n+\tmsg := message.NewGRPC(md, method, message.WithSignatureRequiredCheck(func() (bool, error) {\n+\t\treturn !isGetAuthConfigRequest, nil\n+\t}))\n \n \tauditData, ok := ctxstore.Value[*audit.Data](ctx)\n \tif ok {"
        },
        {
          "filename": "internal/pkg/auth/interceptor/signature_test.go",
          "old_url": "https://raw.githubusercontent.com/siderolabs/omni/a467f3be129a4a979193ceae47d44f18c986ba07/internal/pkg/auth/interceptor/signature_test.go",
          "new_url": "https://raw.githubusercontent.com/siderolabs/omni/1fd954af64985a8b3dbf5b11deddbf7cd953f5ae/internal/pkg/auth/interceptor/signature_test.go",
          "diff": "@@ -22,28 +22,29 @@ import (\n \t\"google.golang.org/grpc\"\n \t\"google.golang.org/grpc/codes\"\n \t\"google.golang.org/grpc/credentials/insecure\"\n-\t\"google.golang.org/grpc/interop/grpc_testing\"\n \t\"google.golang.org/grpc/metadata\"\n \t\"google.golang.org/grpc/status\"\n \n+\t\"github.com/siderolabs/omni/client/api/omni/resources\"\n+\tauthres \"github.com/siderolabs/omni/client/pkg/omni/resources/auth\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth/interceptor\"\n \t\"github.com/siderolabs/omni/internal/pkg/auth/role\"\n \t\"github.com/siderolabs/omni/internal/pkg/test\"\n )\n \n type testServer struct {\n-\tgrpc_testing.UnimplementedTestServiceServer\n+\tresources.UnimplementedResourceServiceServer\n \n \tt *testing.T\n }\n \n-func (s testServer) UnaryCall(_ context.Context, _ *grpc_testing.SimpleRequest) (*grpc_testing.SimpleResponse, error) {\n-\treturn &grpc_testing.SimpleResponse{}, nil\n+func (s testServer) Get(context.Context, *resources.GetRequest) (*resources.GetResponse, error) {\n+\treturn &resources.GetResponse{}, nil\n }\n \n type SignatureTestSuite struct {\n-\ttestServiceClient grpc_testing.TestServiceClient\n+\ttestServiceClient resources.ResourceServiceClient\n \tclientConn        *grpc.ClientConn\n \tkey               *pgp.Key\n \ttest.GRPCSuite\n@@ -81,7 +82,7 @@ func (suite *SignatureTestSuite) SetupSuite() {\n \t\t),\n \t)\n \n-\tgrpc_testing.RegisterTestServiceServer(suite.Server, testServer{\n+\tresources.RegisterResourceServiceServer(suite.Server, testServer{\n \t\tt: suite.T(),\n \t})\n \n@@ -94,7 +95,7 @@ func (suite *SignatureTestSuite) SetupSuite() {\n \tsuite.clientConn, err = grpc.NewClient(suite.Target, dialOptions...)\n \tsuite.Require().NoError(err)\n \n-\tsuite.testServiceClient = grpc_testing.NewTestServiceClient(suite.clientConn)\n+\tsuite.testServiceClient = resources.NewResourceServiceClient(suite.clientConn)\n }\n \n func (suite *SignatureTestSuite) TearDownSuite() {\n@@ -103,7 +104,9 @@ func (suite *SignatureTestSuite) TearDownSuite() {\n }\n \n func (suite *SignatureTestSuite) TestMissingSignaturePassthrough() {\n-\t_, err := suite.testServiceClient.UnaryCall(suite.T().Context(), &grpc_testing.SimpleRequest{})\n+\t_, err := suite.testServiceClient.Get(suite.T().Context(), &resources.GetRequest{\n+\t\tType: authres.AuthConfigType,\n+\t})\n \n \tsuite.Assert().NoError(err)\n }\n@@ -113,7 +116,7 @@ func (suite *SignatureTestSuite) TestInvalidSignatureVersion() {\n \t\tmessage.SignatureHeaderKey, \"invalid\",\n \t))\n \n-\t_, err := suite.testServiceClient.UnaryCall(ctx, &grpc_testing.SimpleRequest{})\n+\t_, err := suite.testServiceClient.Get(ctx, &resources.GetRequest{})\n \n \tsuite.Assert().Error(err)\n \tsuite.Assert().Equal(codes.Unauthenticated, status.Code(err), \"error code should be codes.Unauthenticated\")\n@@ -127,7 +130,7 @@ func (suite *SignatureTestSuite) TestMissingTimestamp() {\n \t\tmessage.SignatureHeaderKey, fmt.Sprintf(\"%s test@example.org signer-1 %s\", message.SignatureVersionV1, payload),\n \t))\n \n-\t_, err := suite.testServiceClient.UnaryCall(ctx, &grpc_testing.SimpleRequest{})\n+\t_, err := suite.testServiceClient.Get(ctx, &resources.GetRequest{})\n \n \tsuite.Assert().Error(err)\n \tsuite.Assert().Equal(codes.Unauthenticated, status.Code(err), \"error code should be codes.Unauthenticated\")\n@@ -141,7 +144,7 @@ func (suite *SignatureTestSuite) TestValidSignature() {\n \t\tHeaders: map[string][]string{\n \t\t\tmessage.TimestampHeaderKey: {epochTimestamp},\n \t\t},\n-\t\tMethod: \"/grpc.testing.TestService/UnaryCall\",\n+\t\tMethod: resources.ResourceService_Get_FullMethodName,\n \t}\n \n \tpayloadJSON, err := json.Marshal(payload)\n@@ -163,7 +166,7 @@ func (suite *SignatureTestSuite) TestValidSignature() {\n \t\tmessage.PayloadHeaderKey, string(payloadJSON),\n \t))\n \n-\t_, err = suite.testServiceClient.UnaryCall(ctx, &grpc_testing.SimpleRequest{})\n+\t_, err = suite.testServiceClient.Get(ctx, &resources.GetRequest{})\n \n \tassert.NoError(suite.T(), err)\n }"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62175",
        "https://github.com/mastodon/mastodon/commit/2971ac9863b91372e68ac152caf6f4dbff511d17"
      ],
      "repo": "mastodon",
      "commit_hash": "2971ac9863b91372e68ac152caf6f4dbff511d17",
      "commit_message": "Fix streaming still being authorized for suspended accounts (#36448)",
      "files_changed": [
        {
          "filename": "app/models/concerns/account/suspensions.rb",
          "old_url": "https://raw.githubusercontent.com/mastodon/mastodon/7e98fa9b476fdaed235519f1d527eb956004ba0c/app/models/concerns/account/suspensions.rb",
          "new_url": "https://raw.githubusercontent.com/mastodon/mastodon/2971ac9863b91372e68ac152caf6f4dbff511d17/app/models/concerns/account/suspensions.rb",
          "diff": "@@ -32,6 +32,10 @@ def suspend!(date: Time.now.utc, origin: :local, block_email: true)\n       update!(suspended_at: date, suspension_origin: origin)\n       create_canonical_email_block! if block_email\n     end\n+\n+    # This terminates all connections for the given account with the streaming\n+    # server:\n+    redis.publish(\"timeline:system:#{id}\", Oj.dump(event: :kill)) if local?\n   end\n \n   def unsuspend!"
        },
        {
          "filename": "spec/system/streaming/streaming_spec.rb",
          "old_url": "https://raw.githubusercontent.com/mastodon/mastodon/7e98fa9b476fdaed235519f1d527eb956004ba0c/spec/system/streaming/streaming_spec.rb",
          "new_url": "https://raw.githubusercontent.com/mastodon/mastodon/2971ac9863b91372e68ac152caf6f4dbff511d17/spec/system/streaming/streaming_spec.rb",
          "diff": "@@ -98,4 +98,28 @@\n       expect(streaming_client.open?).to be(false)\n     end\n   end\n+\n+  context 'with a suspended user account' do\n+    before do\n+      user.account.suspend!\n+    end\n+\n+    it 'receives an 401 unauthorized error when trying to connect' do\n+      streaming_client.connect\n+\n+      expect(streaming_client.status).to eq(401)\n+      expect(streaming_client.open?).to be(false)\n+    end\n+  end\n+\n+  context 'when the user account is suspended whilst connected' do\n+    it 'terminates the connection for the user' do\n+      streaming_client.connect\n+\n+      user.account.suspend!\n+\n+      expect(streaming_client.wait_for(:closed).code).to be(1000)\n+      expect(streaming_client.open?).to be(false)\n+    end\n+  end\n end"
        },
        {
          "filename": "streaming/index.js",
          "old_url": "https://raw.githubusercontent.com/mastodon/mastodon/7e98fa9b476fdaed235519f1d527eb956004ba0c/streaming/index.js",
          "new_url": "https://raw.githubusercontent.com/mastodon/mastodon/2971ac9863b91372e68ac152caf6f4dbff511d17/streaming/index.js",
          "diff": "@@ -351,7 +351,7 @@ const startServer = async () => {\n    * @returns {Promise<ResolvedAccount>}\n    */\n   const accountFromToken = async (token, req) => {\n-    const result = await pgPool.query('SELECT oauth_access_tokens.id, oauth_access_tokens.resource_owner_id, users.account_id, users.chosen_languages, oauth_access_tokens.scopes FROM oauth_access_tokens INNER JOIN users ON oauth_access_tokens.resource_owner_id = users.id WHERE oauth_access_tokens.token = $1 AND oauth_access_tokens.revoked_at IS NULL AND users.disabled IS FALSE LIMIT 1', [token]),\n+    const result = await pgPool.query('SELECT oauth_access_tokens.id, oauth_access_tokens.resource_owner_id, users.account_id, users.chosen_languages, oauth_access_tokens.scopes FROM oauth_access_tokens INNER JOIN users ON oauth_access_tokens.resource_owner_id = users.id INNER JOIN accounts ON accounts.id = users.account_id WHERE oauth_access_tokens.token = $1 AND oauth_access_tokens.revoked_at IS NULL AND users.disabled IS FALSE AND accounts.suspended_at IS NULL LIMIT 1', [token]),\n \n     if (result.rows.length === 0) {\n       throw new AuthenticationError('Invalid access token'),"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62359",
        "https://github.com/LabRedesCefetRJ/WeGIA/commit/176733543c9b6762bef5ddec7c9c555f76fafa1d"
      ],
      "repo": "WeGIA",
      "commit_hash": "176733543c9b6762bef5ddec7c9c555f76fafa1d",
      "commit_message": "Resolu\u00e7\u00e3o SQL Injection [Security https://github.com/LabRedesCefetRJ/WeGIA/security/advisories/GHSA-8963-9833-gpx7]",
      "files_changed": [
        {
          "filename": "html/pet/profile_pet.php",
          "old_url": "https://raw.githubusercontent.com/LabRedesCefetRJ/WeGIA/cb67c85e03c9b7397b8ca652571b228ea24d218d/html/pet/profile_pet.php",
          "new_url": "https://raw.githubusercontent.com/LabRedesCefetRJ/WeGIA/176733543c9b6762bef5ddec7c9c555f76fafa1d/html/pet/profile_pet.php",
          "diff": " "
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62365",
        "https://github.com/librenms/librenms/commit/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008"
      ],
      "repo": "librenms",
      "commit_hash": "30d3dd7e5f5e22a8c23c9db3ad90a731c005b008",
      "commit_message": "Remove report_this function (#17941)  basically hacker's paradise...",
      "files_changed": [
        {
          "filename": "includes/functions.php",
          "old_url": "https://raw.githubusercontent.com/librenms/librenms/114b01877d54363c7093f7e34427e79ed3154992/includes/functions.php",
          "new_url": "https://raw.githubusercontent.com/librenms/librenms/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008/includes/functions.php",
          "diff": "@@ -439,11 +439,6 @@ function delta_to_bits($delta, $period)\n     return round($delta * 8 / $period, 2),\n }\n \n-function report_this($message)\n-{\n-    return '<h2>' . htmlentities($message) . ' Please <a href=\"' . htmlentities(Config::get('project_issues')) . '\">report this</a> to the ' . htmlentities(Config::get('project_name')) . ' developers.</h2>',\n-}//end report_this()\n-\n function hytera_h2f($number, $nd)\n {\n     if (strlen(str_replace(' ', '', $number)) == 4) {"
        },
        {
          "filename": "includes/html/pages/device/alerts.inc.php",
          "old_url": "https://raw.githubusercontent.com/librenms/librenms/114b01877d54363c7093f7e34427e79ed3154992/includes/html/pages/device/alerts.inc.php",
          "new_url": "https://raw.githubusercontent.com/librenms/librenms/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008/includes/html/pages/device/alerts.inc.php",
          "diff": "@@ -64,7 +64,7 @@\n \n     default:\n         echo '</div>',\n-        echo report_this('Unknown section ' . $vars['section']),\n+        echo 'Unknown section',\n         break,\n }\n "
        },
        {
          "filename": "includes/html/pages/device/logs.inc.php",
          "old_url": "https://raw.githubusercontent.com/librenms/librenms/114b01877d54363c7093f7e34427e79ed3154992/includes/html/pages/device/logs.inc.php",
          "new_url": "https://raw.githubusercontent.com/librenms/librenms/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008/includes/html/pages/device/logs.inc.php",
          "diff": "@@ -91,7 +91,7 @@\n \n     default:\n         echo '</div>',\n-        echo report_this('Unknown section ' . $vars['section']),\n+        echo 'Unknown section',\n         break,\n }\n "
        },
        {
          "filename": "includes/html/pages/routing.inc.php",
          "old_url": "https://raw.githubusercontent.com/librenms/librenms/114b01877d54363c7093f7e34427e79ed3154992/includes/html/pages/routing.inc.php",
          "new_url": "https://raw.githubusercontent.com/librenms/librenms/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008/includes/html/pages/routing.inc.php",
          "diff": "@@ -76,6 +76,6 @@\n         break,\n \n     default:\n-        echo report_this('Unknown protocol ' . $vars['protocol']),\n+        echo 'Unknown protocol',\n         break,\n }"
        },
        {
          "filename": "includes/html/pages/search.inc.php",
          "old_url": "https://raw.githubusercontent.com/librenms/librenms/114b01877d54363c7093f7e34427e79ed3154992/includes/html/pages/search.inc.php",
          "new_url": "https://raw.githubusercontent.com/librenms/librenms/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008/includes/html/pages/search.inc.php",
          "diff": "@@ -44,5 +44,5 @@\n if (file_exists(\"includes/html/pages/search/$search_type.inc.php\")) {\n     include \"includes/html/pages/search/$search_type.inc.php\",\n } else {\n-    echo report_this('Unknown search type ' . htmlspecialchars($search_type)),\n+    echo 'Unknown search type',\n }"
        },
        {
          "filename": "includes/html/pages/tools.inc.php",
          "old_url": "https://raw.githubusercontent.com/librenms/librenms/114b01877d54363c7093f7e34427e79ed3154992/includes/html/pages/tools.inc.php",
          "new_url": "https://raw.githubusercontent.com/librenms/librenms/30d3dd7e5f5e22a8c23c9db3ad90a731c005b008/includes/html/pages/tools.inc.php",
          "diff": "@@ -36,5 +36,5 @@\n if (file_exists(\"includes/html/pages/tools/$tools_type.inc.php\")) {\n     include \"includes/html/pages/tools/$tools_type.inc.php\",\n } else {\n-    echo report_this(\"Unknown tool type $tools_type\"),\n+    echo 'Unknown tool type',\n }"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62366",
        "https://github.com/eladnava/mailgen/commit/7279a983481d05c51aa451e86146f98aaa42fee9"
      ],
      "repo": "mailgen",
      "commit_hash": "7279a983481d05c51aa451e86146f98aaa42fee9",
      "commit_message": "index.js: Fix additional HTML injection security issue in plaintext e-mails (thanks @edoardottt)",
      "files_changed": [
        {
          "filename": "index.js",
          "old_url": "https://raw.githubusercontent.com/eladnava/mailgen/a28008ec07805e595f699d5a9c5674cf640fe625/index.js",
          "new_url": "https://raw.githubusercontent.com/eladnava/mailgen/7279a983481d05c51aa451e86146f98aaa42fee9/index.js",
          "diff": "@@ -122,12 +122,12 @@ Mailgen.prototype.generatePlaintext = function (params) {\n         output = output.replace(/^(?: |\\t)*/gm, \"\"),\n     }\n \n-    // Strip all HTML tags from plaintext output\n-    output = output.replace(/<(.|\\n)+?>/g, ''),\n-\n     // Decode HTML entities such as &copy,\n     output = he.decode(output),\n \n+    // Strip all HTML tags from plaintext output\n+    output = output.replace(/<(.|\\n)+?>/g, ''),\n+\n     // All done!\n     return output,\n },"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62374",
        "https://github.com/parse-community/Parse-SDK-JS/commit/00973987f361368659c0c4dbf669f3897520b132"
      ],
      "repo": "Parse-SDK-JS",
      "commit_hash": "00973987f361368659c0c4dbf669f3897520b132",
      "commit_message": "fix: Prototype pollution in `Parse.Object` and internal APIs, fixes security vulnerability [GHSA-9f2h-7v79-mxw](https://github.com/parse-community/Parse-SDK-JS/security/advisories/GHSA-9f2h-7v79-mxw3) (#2749)",
      "files_changed": [
        {
          "filename": "src/ObjectStateMutations.ts",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/ObjectStateMutations.ts",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/ObjectStateMutations.ts",
          "diff": "@@ -6,6 +6,7 @@ import TaskQueue from './TaskQueue',\n import { RelationOp } from './ParseOp',\n import type { Op } from './ParseOp',\n import type ParseObject from './ParseObject',\n+import { isDangerousKey } from \"./isDangerousKey\",\n \n export type AttributeMap = Record<string, any>,\n export type OpsMap = Record<string, Op>,\n@@ -21,17 +22,25 @@ export interface State {\n \n export function defaultState(): State {\n   return {\n-    serverData: {},\n-    pendingOps: [{}],\n-    objectCache: {},\n+    serverData: Object.create(null),\n+    pendingOps: [Object.create(null)],\n+    objectCache: Object.create(null),\n     tasks: new TaskQueue(),\n     existed: false,\n   },\n }\n \n export function setServerData(serverData: AttributeMap, attributes: AttributeMap) {\n   for (const attr in attributes) {\n-    if (typeof attributes[attr] !== 'undefined') {\n+    // Skip properties from prototype chain\n+    if (!Object.prototype.hasOwnProperty.call(attributes, attr)) {\n+      continue,\n+    }\n+    // Skip dangerous keys that could pollute prototypes\n+    if (isDangerousKey(attr)) {\n+      continue,\n+    }\n+    if (typeof attributes[attr] !== \"undefined\") {\n       serverData[attr] = attributes[attr],\n     } else {\n       delete serverData[attr],\n@@ -40,6 +49,10 @@ export function setServerData(serverData: AttributeMap, attributes: AttributeMap\n }\n \n export function setPendingOp(pendingOps: OpsMap[], attr: string, op?: Op) {\n+  // Skip dangerous keys that could pollute prototypes\n+  if (isDangerousKey(attr)) {\n+    return,\n+  }\n   const last = pendingOps.length - 1,\n   if (op) {\n     pendingOps[last][attr] = op,\n@@ -49,13 +62,13 @@ export function setPendingOp(pendingOps: OpsMap[], attr: string, op?: Op) {\n }\n \n export function pushPendingState(pendingOps: OpsMap[]) {\n-  pendingOps.push({}),\n+  pendingOps.push(Object.create(null)),\n }\n \n export function popPendingState(pendingOps: OpsMap[]): OpsMap {\n   const first = pendingOps.shift(),\n   if (!pendingOps.length) {\n-    pendingOps[0] = {},\n+    pendingOps[0] = Object.create(null),\n   }\n   return first,\n }\n@@ -64,6 +77,14 @@ export function mergeFirstPendingState(pendingOps: OpsMap[]) {\n   const first = popPendingState(pendingOps),\n   const next = pendingOps[0],\n   for (const attr in first) {\n+    // Skip properties from prototype chain\n+    if (!Object.prototype.hasOwnProperty.call(first, attr)) {\n+      continue,\n+    }\n+    // Skip dangerous keys that could pollute prototypes\n+    if (isDangerousKey(attr)) {\n+      continue,\n+    }\n     if (next[attr] && first[attr]) {\n       const merged = next[attr].mergeWith(first[attr]),\n       if (merged) {\n@@ -81,6 +102,10 @@ export function estimateAttribute(\n   object: ParseObject,\n   attr: string\n ): any {\n+  // Skip dangerous keys that could pollute prototypes\n+  if (isDangerousKey(attr)) {\n+    return undefined,\n+  }\n   let value = serverData[attr],\n   for (let i = 0, i < pendingOps.length, i++) {\n     if (pendingOps[i][attr]) {\n@@ -101,13 +126,21 @@ export function estimateAttributes(\n   pendingOps: OpsMap[],\n   object: ParseObject\n ): AttributeMap {\n-  const data = {},\n+  const data = Object.create(null),\n   let attr,\n   for (attr in serverData) {\n     data[attr] = serverData[attr],\n   }\n   for (let i = 0, i < pendingOps.length, i++) {\n     for (attr in pendingOps[i]) {\n+      // Skip properties from prototype chain\n+      if (!Object.prototype.hasOwnProperty.call(pendingOps[i], attr)) {\n+        continue,\n+      }\n+      // Skip dangerous keys that could pollute prototypes\n+      if (isDangerousKey(attr)) {\n+        continue,\n+      }\n       if (pendingOps[i][attr] instanceof RelationOp) {\n         if (object.id) {\n           data[attr] = (pendingOps[i][attr] as RelationOp).applyTo(data[attr], object, attr),\n@@ -125,7 +158,7 @@ export function estimateAttributes(\n               if (!isNaN(nextKey)) {\n                 object[key] = [],\n               } else {\n-                object[key] = {},\n+                object[key] = Object.create(null),\n               }\n             } else {\n               if (Array.isArray(object[key])) {\n@@ -165,7 +198,7 @@ function nestedSet(obj, key, value) {\n       if (!isNaN(nextPath)) {\n         obj[path] = [],\n       } else {\n-        obj[path] = {},\n+        obj[path] = Object.create(null),\n       }\n     }\n     obj = obj[path],\n@@ -184,6 +217,14 @@ export function commitServerChanges(\n ) {\n   const ParseObject = CoreManager.getParseObject(),\n   for (const attr in changes) {\n+    // Skip properties from prototype chain\n+    if (!Object.prototype.hasOwnProperty.call(changes, attr)) {\n+      continue,\n+    }\n+    // Skip dangerous keys that could pollute prototypes\n+    if (isDangerousKey(attr)) {\n+      continue,\n+    }\n     const val = changes[attr],\n     nestedSet(serverData, attr, val),\n     if ("
        },
        {
          "filename": "src/ParseObject.ts",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/ParseObject.ts",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/ParseObject.ts",
          "diff": "@@ -102,7 +102,7 @@ type ToJSON<T> = {\n \n // Mapping of class names to constructors, so we can populate objects from the\n // server with appropriate subclasses of ParseObject\n-const classMap: AttributeMap = {},\n+const classMap: AttributeMap = Object.create(null),\n \n // Global counter for generating unique Ids for non-single-instance objects\n let objectCount = 0,"
        },
        {
          "filename": "src/__tests__/ObjectStateMutations-test.js",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/__tests__/ObjectStateMutations-test.js",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/__tests__/ObjectStateMutations-test.js",
          "diff": "@@ -1,6 +1,7 @@\n jest.dontMock('../decode'),\n jest.dontMock('../encode'),\n jest.dontMock('../CoreManager'),\n+jest.dontMock('../isDangerousKey'),\n jest.dontMock('../ObjectStateMutations'),\n jest.dontMock('../ParseFile'),\n jest.dontMock('../ParseGeoPoint'),\n@@ -11,7 +12,7 @@ jest.dontMock('../TaskQueue'),\n const mockObject = function (className) {\n   this.className = className,\n },\n-mockObject.registerSubclass = function () {},\n+mockObject.registerSubclass = function () { },\n jest.setMock('../ParseObject', mockObject),\n const CoreManager = require('../CoreManager').default,\n CoreManager.setParseObject(mockObject),\n@@ -351,4 +352,56 @@ describe('ObjectStateMutations', () => {\n       existed: false,\n     }),\n   }),\n+\n+  describe('Prototype Pollution Protection', () => {\n+    beforeEach(() => {\n+      // Clear any pollution before each test\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+    }),\n+\n+    afterEach(() => {\n+      // Clean up after tests\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+    }),\n+\n+    it('should not pollute Object.prototype in estimateAttributes with malicious attribute names', () => {\n+      const testObj = {},\n+\n+      const serverData = {},\n+      const pendingOps = [\n+        {\n+          __proto__: new ParseOps.SetOp({ polluted: 'yes' }),\n+          constructor: new ParseOps.SetOp({ malicious: 'data' }),\n+        },\n+      ],\n+\n+      ObjectStateMutations.estimateAttributes(serverData, pendingOps, {\n+        className: 'TestClass',\n+        id: 'test123',\n+      }),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect(testObj.malicious).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect({}.malicious).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute Object.prototype in commitServerChanges with nested __proto__ path', () => {\n+      const testObj = {},\n+\n+      const serverData = {},\n+      const objectCache = {},\n+      ObjectStateMutations.commitServerChanges(serverData, objectCache, {\n+        '__proto__.polluted': 'exploited',\n+      }),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+    }),\n+  }),\n }),"
        },
        {
          "filename": "src/__tests__/ParseObject-test.js",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/__tests__/ParseObject-test.js",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/__tests__/ParseObject-test.js",
          "diff": "@@ -166,8 +166,8 @@ CoreManager.setInstallationController({\n   currentInstallationId() {\n     return Promise.resolve('iid'),\n   },\n-  currentInstallation() {},\n-  updateInstallationOnDisk() {},\n+  currentInstallation() { },\n+  updateInstallationOnDisk() { },\n }),\n CoreManager.set('APPLICATION_ID', 'A'),\n CoreManager.set('JAVASCRIPT_KEY', 'B'),\n@@ -1413,9 +1413,9 @@ describe('ParseObject', () => {\n     const objectController = CoreManager.getObjectController(),\n     const spy = jest\n       .spyOn(objectController, 'fetch')\n-      .mockImplementationOnce(() => {})\n-      .mockImplementationOnce(() => {})\n-      .mockImplementationOnce(() => {}),\n+      .mockImplementationOnce(() => { })\n+      .mockImplementationOnce(() => { })\n+      .mockImplementationOnce(() => { }),\n \n     const parent = new ParseObject('Person'),\n     await parent.fetchWithInclude('child', {\n@@ -1517,9 +1517,9 @@ describe('ParseObject', () => {\n     const objectController = CoreManager.getObjectController(),\n     const spy = jest\n       .spyOn(objectController, 'fetch')\n-      .mockImplementationOnce(() => {})\n-      .mockImplementationOnce(() => {})\n-      .mockImplementationOnce(() => {}),\n+      .mockImplementationOnce(() => { })\n+      .mockImplementationOnce(() => { })\n+      .mockImplementationOnce(() => { }),\n \n     const parent = new ParseObject('Person'),\n     await ParseObject.fetchAllWithInclude([parent], 'child', {\n@@ -1545,9 +1545,9 @@ describe('ParseObject', () => {\n     const objectController = CoreManager.getObjectController(),\n     const spy = jest\n       .spyOn(objectController, 'fetch')\n-      .mockImplementationOnce(() => {})\n-      .mockImplementationOnce(() => {})\n-      .mockImplementationOnce(() => {}),\n+      .mockImplementationOnce(() => { })\n+      .mockImplementationOnce(() => { })\n+      .mockImplementationOnce(() => { }),\n \n     const parent = new ParseObject('Person'),\n     await ParseObject.fetchAllIfNeededWithInclude([parent], 'child', {\n@@ -1610,7 +1610,7 @@ describe('ParseObject', () => {\n   }),\n \n   it('can save the object eventually', async () => {\n-    mockFetch([{ status: 200, response: {objectId: 'PFEventually' } }]),\n+    mockFetch([{ status: 200, response: { objectId: 'PFEventually' } }]),\n     const p = new ParseObject('Person'),\n     p.set('age', 38),\n     const obj = await p.saveEventually(),\n@@ -1623,7 +1623,7 @@ describe('ParseObject', () => {\n   it('can save the object eventually on network failure', async () => {\n     const p = new ParseObject('Person'),\n     jest.spyOn(EventuallyQueue, 'save').mockImplementationOnce(() => Promise.resolve()),\n-    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => {}),\n+    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => { }),\n     jest.spyOn(p, 'save').mockImplementationOnce(() => {\n       throw new ParseError(\n         ParseError.CONNECTION_FAILED,\n@@ -1638,7 +1638,7 @@ describe('ParseObject', () => {\n   it('should not save the object eventually on error', async () => {\n     const p = new ParseObject('Person'),\n     jest.spyOn(EventuallyQueue, 'save').mockImplementationOnce(() => Promise.resolve()),\n-    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => {}),\n+    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => { }),\n     jest.spyOn(p, 'save').mockImplementationOnce(() => {\n       throw new ParseError(ParseError.OTHER_CAUSE, 'Tried to save a batch with a cycle.'),\n     }),\n@@ -1751,12 +1751,12 @@ describe('ParseObject', () => {\n     const p = new ParseObject('Per$on'),\n     expect(p._getPendingOps().length).toBe(1),\n     p.increment('updates'),\n-    p.save().catch(() => {}),\n+    p.save().catch(() => { }),\n     jest.runAllTicks(),\n     await flushPromises(),\n     expect(p._getPendingOps().length).toBe(1),\n     p.set('updates', 12),\n-    p.save().catch(() => {}),\n+    p.save().catch(() => { }),\n     jest.runAllTicks(),\n     await flushPromises(),\n     expect(p._getPendingOps().length).toBe(1),\n@@ -2491,7 +2491,7 @@ describe('ObjectController', () => {\n \n   it('can fetch a single object', async () => {\n     const objectController = CoreManager.getObjectController(),\n-    mockFetch([{ status: 200, response: { objectId: 'pid'} }]),\n+    mockFetch([{ status: 200, response: { objectId: 'pid' } }]),\n \n     const o = new ParseObject('Person'),\n     o.id = 'pid',\n@@ -2535,7 +2535,7 @@ describe('ObjectController', () => {\n   it('can fetch a single object with include', async () => {\n     expect.assertions(2),\n     const objectController = CoreManager.getObjectController(),\n-    mockFetch([{ status: 200, response: { objectId: 'pid'} }]),\n+    mockFetch([{ status: 200, response: { objectId: 'pid' } }]),\n \n     const o = new ParseObject('Person'),\n     o.id = 'pid',\n@@ -2706,7 +2706,7 @@ describe('ObjectController', () => {\n   it('can destroy the object eventually on network failure', async () => {\n     const p = new ParseObject('Person'),\n     jest.spyOn(EventuallyQueue, 'destroy').mockImplementationOnce(() => Promise.resolve()),\n-    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => {}),\n+    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => { }),\n     jest.spyOn(p, 'destroy').mockImplementationOnce(() => {\n       throw new ParseError(\n         ParseError.CONNECTION_FAILED,\n@@ -2721,7 +2721,7 @@ describe('ObjectController', () => {\n   it('should not destroy object eventually on error', async () => {\n     const p = new ParseObject('Person'),\n     jest.spyOn(EventuallyQueue, 'destroy').mockImplementationOnce(() => Promise.resolve()),\n-    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => {}),\n+    jest.spyOn(EventuallyQueue, 'poll').mockImplementationOnce(() => { }),\n     jest.spyOn(p, 'destroy').mockImplementationOnce(() => {\n       throw new ParseError(ParseError.OTHER_CAUSE, 'Unable to delete.'),\n     }),\n@@ -2758,7 +2758,7 @@ describe('ObjectController', () => {\n     for (let i = 0, i < 3, i++) {\n       responses.push({\n         status: 200,\n-        response:{\n+        response: {\n           name: names[i],\n           url: 'http://files.parsetfss.com/a/' + names[i],\n         },\n@@ -3117,7 +3117,7 @@ describe('ParseObject Subclasses', () => {\n   }),\n \n   it('can use on ParseObject subclass for multiple Parse.Object class names', () => {\n-    class MyParseObjects extends ParseObject {}\n+    class MyParseObjects extends ParseObject { }\n     ParseObject.registerSubclass('TestObject', MyParseObjects),\n     ParseObject.registerSubclass('TestObject1', MyParseObjects),\n     ParseObject.registerSubclass('TestObject2', MyParseObjects),\n@@ -3542,4 +3542,119 @@ describe('ParseObject pin', () => {\n     ),\n     CoreManager.set('NODE_LOGGING', false),\n   }),\n+\n+  describe('Prototype Pollution Protection', () => {\n+    beforeEach(() => {\n+      // Clear any pollution before each test\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    afterEach(() => {\n+      // Clean up after tests\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    it('should not pollute Object.prototype via prototype className in registerSubclass', () => {\n+      const testObj = {},\n+\n+      class MaliciousClass extends ParseObject {\n+        constructor() {\n+          super('prototype'),\n+        }\n+      }\n+\n+      ParseObject.registerSubclass('prototype', MaliciousClass),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute Object.prototype when parsing JSON with __proto__ className', () => {\n+      const testObj = {},\n+\n+      const maliciousJSON = {\n+        className: '__proto__',\n+        objectId: 'test123',\n+        polluted: 'yes',\n+      },\n+\n+      ParseObject.fromJSON(maliciousJSON),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute Object.prototype when parsing JSON with constructor className', () => {\n+      const testObj = {},\n+\n+      const maliciousJSON = {\n+        className: 'constructor',\n+        objectId: 'test456',\n+        malicious: 'data',\n+      },\n+\n+      ParseObject.fromJSON(maliciousJSON),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.malicious).toBeUndefined(),\n+      expect({}.malicious).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute Object.prototype when parsing JSON with prototype className', () => {\n+      const testObj = {},\n+\n+      const maliciousJSON = {\n+        className: 'prototype',\n+        objectId: 'test789',\n+        exploit: 'here',\n+      },\n+\n+      ParseObject.fromJSON(maliciousJSON),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.exploit).toBeUndefined(),\n+      expect({}.exploit).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute when creating objects with malicious class names', () => {\n+      const testObj = {},\n+\n+      const maliciousClasses = ['__proto__', 'constructor', 'prototype'],\n+\n+      maliciousClasses.forEach(className => {\n+        const obj = new ParseObject(className),\n+        obj.set('polluted', 'yes'),\n+      }),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute when fromJSON is called multiple times with malicious classNames', () => {\n+      const testObj = {},\n+\n+      const maliciousObjects = [\n+        { className: '__proto__', objectId: '1', polluted: 'yes' },\n+        { className: 'constructor', objectId: '2', malicious: 'data' },\n+        { className: 'prototype', objectId: '3', exploit: 'here' },\n+      ],\n+\n+      maliciousObjects.forEach(json => ParseObject.fromJSON(json)),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect(testObj.malicious).toBeUndefined(),\n+      expect(testObj.exploit).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect({}.malicious).toBeUndefined(),\n+      expect({}.exploit).toBeUndefined(),\n+    }),\n+  }),\n }),"
        },
        {
          "filename": "src/__tests__/decode-test.js",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/__tests__/decode-test.js",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/__tests__/decode-test.js",
          "diff": "@@ -1,5 +1,6 @@\n jest.dontMock('../decode'),\n jest.dontMock('../CoreManager'),\n+jest.dontMock('../isDangerousKey'),\n jest.dontMock('../ParseFile'),\n jest.dontMock('../ParseGeoPoint'),\n jest.dontMock('../ParseObject'),\n@@ -120,4 +121,192 @@ describe('decode', () => {\n       count: 15,\n     }),\n   }),\n+\n+  describe('Prototype Pollution Protection', () => {\n+    beforeEach(() => {\n+      // Clear any pollution before each test\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    afterEach(() => {\n+      // Clean up after tests\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding object with __proto__ key', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        normalKey: 'value',\n+        __proto__: { polluted: 'yes' },\n+      },\n+\n+      const result = decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result only has own property\n+      expect(Object.prototype.hasOwnProperty.call(result, '__proto__')).toBe(false),\n+      expect(result.normalKey).toBe('value'),\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding object with constructor key', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        normalKey: 'value',\n+        constructor: { polluted: 'yes' },\n+      },\n+\n+      const result = decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result doesn't contain constructor from prototype chain\n+      expect(result.normalKey).toBe('value'),\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding object with prototype key', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        normalKey: 'value',\n+        prototype: { polluted: 'yes' },\n+      },\n+\n+      const result = decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result contains only own properties\n+      expect(result.normalKey).toBe('value'),\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding nested objects with dangerous keys', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        nested: {\n+          __proto__: { polluted: 'nested' },\n+          data: 'value',\n+        },\n+        normal: 'key',\n+      },\n+\n+      const result = decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result structure\n+      expect(result.normal).toBe('key'),\n+      expect(result.nested).toBeDefined(),\n+      expect(result.nested.data).toBe('value'),\n+      expect(Object.prototype.hasOwnProperty.call(result.nested, '__proto__')).toBe(false),\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding arrays with objects containing dangerous keys', () => {\n+      const testObj = {},\n+      const maliciousInput = [\n+        { __proto__: { polluted: 'array1' } },\n+        { constructor: { malicious: 'array2' } },\n+        { normalKey: 'value' },\n+      ],\n+\n+      const result = decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect(testObj.malicious).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect({}.malicious).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+      expect(Object.prototype.malicious).toBeUndefined(),\n+\n+      // Verify result array\n+      expect(Array.isArray(result)).toBe(true),\n+      expect(result.length).toBe(3),\n+      expect(result[2].normalKey).toBe('value'),\n+    }),\n+\n+    it('should only decode own properties, not inherited ones', () => {\n+      const parent = { inherited: 'parent' },\n+      const child = Object.create(parent),\n+      child.own = 'child',\n+\n+      const result = decode(child),\n+\n+      // Should only include own property\n+      expect(result.own).toBe('child'),\n+      expect(result.inherited).toBeUndefined(),\n+    }),\n+\n+    it('should not decode properties from prototype chain', () => {\n+      Object.prototype.exploit = 'malicious',\n+      const obj = { normalKey: 'value' },\n+\n+      const result = decode(obj),\n+\n+      // Should not include prototype property\n+      expect(result.normalKey).toBe('value'),\n+      expect(Object.prototype.hasOwnProperty.call(result, 'exploit')).toBe(false),\n+\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding Parse type with dangerous className', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        __type: 'Pointer',\n+        className: '__proto__',\n+        objectId: 'test123',\n+      },\n+\n+      // This should be handled by ParseObject.fromJSON\n+      decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+    }),\n+\n+    it('should not pollute Object.prototype when decoding deeply nested dangerous keys', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        level1: {\n+          level2: {\n+            level3: {\n+              __proto__: { polluted: 'deep' },\n+              normalData: 'value',\n+            },\n+          },\n+        },\n+      },\n+\n+      const result = decode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result structure is preserved (without dangerous keys)\n+      expect(result.level1.level2.level3.normalData).toBe('value'),\n+      expect(Object.prototype.hasOwnProperty.call(result.level1.level2.level3, '__proto__')).toBe(\n+        false\n+      ),\n+    }),\n+  }),\n }),"
        },
        {
          "filename": "src/__tests__/encode-test.js",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/__tests__/encode-test.js",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/__tests__/encode-test.js",
          "diff": "@@ -1,4 +1,5 @@\n jest.dontMock('../encode'),\n+jest.dontMock('../isDangerousKey'),\n jest.dontMock('../ParseACL'),\n jest.dontMock('../ParseFile'),\n jest.dontMock('../ParseGeoPoint'),\n@@ -193,4 +194,148 @@ describe('encode', () => {\n       str: 'abc',\n     }),\n   }),\n+\n+  describe('Prototype Pollution Protection', () => {\n+    beforeEach(() => {\n+      // Clear any pollution before each test\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    afterEach(() => {\n+      // Clean up after tests\n+      delete Object.prototype.polluted,\n+      delete Object.prototype.malicious,\n+      delete Object.prototype.exploit,\n+    }),\n+\n+    it('should not pollute Object.prototype when encoding object with __proto__ key', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        normalKey: 'value',\n+        __proto__: { polluted: 'yes' },\n+      },\n+\n+      const result = encode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result only has own property\n+      expect(Object.prototype.hasOwnProperty.call(result, '__proto__')).toBe(false),\n+      expect(result.normalKey).toBe('value'),\n+    }),\n+\n+    it('should not pollute Object.prototype when encoding object with constructor key', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        normalKey: 'value',\n+        constructor: { polluted: 'yes' },\n+      },\n+\n+      const result = encode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result doesn't contain constructor from prototype chain\n+      expect(result.normalKey).toBe('value'),\n+    }),\n+\n+    it('should not pollute Object.prototype when encoding object with prototype key', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        normalKey: 'value',\n+        prototype: { polluted: 'yes' },\n+      },\n+\n+      const result = encode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result contains only own properties\n+      expect(result.normalKey).toBe('value'),\n+    }),\n+\n+    it('should not pollute Object.prototype when encoding nested objects with dangerous keys', () => {\n+      const testObj = {},\n+      const maliciousInput = {\n+        nested: {\n+          __proto__: { polluted: 'nested' },\n+          data: 'value',\n+        },\n+        normal: 'key',\n+      },\n+\n+      const result = encode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+\n+      // Verify result structure\n+      expect(result.normal).toBe('key'),\n+      expect(result.nested).toBeDefined(),\n+      expect(result.nested.data).toBe('value'),\n+      expect(Object.prototype.hasOwnProperty.call(result.nested, '__proto__')).toBe(false),\n+    }),\n+\n+    it('should not pollute Object.prototype when encoding arrays with objects containing dangerous keys', () => {\n+      const testObj = {},\n+      const maliciousInput = [\n+        { __proto__: { polluted: 'array1' } },\n+        { constructor: { malicious: 'array2' } },\n+        { normalKey: 'value' },\n+      ],\n+\n+      const result = encode(maliciousInput),\n+\n+      // Verify Object.prototype was not polluted\n+      expect(testObj.polluted).toBeUndefined(),\n+      expect(testObj.malicious).toBeUndefined(),\n+      expect({}.polluted).toBeUndefined(),\n+      expect({}.malicious).toBeUndefined(),\n+      expect(Object.prototype.polluted).toBeUndefined(),\n+      expect(Object.prototype.malicious).toBeUndefined(),\n+\n+      // Verify result array\n+      expect(Array.isArray(result)).toBe(true),\n+      expect(result.length).toBe(3),\n+      expect(result[2].normalKey).toBe('value'),\n+    }),\n+\n+    it('should only encode own properties, not inherited ones', () => {\n+      const parent = { inherited: 'parent' },\n+      const child = Object.create(parent),\n+      child.own = 'child',\n+\n+      const result = encode(child),\n+\n+      // Should only include own property\n+      expect(result.own).toBe('child'),\n+      expect(result.inherited).toBeUndefined(),\n+    }),\n+\n+    it('should not encode properties from prototype chain', () => {\n+      Object.prototype.exploit = 'malicious',\n+      const obj = { normalKey: 'value' },\n+\n+      const result = encode(obj),\n+\n+      // Should not include prototype property\n+      expect(result.normalKey).toBe('value'),\n+      expect(Object.prototype.hasOwnProperty.call(result, 'exploit')).toBe(false),\n+\n+      delete Object.prototype.exploit,\n+    }),\n+  }),\n }),"
        },
        {
          "filename": "src/decode.ts",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/decode.ts",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/decode.ts",
          "diff": "@@ -3,6 +3,7 @@ import ParseFile from './ParseFile',\n import ParseGeoPoint from './ParseGeoPoint',\n import ParsePolygon from './ParsePolygon',\n import ParseRelation from './ParseRelation',\n+import { isDangerousKey } from \"./isDangerousKey\",\n \n export default function decode(value: any): any {\n   if (value === null || typeof value !== 'object' || value instanceof Date) {\n@@ -49,7 +50,13 @@ export default function decode(value: any): any {\n   }\n   const copy = {},\n   for (const k in value) {\n-    copy[k] = decode(value[k]),\n+    if (Object.prototype.hasOwnProperty.call(value, k)) {\n+      // Skip dangerous keys that could pollute prototypes\n+      if (isDangerousKey(k)) {\n+        continue,\n+      }\n+      copy[k] = decode(value[k]),\n+    }\n   }\n   return copy,\n }"
        },
        {
          "filename": "src/encode.ts",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/encode.ts",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/encode.ts",
          "diff": "@@ -4,6 +4,7 @@ import ParseFile from './ParseFile',\n import ParseGeoPoint from './ParseGeoPoint',\n import ParsePolygon from './ParsePolygon',\n import ParseRelation from './ParseRelation',\n+import { isDangerousKey } from \"./isDangerousKey\",\n \n function encode(\n   value: any,\n@@ -71,7 +72,20 @@ function encode(\n   if (value && typeof value === 'object') {\n     const output = {},\n     for (const k in value) {\n-      output[k] = encode(value[k], disallowObjects, forcePointers, seen, offline),\n+      // Only iterate over own properties\n+      if (Object.prototype.hasOwnProperty.call(value, k)) {\n+        // Skip dangerous keys that could pollute prototypes\n+        if (isDangerousKey(k)) {\n+          continue,\n+        }\n+        output[k] = encode(\n+          value[k],\n+          disallowObjects,\n+          forcePointers,\n+          seen,\n+          offline\n+        ),\n+      }\n     }\n     return output,\n   }"
        },
        {
          "filename": "src/isDangerousKey.ts",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/src/isDangerousKey.ts",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/src/isDangerousKey.ts",
          "diff": "@@ -0,0 +1,19 @@\n+/**\n+ * Check if a property name or path is potentially dangerous for prototype pollution\n+ * Dangerous keys include: __proto__, constructor, prototype\n+ * @param key - The property name or dotted path to check\n+ * @returns true if the key is dangerous, false otherwise\n+ */\n+export function isDangerousKey(key: string): boolean {\n+  const dangerousKeys = [\"__proto__\", \"constructor\", \"prototype\"],\n+  // Check if the key itself is dangerous\n+  if (dangerousKeys.includes(key)) {\n+    return true,\n+  }\n+  // Check if any part of a dotted path is dangerous\n+  if (key.includes(\".\")) {\n+    const parts = key.split(\".\"),\n+    return parts.some((part) => dangerousKeys.includes(part)),\n+  }\n+  return false,\n+}"
        },
        {
          "filename": "types/isDangerousKey.d.ts",
          "old_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/9e7c1bad472b1ed2463cbac567b8ec752ae5b4c9/types/isDangerousKey.d.ts",
          "new_url": "https://raw.githubusercontent.com/parse-community/Parse-SDK-JS/00973987f361368659c0c4dbf669f3897520b132/types/isDangerousKey.d.ts",
          "diff": "@@ -0,0 +1,7 @@\n+/**\n+ * Check if a property name or path is potentially dangerous for prototype pollution\n+ * Dangerous keys include: __proto__, constructor, prototype\n+ * @param key - The property name or dotted path to check\n+ * @returns true if the key is dangerous, false otherwise\n+ */\n+export declare function isDangerousKey(key: string): boolean,"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62379",
        "https://github.com/reflex-dev/reflex/commit/ade12549f3c0ddab3d7382c581bc04a3c1f989ec"
      ],
      "repo": "reflex",
      "commit_hash": "ade12549f3c0ddab3d7382c581bc04a3c1f989ec",
      "commit_message": "check domain before redirecting in codespaces (#5886)  * check domain before redirecting in codespaces  * ends with app.github.dev  * console warn",
      "files_changed": [
        {
          "filename": "reflex/utils/codespaces.py",
          "old_url": "https://raw.githubusercontent.com/reflex-dev/reflex/b7958c95813550d2126fccd8e142da6e6efe6df7/reflex/utils/codespaces.py",
          "new_url": "https://raw.githubusercontent.com/reflex-dev/reflex/ade12549f3c0ddab3d7382c581bc04a3c1f989ec/reflex/utils/codespaces.py",
          "diff": "@@ -26,11 +26,40 @@ def redirect_script() -> str:\n const thisUrl = new URL(window.location.href),\n const params = new URLSearchParams(thisUrl.search)\n \n+function sameHostnameDifferentPort(one, two) {{\n+    const hostnameOne = one.hostname,\n+    const hostnameTwo = two.hostname,\n+    const partsOne = hostnameOne.split(\".\"),\n+    const partsTwo = hostnameTwo.split(\".\"),\n+    if (partsOne.length !== partsTwo.length) {{ return false,  }}\n+    for (let i = 1, i < partsOne.length, i++) {{\n+        if (partsOne[i] !== partsTwo[i]) {{ return false, }}\n+    }}\n+    const uniqueNameOne = partsOne[0],\n+    const uniqueNameTwo = partsTwo[0],\n+    const uniqueNamePartsOne = uniqueNameOne.split(\"-\"),\n+    const uniqueNamePartsTwo = uniqueNameTwo.split(\"-\"),\n+    if (uniqueNamePartsOne.length !== uniqueNamePartsTwo.length) {{ return false,  }}\n+    for (let i = 0, i < uniqueNamePartsOne.length - 1, i++) {{\n+        if (uniqueNamePartsOne[i] !== uniqueNamePartsTwo[i]) {{ return false,  }}\n+    }}\n+    return true,\n+}}\n+\n function doRedirect(url) {{\n     if (!window.sessionStorage.getItem(\"authenticated_github_codespaces\")) {{\n         const a = document.createElement(\"a\"),\n         if (params.has(\"redirect_to\")) {{\n-            a.href = params.get(\"redirect_to\")\n+            const redirect_to = new URL(params.get(\"redirect_to\")),\n+            if (!sameHostnameDifferentPort(thisUrl, redirect_to)) {{\n+                console.warn(\"Reflex: Not redirecting to different hostname\"),\n+                return,\n+            }}\n+            if (!redirect_to.hostname.endsWith(\".app.github.dev\")) {{\n+                console.warn(\"Reflex: Not redirecting to non .app.github.dev hostname\"),\n+                return,\n+            }}\n+            a.href = redirect_to.href,\n         }} else if (!window.location.href.startsWith(url)) {{\n             a.href = url + `?redirect_to=${{window.location.href}}`\n         }} else {{"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62380",
        "https://github.com/eladnava/mailgen/commit/7a791a424ff3a3f7783f8750919f1e98639924a8"
      ],
      "repo": "mailgen",
      "commit_hash": "7a791a424ff3a3f7783f8750919f1e98639924a8",
      "commit_message": "index.js: Fix additional HTML injection security issue in plaintext e-mails (thanks @edoardottt)",
      "files_changed": [
        {
          "filename": "index.js",
          "old_url": "https://raw.githubusercontent.com/eladnava/mailgen/cedddb6a672bf047d98b0053677310583d55ea45/index.js",
          "new_url": "https://raw.githubusercontent.com/eladnava/mailgen/7a791a424ff3a3f7783f8750919f1e98639924a8/index.js",
          "diff": "@@ -126,7 +126,7 @@ Mailgen.prototype.generatePlaintext = function (params) {\n     output = he.decode(output),\n \n     // Strip all HTML tags from plaintext output\n-    output = output.replace(/<(.|\\n)+?>/g, ''),\n+    output = output.replace(/<.+?>/gs, ''),\n \n     // All done!\n     return output,"
        }
      ]
    }
  ],
  [
    {
      "cve_id": [
        "CVE-2025-62371",
        "https://github.com/opensearch-project/data-prepper/commit/98fcf0d0ff9c18f1f7501e11dbed918814724b99"
      ],
      "repo": "data-prepper",
      "commit_hash": "98fcf0d0ff9c18f1f7501e11dbed918814724b99",
      "commit_message": "Require full TLS trust in OpenSearch plugins by default unless insecure is configured (#6165)  Require full TLS trust in OpenSearch plugins by default unless insecure is configured. Update the integration tests and end-to-end tests to set the insecure flag.  Co-authored-by: Jeremy Michael <jsusanto@amazon.com>  Signed-off-by: David Venable <dlv@amazon.com> Signed-off-by: Jeremy Michael <jsusanto@amazon.com>",
      "files_changed": [
        {
          "filename": "data-prepper-plugins/opensearch/build.gradle",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/build.gradle",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/build.gradle",
          "diff": "@@ -47,6 +47,7 @@ dependencies {\n     testImplementation 'net.bytebuddy:byte-buddy-agent:1.17.6'\n     testImplementation testLibs.slf4j.simple\n     testImplementation project(path: ':data-prepper-test:test-common')\n+    testImplementation 'org.wiremock:wiremock:3.10.0'\n }\n \n sourceSets {"
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/integrationTest/java/org/opensearch/dataprepper/plugins/sink/opensearch/OpenSearchIT.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/integrationTest/java/org/opensearch/dataprepper/plugins/sink/opensearch/OpenSearchIT.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/integrationTest/java/org/opensearch/dataprepper/plugins/sink/opensearch/OpenSearchIT.java",
          "diff": "@@ -32,6 +32,7 @@ public void testOpenSearchConnection() throws IOException {\n             builder.withUsername(user),\n             builder.withPassword(password),\n         }\n+        builder.withInsecure(true),\n         final AwsCredentialsSupplier awsCredentialsSupplier = mock(AwsCredentialsSupplier.class),\n         final RestHighLevelClient client = builder.build().createClient(awsCredentialsSupplier),\n "
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/integrationTest/java/org/opensearch/dataprepper/plugins/sink/opensearch/OpenSearchSinkIT.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/integrationTest/java/org/opensearch/dataprepper/plugins/sink/opensearch/OpenSearchSinkIT.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/integrationTest/java/org/opensearch/dataprepper/plugins/sink/opensearch/OpenSearchSinkIT.java",
          "diff": "@@ -1691,6 +1691,7 @@ private Map<String, Object> initializeConfigurationMetadata(final String indexTy\n         metadata.put(IndexConfiguration.INDEX_ALIAS, indexAlias),\n         metadata.put(IndexConfiguration.TEMPLATE_FILE, templateFilePath),\n         metadata.put(IndexConfiguration.FLUSH_TIMEOUT, -1),\n+        metadata.put(\"insecure\", true),\n         final String user = System.getProperty(\"tests.opensearch.user\"),\n         final String password = System.getProperty(\"tests.opensearch.password\"),\n         if (user != null) {"
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/main/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfiguration.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/main/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfiguration.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/main/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfiguration.java",
          "diff": "@@ -384,8 +384,18 @@ private void checkProxyPort(final int port) {\n   }\n \n   private void attachSSLContext(final HttpAsyncClientBuilder httpClientBuilder) {\n-    final SSLContext sslContext = certPath != null ? getCAStrategy(certPath) : getTrustAllStrategy(),\n-    httpClientBuilder.setSSLContext(sslContext),\n+    final SSLContext sslContext,\n+    if(certPath != null) {\n+      sslContext = getCAStrategy(certPath),\n+    } else if(this.insecure) {\n+      sslContext = getTrustAllStrategy(),\n+    } else {\n+      sslContext = null,\n+    }\n+    if(sslContext != null) {\n+      httpClientBuilder.setSSLContext(sslContext),\n+    }\n+\n     if (this.insecure) {\n       httpClientBuilder.setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE),\n     }\n@@ -439,7 +449,7 @@ private OpenSearchTransport createOpenSearchTransport(final RestHighLevelClient\n         transportOptions.setRequestCompressionSize(Integer.MAX_VALUE),\n       }\n \n-      return new AwsSdk2Transport(createSdkHttpClient(), HttpHost.create(hosts.get(0)).getHostName(),\n+      return new AwsSdk2Transport(createSdkHttpClient(), HttpHost.create(hosts.get(0)).toHostString(),\n               serviceName, Region.of(awsRegion), transportOptions.build()),\n     } else {\n       return new RestClientTransport(\n@@ -461,11 +471,13 @@ private SdkHttpClient createSdkHttpClient() {\n   }\n \n   private void attachSSLContext(final ApacheHttpClient.Builder apacheHttpClientBuilder) {\n-    TrustManager[] trustManagers = createTrustManagers(certPath),\n-    apacheHttpClientBuilder.tlsTrustManagersProvider(() -> trustManagers),\n+    TrustManager[] trustManagers = createTrustManagers(certPath, insecure),\n+    if(trustManagers.length > 0) {\n+      apacheHttpClientBuilder.tlsTrustManagersProvider(() -> trustManagers),\n+    }\n   }\n \n-  private static TrustManager[] createTrustManagers(final Path certPath) {\n+  private static TrustManager[] createTrustManagers(final Path certPath, final boolean insecure) {\n     if (certPath != null) {\n       LOG.info(\"Using the cert provided in the config.\"),\n       try (InputStream certificateInputStream = Files.newInputStream(certPath)) {\n@@ -481,8 +493,11 @@ private static TrustManager[] createTrustManagers(final Path certPath) {\n       } catch (Exception ex) {\n         throw new RuntimeException(ex.getMessage(), ex),\n       }\n-    } else {\n+    } else if(insecure) {\n+      LOG.info(\"Using the trust all strategy\"),\n       return new TrustManager[] { new X509TrustAllManager() },\n+    } else {\n+      return new TrustManager[0],\n     }\n   }\n "
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/main/java/org/opensearch/dataprepper/plugins/source/opensearch/worker/client/OpenSearchClientFactory.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/main/java/org/opensearch/dataprepper/plugins/source/opensearch/worker/client/OpenSearchClientFactory.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/main/java/org/opensearch/dataprepper/plugins/source/opensearch/worker/client/OpenSearchClientFactory.java",
          "diff": "@@ -271,7 +271,9 @@ private void setConnectAndSocketTimeout(final org.elasticsearch.client.RestClien\n \n     private void attachSSLContext(final NettyNioAsyncHttpClient.Builder asyncClientBuilder, final OpenSearchSourceConfiguration openSearchSourceConfiguration) {\n         TrustManager[] trustManagers = createTrustManagers(openSearchSourceConfiguration.getConnectionConfiguration()),\n-        asyncClientBuilder.tlsTrustManagersProvider(() -> trustManagers),\n+        if (trustManagers.length > 0) {\n+            asyncClientBuilder.tlsTrustManagersProvider(() -> trustManagers),\n+        }\n     }\n \n     private void attachSSLContext(final HttpAsyncClientBuilder httpClientBuilder, final OpenSearchSourceConfiguration openSearchSourceConfiguration) {\n@@ -287,31 +289,37 @@ private void attachSSLContext(final HttpAsyncClientBuilder httpClientBuilder, fi\n \n     private TrustManager[] createTrustManagers(final ConnectionConfiguration connectionConfiguration) {\n         final Path certPath = connectionConfiguration.getCertPath(),\n-        if (Objects.nonNull(certPath)) {\n+        final String certificate = connectionConfiguration.getCertificate(),\n+        if (certPath != null) {\n             return TrustStoreProvider.createTrustManager(certPath),\n-        } else if (Objects.nonNull(connectionConfiguration.getCertificate())) {\n-            if (PemObjectValidator.isPemObject(connectionConfiguration.getCertificate())) {\n-                return TrustStoreProvider.createTrustManager(connectionConfiguration.getCertificate()),\n+        } else if (certificate != null) {\n+            if (PemObjectValidator.isPemObject(certificate)) {\n+                return TrustStoreProvider.createTrustManager(certificate),\n             } else {\n-                return TrustStoreProvider.createTrustManager(Path.of(connectionConfiguration.getCertificate())),\n-            }\n-        } else {\n+                return TrustStoreProvider.createTrustManager(Path.of(certificate)),}\n+        } else if (connectionConfiguration.isInsecure()) {\n             return TrustStoreProvider.createTrustAllManager(),\n+\n+        } else {\n+            return new TrustManager[0],\n         }\n     }\n \n     private SSLContext getCAStrategy(final ConnectionConfiguration connectionConfiguration) {\n         final Path certPath = connectionConfiguration.getCertPath(),\n-        if (Objects.nonNull(certPath)) {\n+        final String certificate = connectionConfiguration.getCertificate(),\n+        if (certPath != null) {\n             return TrustStoreProvider.createSSLContext(certPath),\n-        } else if (Objects.nonNull(connectionConfiguration.getCertificate())) {\n-            if (PemObjectValidator.isPemObject(connectionConfiguration.getCertificate())) {\n-                return TrustStoreProvider.createSSLContext(connectionConfiguration.getCertificate()),\n+        } else if (certificate != null) {\n+            if (PemObjectValidator.isPemObject(certificate)) {\n+                return TrustStoreProvider.createSSLContext(certificate),\n             } else {\n                 return TrustStoreProvider.createSSLContext(Path.of(connectionConfiguration.getCertificate())),\n             }\n+        } else if (connectionConfiguration.isInsecure()) {\n+                return TrustStoreProvider.createSSLContextWithTrustAllStrategy(),\n         } else {\n-            return TrustStoreProvider.createSSLContextWithTrustAllStrategy(),\n+            return null,\n         }\n     }\n }"
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfigurationTests.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfigurationTests.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfigurationTests.java",
          "diff": "@@ -150,7 +150,6 @@ void testCreateOpenSearchClientAwsServerlessDefault() throws IOException {\n         when(awsCredentialsSupplier.getProvider(any())).thenReturn(awsCredentialsProvider),\n \n         final RestHighLevelClient client = connectionConfiguration.createClient(awsCredentialsSupplier),\n-        when(apacheHttpClientBuilder.tlsTrustManagersProvider(any())).thenReturn(apacheHttpClientBuilder),\n         when(apacheHttpClientBuilder.build()).thenReturn(apacheHttpClient),\n         final OpenSearchClient openSearchClient,\n         try (final MockedStatic<ApacheHttpClient> apacheHttpClientMockedStatic = mockStatic(ApacheHttpClient.class)) {\n@@ -160,7 +159,6 @@ void testCreateOpenSearchClientAwsServerlessDefault() throws IOException {\n         assertNotNull(openSearchClient),\n         assertThat(openSearchClient._transport(), instanceOf(AwsSdk2Transport.class)),\n         assertThat(openSearchClient._transport().jsonpMapper(), instanceOf(PreSerializedJsonpMapper.class)),\n-        verify(apacheHttpClientBuilder).tlsTrustManagersProvider(any()),\n         verify(apacheHttpClientBuilder).build(),\n         openSearchClient.shutdown(),\n         client.close(),"
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfiguration_ServerTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfiguration_ServerTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/sink/opensearch/ConnectionConfiguration_ServerTest.java",
          "diff": "@@ -0,0 +1,186 @@\n+/*\n+ * Copyright OpenSearch Contributors\n+ * SPDX-License-Identifier: Apache-2.0\n+ */\n+\n+package org.opensearch.dataprepper.plugins.sink.opensearch,\n+\n+import com.github.tomakehurst.wiremock.WireMockServer,\n+import org.junit.jupiter.api.AfterAll,\n+import org.junit.jupiter.api.BeforeAll,\n+import org.junit.jupiter.api.BeforeEach,\n+import org.junit.jupiter.api.Nested,\n+import org.junit.jupiter.api.Test,\n+import org.junit.jupiter.api.extension.ExtendWith,\n+import org.mockito.Mock,\n+import org.mockito.junit.jupiter.MockitoExtension,\n+import org.opensearch.client.RequestOptions,\n+import org.opensearch.client.RestHighLevelClient,\n+import org.opensearch.client.core.MainResponse,\n+import org.opensearch.client.opensearch.OpenSearchClient,\n+import org.opensearch.client.opensearch.core.InfoResponse,\n+import org.opensearch.dataprepper.aws.api.AwsCredentialsSupplier,\n+import software.amazon.awssdk.auth.credentials.AnonymousCredentialsProvider,\n+\n+import javax.net.ssl.SSLHandshakeException,\n+import java.io.IOException,\n+import java.util.Collections,\n+import java.util.Map,\n+import java.util.UUID,\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.get,\n+import static com.github.tomakehurst.wiremock.client.WireMock.jsonResponse,\n+import static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options,\n+import static org.hamcrest.CoreMatchers.equalTo,\n+import static org.hamcrest.CoreMatchers.notNullValue,\n+import static org.hamcrest.MatcherAssert.assertThat,\n+import static org.junit.jupiter.api.Assertions.assertThrows,\n+import static org.mockito.ArgumentMatchers.any,\n+import static org.mockito.Mockito.when,\n+\n+@ExtendWith(MockitoExtension.class)\n+class ConnectionConfiguration_ServerTest {\n+    private static WireMockServer wireMockServer,\n+\n+    @Mock\n+    private AwsCredentialsSupplier awsCredentialsSupplier,\n+\n+    private String host,\n+\n+    private String clusterUuid,\n+\n+    @BeforeAll\n+    static void setUpAll() {\n+        wireMockServer = new WireMockServer(options()\n+                .httpDisabled(true)\n+                .dynamicHttpsPort()\n+                .keystorePath(\"src/test/resources/test_keystore.jks\")\n+                .keystorePassword(\"password\")\n+                .keyManagerPassword(\"password\")\n+        ),\n+\n+        wireMockServer.start(),\n+    }\n+\n+    @AfterAll\n+    static void tearDownAll() {\n+        wireMockServer.stop(),\n+    }\n+\n+    @BeforeEach\n+    void setUp() {\n+        host = \"https://localhost:\" + wireMockServer.httpsPort(),\n+\n+        clusterUuid = UUID.randomUUID().toString(),\n+        final Map<String, Object> responseBody = Map.of(\n+                \"name\", \"opensearch\",\n+                \"cluster_name\", \"opensearch\",\n+                \"cluster_uuid\", clusterUuid,\n+                \"version\", Map.of(\n+                        \"number\", \"2.10.0\",\n+                        \"build_hash\", \"abcdefg\",\n+                        \"build_date\", \"20241212\",\n+                        \"build_type\", \"testing\",\n+                        \"distribution\", \"datapreppertesting\",\n+                        \"build_snapshot\", \"false\",\n+                        \"lucene_version\", \"8\",\n+                        \"minimum_wire_compatibility_version\", \"2.10.0\",\n+                        \"minimum_index_compatibility_version\", \"2.10.0\"\n+                ),\n+                \"tagline\", \"You Know, for Search\"\n+        ),\n+        wireMockServer.stubFor(get(\"/\").willReturn(jsonResponse(responseBody, 200))),\n+    }\n+\n+    @Nested\n+    class DefaultConfiguration {\n+        private ConnectionConfiguration createObjectUnderTest() {\n+            return new ConnectionConfiguration.Builder(Collections.singletonList(host))\n+                    .build(),\n+        }\n+\n+        @Test\n+        void createClient_will_not_trust_self_signed_certificates_by_default() {\n+            final RestHighLevelClient client = createObjectUnderTest().createClient(awsCredentialsSupplier),\n+            assertThat(client, notNullValue()),\n+\n+            assertThrows(SSLHandshakeException.class, () -> client.info(RequestOptions.DEFAULT)),\n+        }\n+\n+        @Test\n+        void createOpenSearchClient_will_not_trust_self_signed_certificates_by_default() {\n+            final ConnectionConfiguration objectUnderTest = createObjectUnderTest(),\n+            final OpenSearchClient openSearchClient = objectUnderTest.createOpenSearchClient(objectUnderTest.createClient(awsCredentialsSupplier), awsCredentialsSupplier),\n+            assertThat(openSearchClient, notNullValue()),\n+\n+            assertThrows(SSLHandshakeException.class, openSearchClient::info),\n+        }\n+    }\n+\n+    @Nested\n+    class DefaultSigV4Configuration {\n+        @BeforeEach\n+        void setUp() {\n+            when(awsCredentialsSupplier.getProvider(any())).thenReturn(AnonymousCredentialsProvider.create()),\n+        }\n+\n+        private ConnectionConfiguration createObjectUnderTest() {\n+            return new ConnectionConfiguration.Builder(Collections.singletonList(host))\n+                    .withAwsSigv4(true)\n+                    .withAwsRegion(\"us-east-1\")\n+                    .build(),\n+        }\n+\n+        @Test\n+        void createClient_will_not_trust_self_signed_certificates_by_default() {\n+            final RestHighLevelClient client = createObjectUnderTest().createClient(awsCredentialsSupplier),\n+            assertThat(client, notNullValue()),\n+\n+            assertThrows(SSLHandshakeException.class, () -> client.info(RequestOptions.DEFAULT)),\n+        }\n+\n+        @Test\n+        void createOpenSearchClient_will_not_trust_self_signed_certificates_by_default() {\n+            final ConnectionConfiguration objectUnderTest = createObjectUnderTest(),\n+            final OpenSearchClient openSearchClient = objectUnderTest.createOpenSearchClient(objectUnderTest.createClient(awsCredentialsSupplier), awsCredentialsSupplier),\n+            assertThat(openSearchClient, notNullValue()),\n+\n+            assertThrows(SSLHandshakeException.class, openSearchClient::info),\n+        }\n+    }\n+\n+    @Nested\n+    class InsecureConfiguration {\n+        private ConnectionConfiguration createObjectUnderTest() {\n+            return new ConnectionConfiguration.Builder(Collections.singletonList(host))\n+                    .withInsecure(true)\n+                    .build(),\n+        }\n+\n+        @Test\n+        void createClient_will_trust_self_signed_certificates_if_insecure() throws IOException {\n+            final RestHighLevelClient client = createObjectUnderTest().createClient(awsCredentialsSupplier),\n+            assertThat(client, notNullValue()),\n+\n+            final MainResponse infoResponse = client.info(RequestOptions.DEFAULT),\n+\n+            assertThat(infoResponse, notNullValue()),\n+            assertThat(infoResponse.getClusterName(), equalTo(\"opensearch\")),\n+            assertThat(infoResponse.getClusterUuid(), equalTo(clusterUuid)),\n+        }\n+\n+\n+        @Test\n+        void createOpenSearchClient_will_trust_self_signed_certificates_if_insecure() throws IOException {\n+            final ConnectionConfiguration objectUnderTest = createObjectUnderTest(),\n+            final OpenSearchClient openSearchClient = objectUnderTest.createOpenSearchClient(objectUnderTest.createClient(awsCredentialsSupplier), awsCredentialsSupplier),\n+            assertThat(openSearchClient, notNullValue()),\n+\n+            final InfoResponse infoResponse = openSearchClient.info(),\n+\n+            assertThat(infoResponse, notNullValue()),\n+            assertThat(infoResponse.clusterName(), equalTo(\"opensearch\")),\n+            assertThat(infoResponse.clusterUuid(), equalTo(clusterUuid)),\n+        }\n+    }\n+}\n\\ No newline at end of file"
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/source/opensearch/worker/client/OpenSearchClientFactoryTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/source/opensearch/worker/client/OpenSearchClientFactoryTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/test/java/org/opensearch/dataprepper/plugins/source/opensearch/worker/client/OpenSearchClientFactoryTest.java",
          "diff": "@@ -27,6 +27,8 @@\n import software.amazon.awssdk.regions.Region,\n \n import javax.net.ssl.SSLContext,\n+import javax.net.ssl.TrustManager,\n+\n import java.nio.file.Path,\n import java.time.Duration,\n import java.util.Collections,\n@@ -41,6 +43,7 @@\n import static org.mockito.Mockito.mock,\n import static org.mockito.Mockito.mockStatic,\n import static org.mockito.Mockito.never,\n+import static org.mockito.Mockito.times,\n import static org.mockito.Mockito.verify,\n import static org.mockito.Mockito.verifyNoInteractions,\n import static org.mockito.Mockito.when,\n@@ -409,9 +412,40 @@ void createSdkAsyncHttpClient_with_self_signed_certificate() {\n         lenient().when(openSearchSourceConfiguration.getConnectionConfiguration()).thenReturn(connectionConfiguration),\n         lenient().when(connectionConfiguration.getCertPath()).thenReturn(path),\n         try (MockedStatic<TrustStoreProvider> trustStoreProviderMockedStatic = mockStatic(TrustStoreProvider.class)) {\n+            TrustManager[] mockTrustManagers = new TrustManager[] { mock(TrustManager.class) },\n+            trustStoreProviderMockedStatic.when(() -> TrustStoreProvider.createTrustManager(path)).thenReturn(mockTrustManagers),\n             final SdkAsyncHttpClient sdkAsyncHttpClient = createObjectUnderTest().createSdkAsyncHttpClient(openSearchSourceConfiguration),\n             assertThat(sdkAsyncHttpClient, notNullValue()),\n             trustStoreProviderMockedStatic.verify(() -> TrustStoreProvider.createTrustManager(path)),\n         }\n     }\n+    @Test\n+    void createSdkAsyncHttpClient_with_secure_configuration_and_no_cert_path_does_not_trust_all_managers() {\n+        when(connectionConfiguration.getCertPath()).thenReturn(null),\n+        when(connectionConfiguration.isInsecure()).thenReturn(false),\n+        when(connectionConfiguration.getConnectTimeout()).thenReturn(Duration.ofSeconds(30)),\n+        try (MockedStatic<TrustStoreProvider> trustStoreProviderMockedStatic = mockStatic(TrustStoreProvider.class)) {\n+            final SdkAsyncHttpClient sdkAsyncHttpClient = createObjectUnderTest().createSdkAsyncHttpClient(openSearchSourceConfiguration),\n+            assertThat(sdkAsyncHttpClient, notNullValue()),\n+            trustStoreProviderMockedStatic.verify(() -> TrustStoreProvider.createTrustAllManager(), never()),\n+            trustStoreProviderMockedStatic.verify(() -> TrustStoreProvider.createTrustManager(any(Path.class)), never()),\n+        }\n+    }\n+    \n+    @Test\n+    void createSdkAsyncHttpClient_with_insecure_configuration_and_no_cert_path_trusts_all_managers() {\n+        when(connectionConfiguration.getCertPath()).thenReturn(null),\n+        when(connectionConfiguration.isInsecure()).thenReturn(true),\n+        when(connectionConfiguration.getConnectTimeout()).thenReturn(Duration.ofSeconds(30)),\n+        try (MockedStatic<TrustStoreProvider> trustStoreProviderMockedStatic = mockStatic(TrustStoreProvider.class)) {\n+            TrustManager[] mockTrustManagers = new TrustManager[] { mock(TrustManager.class) },\n+            trustStoreProviderMockedStatic.when(() -> TrustStoreProvider.createTrustAllManager())\n+                    .thenReturn(mockTrustManagers),\n+            final SdkAsyncHttpClient sdkAsyncHttpClient = createObjectUnderTest().createSdkAsyncHttpClient(openSearchSourceConfiguration),\n+            assertThat(sdkAsyncHttpClient, notNullValue()),\n+            trustStoreProviderMockedStatic.verify(() -> TrustStoreProvider.createTrustAllManager(), times(1)),\n+            trustStoreProviderMockedStatic.verify(() -> TrustStoreProvider.createTrustManager(any(Path.class)), never()),\n+        }\n+    }\n+\n }"
        },
        {
          "filename": "data-prepper-plugins/opensearch/src/test/resources/test_keystore.jks",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/data-prepper-plugins/opensearch/src/test/resources/test_keystore.jks",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/data-prepper-plugins/opensearch/src/test/resources/test_keystore.jks",
          "diff": " "
        },
        {
          "filename": "e2e-test/log/src/integrationTest/java/org/opensearch/dataprepper/integration/log/EndToEndBasicLogTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/log/src/integrationTest/java/org/opensearch/dataprepper/integration/log/EndToEndBasicLogTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/log/src/integrationTest/java/org/opensearch/dataprepper/integration/log/EndToEndBasicLogTest.java",
          "diff": "@@ -132,6 +132,7 @@ private RestHighLevelClient prepareOpenSearchRestHighLevelClient() {\n                 Collections.singletonList(\"https://127.0.0.1:9200\")),\n         builder.withUsername(\"admin\"),\n         builder.withPassword(\"admin\"),\n+        builder.withInsecure(true),\n         return builder.build().createClient(null),\n     }\n "
        },
        {
          "filename": "e2e-test/log/src/integrationTest/java/org/opensearch/dataprepper/integration/log/ParallelGrokStringSubstituteLogTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/log/src/integrationTest/java/org/opensearch/dataprepper/integration/log/ParallelGrokStringSubstituteLogTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/log/src/integrationTest/java/org/opensearch/dataprepper/integration/log/ParallelGrokStringSubstituteLogTest.java",
          "diff": "@@ -100,6 +100,7 @@ private RestHighLevelClient prepareOpenSearchRestHighLevelClient() {\n                 Collections.singletonList(\"https://127.0.0.1:9200\")),\n         builder.withUsername(\"admin\"),\n         builder.withPassword(\"admin\"),\n+        builder.withInsecure(true),\n         final AwsCredentialsSupplier awsCredentialsSupplier = mock(AwsCredentialsSupplier.class),\n         return builder.build().createClient(awsCredentialsSupplier),\n     }"
        },
        {
          "filename": "e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline-date-pattern-index.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline-date-pattern-index.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline-date-pattern-index.yml",
          "diff": "@@ -11,5 +11,6 @@ grok-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index: \"test-grok-index-%{yyyy.MM.dd}\"\n         flush_timeout: 5000"
        },
        {
          "filename": "e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline-with-aws-secrets.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline-with-aws-secrets.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline-with-aws-secrets.yml",
          "diff": "@@ -17,5 +17,6 @@ grok-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"${{aws_secrets:opensearch-sink:username}}\"\n         password: \"${{aws_secrets:opensearch-sink:password}}\"\n+        insecure: true\n         index: \"test-grok-index\"\n         flush_timeout: 5000\n\\ No newline at end of file"
        },
        {
          "filename": "e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/log/src/integrationTest/resources/basic-grok-e2e-pipeline.yml",
          "diff": "@@ -12,5 +12,6 @@ grok-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index: \"test-grok-index\"\n         flush_timeout: 5000"
        },
        {
          "filename": "e2e-test/log/src/integrationTest/resources/parallel-grok-substitute-e2e-pipeline.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/log/src/integrationTest/resources/parallel-grok-substitute-e2e-pipeline.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/log/src/integrationTest/resources/parallel-grok-substitute-e2e-pipeline.yml",
          "diff": "@@ -22,6 +22,7 @@ pipeline2:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index: \"test-substitute-index\"\n         flush_timeout: 5000\n \n@@ -38,5 +39,6 @@ pipeline3:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index: \"test-grok-index\"\n         flush_timeout: 5000"
        },
        {
          "filename": "e2e-test/peerforwarder/src/integrationTest/java/org/opensearch/dataprepper/integration/peerforwarder/EndToEndLogMetricsTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/peerforwarder/src/integrationTest/java/org/opensearch/dataprepper/integration/peerforwarder/EndToEndLogMetricsTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/peerforwarder/src/integrationTest/java/org/opensearch/dataprepper/integration/peerforwarder/EndToEndLogMetricsTest.java",
          "diff": "@@ -181,6 +181,7 @@ private RestHighLevelClient prepareOpenSearchRestHighLevelClient() {\n                 Collections.singletonList(\"https://127.0.0.1:9200\")),\n         builder.withUsername(\"admin\"),\n         builder.withPassword(\"admin\"),\n+        builder.withInsecure(true),\n         final AwsCredentialsSupplier awsCredentialsSupplier = mock(AwsCredentialsSupplier.class),\n         return builder.build().createClient(awsCredentialsSupplier),\n     }"
        },
        {
          "filename": "e2e-test/peerforwarder/src/integrationTest/java/org/opensearch/dataprepper/integration/peerforwarder/EndToEndPeerForwarderTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/peerforwarder/src/integrationTest/java/org/opensearch/dataprepper/integration/peerforwarder/EndToEndPeerForwarderTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/peerforwarder/src/integrationTest/java/org/opensearch/dataprepper/integration/peerforwarder/EndToEndPeerForwarderTest.java",
          "diff": "@@ -117,6 +117,7 @@ private RestHighLevelClient prepareOpenSearchRestHighLevelClient() {\n                 Collections.singletonList(\"https://127.0.0.1:9200\")),\n         builder.withUsername(\"admin\"),\n         builder.withPassword(\"admin\"),\n+        builder.withInsecure(true),\n         final AwsCredentialsSupplier awsCredentialsSupplier = mock(AwsCredentialsSupplier.class),\n         return builder.build().createClient(awsCredentialsSupplier),\n     }"
        },
        {
          "filename": "e2e-test/peerforwarder/src/integrationTest/resources/aggregate-e2e-pipeline.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/peerforwarder/src/integrationTest/resources/aggregate-e2e-pipeline.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/peerforwarder/src/integrationTest/resources/aggregate-e2e-pipeline.yml",
          "diff": "@@ -12,5 +12,6 @@ aggregate-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index: \"test-peer-forwarder-index\"\n         flush_timeout: 5000\n\\ No newline at end of file"
        },
        {
          "filename": "e2e-test/peerforwarder/src/integrationTest/resources/log-metrics-pipeline.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/peerforwarder/src/integrationTest/resources/log-metrics-pipeline.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/peerforwarder/src/integrationTest/resources/log-metrics-pipeline.yml",
          "diff": "@@ -16,5 +16,6 @@ aggregate-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index: \"test-log-metrics-index\"\n         flush_timeout: 5000"
        },
        {
          "filename": "e2e-test/trace/src/integrationTest/java/org/opensearch/dataprepper/integration/trace/EndToEndRawSpanTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/trace/src/integrationTest/java/org/opensearch/dataprepper/integration/trace/EndToEndRawSpanTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/trace/src/integrationTest/java/org/opensearch/dataprepper/integration/trace/EndToEndRawSpanTest.java",
          "diff": "@@ -115,6 +115,7 @@ public void testPipelineEndToEnd() {\n                 Collections.singletonList(\"https://127.0.0.1:9200\")),\n         builder.withUsername(\"admin\"),\n         builder.withPassword(\"admin\"),\n+        builder.withInsecure(true),\n         final RestHighLevelClient restHighLevelClient = builder.build().createClient(null),\n         // Wait for data to flow through pipeline and be indexed by ES\n         await().atLeast(3, TimeUnit.SECONDS).atMost(20, TimeUnit.SECONDS).untilAsserted("
        },
        {
          "filename": "e2e-test/trace/src/integrationTest/java/org/opensearch/dataprepper/integration/trace/EndToEndServiceMapTest.java",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/trace/src/integrationTest/java/org/opensearch/dataprepper/integration/trace/EndToEndServiceMapTest.java",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/trace/src/integrationTest/java/org/opensearch/dataprepper/integration/trace/EndToEndServiceMapTest.java",
          "diff": "@@ -81,6 +81,7 @@ public void testPipelineEndToEnd() {\n                 Collections.singletonList(\"https://127.0.0.1:9200\")),\n         builder.withUsername(\"admin\"),\n         builder.withPassword(\"admin\"),\n+        builder.withInsecure(true),\n         final AwsCredentialsSupplier awsCredentialsSupplier = mock(AwsCredentialsSupplier.class),\n         final RestHighLevelClient restHighLevelClient = builder.build().createClient(awsCredentialsSupplier),\n "
        },
        {
          "filename": "e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline-from-build.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline-from-build.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline-from-build.yml",
          "diff": "@@ -18,5 +18,6 @@ raw-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index_type: trace-analytics-raw\n         flush_timeout: 5000\n\\ No newline at end of file"
        },
        {
          "filename": "e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline-latest-release.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline-latest-release.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline-latest-release.yml",
          "diff": "@@ -18,5 +18,6 @@ raw-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index_type: trace-analytics-raw\n         flush_timeout: 5000"
        },
        {
          "filename": "e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/trace/src/integrationTest/resources/raw-span-e2e-pipeline.yml",
          "diff": "@@ -16,10 +16,12 @@ raw-pipeline:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n   sink:\n     - opensearch:\n         hosts: [ \"https://node-0.example.com:9200\" ]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index_type: trace-analytics-raw\n         flush_timeout: 5000"
        },
        {
          "filename": "e2e-test/trace/src/integrationTest/resources/service-map-e2e-pipeline.yml",
          "old_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/b0386a5af3fb71094ba6c86cd8b2afc783246599/e2e-test/trace/src/integrationTest/resources/service-map-e2e-pipeline.yml",
          "new_url": "https://raw.githubusercontent.com/opensearch-project/data-prepper/98fcf0d0ff9c18f1f7501e11dbed918814724b99/e2e-test/trace/src/integrationTest/resources/service-map-e2e-pipeline.yml",
          "diff": "@@ -18,5 +18,6 @@ service-map-pipeline:\n         hosts: [\"https://node-0.example.com:9200\"]\n         username: \"admin\"\n         password: \"admin\"\n+        insecure: true\n         index_type: trace-analytics-service-map\n         flush_timeout: 5000"
        }
      ]
    }
  ]
]